window.COURSE_DATA = {"language":"en","lastDownload":"2021-06-18T14:40:51Z","title":"Phase 1","modules":[{"id":15165,"name":"Topic 0: Welcome","status":"unlocked","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g0636c52b02da2ba839f00457669c6ce1","items":[{"id":142201,"title":"Welcome","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-welcome-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-welcome-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003cp\u003eWelcome to Flatiron School's Data Science Program! Over the next 800-1000 hours you will learn everything you need to know to get started as a professional Data Scientist. Before you get started we wanted to share an important thought. This is going to be the most rewarding learning experience you've ever had, we promise. Let's get started!\u003c/p\u003e\n\n\u003ch2\u003eLearning How To Learn\u003c/h2\u003e\n\n\u003cp\u003eThe most common misconception we get when people start this course is that we will teach you programming, math, modeling and visualization. Don't get us wrong, we are going to teach you those things, but that's actually not the most important set of skills you're going to learn.\u003c/p\u003e\n\n\u003cp\u003eOver your career as a professional data scientist you're going to end up programming in languages and using modeling techniques that haven't even been invented yet. So, the most important thing we can (and we will) teach you is \u003cstrong\u003ehow to learn\u003c/strong\u003e. While covering topics like Python, Statistics, and Regression, we'll work with you to build the skills required to read and understand error messages and to google for answers so once you get a job as a data scientist, when you have to learn a new language, library, or model, you'll know how to quickly get started. We'll also teach you your first set of tools so that you can contribute immediately using them as a professional data scientist.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-welcome-intro\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-welcome-intro\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-welcome-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"welcome"}]},{"id":15166,"name":"Topic 1: Getting Started with Data Science","status":"started","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"gf3dbc2f4180a211f47cc0c8f9abfa6ef","items":[{"id":142202,"title":"Getting Started with Data Science - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-section-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-section-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll learn about one of the core topics required for data science: coding! You'll get exposed to the fundamentals of Python as well as a brief introduction to data visualization. \u003c/p\u003e\n\n\u003ch2\u003eSetting the Stage\u003c/h2\u003e\n\n\u003cp\u003eWe start this section by looking at the kinds of problems that data science can solve and by giving a sense of the end to end process of \"doing data science\". We then get you set up with a professional data science environment with Git, GitHub, the command line, and the Anaconda Python distribution so you can start using industry standard tools from day 1.\u003c/p\u003e\n\n\u003cp\u003eWe also run you through the workflow that we'll be using for the projects so you can get comfortable with how to access and update content and get some practice using the tools we just set you up with! And then to bring it all together, we ask you to \"code along\" with us to complete your first (very simple) data science project.\u003c/p\u003e\n\n\u003cp\u003eIf you're new to Python (or programming), you may be a little overwhelmed at this point. Don't worry. We'll spend all of the rest of the course practicing and deepening your understanding of the materials we introduced in the first part of the section.\u003c/p\u003e\n\n\u003ch2\u003eCoding in Python\u003c/h2\u003e\n\n\u003cp\u003eNext, we introduce some of the most important elements of programming in Python. We start from the basics, but move fairly quickly. We cover variables, common data types, conditionals, lists, and dictionaries. This may not all seem immediately relevant to data science, but it's designed to give you the tools that you'll need for all of your future projects in Python.\u003c/p\u003e\n\n\u003ch2\u003eVisualize that Data\u003c/h2\u003e\n\n\u003cp\u003eFinally, we take a little bit of time to introduce you to \u003ccode\u003eMatplotlib\u003c/code\u003e - one of the most popular tools in Python for generating visualizations.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introduction-section-intro/master/images/matplotlib.jpg\" width=\"450\"\u003e\u003c/p\u003e\n\n\u003cp\u003eYou will also use some simple datasets to generate bar graphs, histograms, and scatter plots. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eRemember, it's OK to feel a little uncomfortable. For some students, this section will be the most difficult as it introduces so many new concepts at once, but you'll continue to practice these day after day, until they become second nature. For those of you who already know some of these contents, we've introduced additional challenges for students who are finding the labs easy, so look out for the \"Level Up (optional)\" section in some of the labs to get some deeper practice with Python and visualization.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-introduction-section-intro\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-introduction-section-intro\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-introduction-section-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"getting-started-with-data-science-introduction"},{"id":142203,"title":"Problems Data Science Can Solve","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-problems-data-science-can-solve\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-problems-data-science-can-solve/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson we will look at what data science is and the different kinds of problems that it can be used to solve. By the end of the lesson you should be able to answer which technique you would use as a professional data scientist for a particular business problem. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the problems data science can solve\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhat Problems Can Data Science Solve?\u003c/h2\u003e\n\n\u003cp\u003eCongratulations on deciding to become a data scientist! Before we dig into the details of the tools and techniques that you'll need to learn, it's important to take a little time to understand what you'll be able to do once you graduate. Here is a list of some of the common types of business problems data scientists are expected to solve. \u003c/p\u003e\n\n\u003ch2\u003e1. Regression: How much or how many?\u003c/h2\u003e\n\n\u003cp\u003eRegression analysis is used to predict a continuous value - such as the number of staff you'll need for a busy shift or the likely sale price of a house. \u003c/p\u003e\n\n\u003ch3\u003eExample:  Sales or Market Forecasts\u003c/h3\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-problems-data-science-can-solve/master/images/Image_185_forecast_corrected.png\" width=\"650\"\u003e\u003c/p\u003e\n\n\u003cp\u003eTraditional trend analysis only looks at how one business entity changes with respect to another. Regression analyses can provide insight into how an outcome will change when several other variables are modified.\u003c/p\u003e\n\n\u003ch2\u003e2. Classification: Which category?\u003c/h2\u003e\n\n\u003cp\u003eClassification is used to predict which category something will fall into. If you're trying to figure out whether a client is likely to default on a loan (i.e., default or no default) or which of your products a customer is likely to prefer, you're dealing with a classification problem.\u003c/p\u003e\n\n\u003ch3\u003eExample: Credit Rating\u003c/h3\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-problems-data-science-can-solve/master/images/credit.png\" width=\"850\"\u003e\u003c/p\u003e\n\n\u003cp\u003eCredit card companies receive hundreds of thousands of applications for new credit cards every week. These applications contain detailed information on social, economic, and personal attributes of applicants. Classification analysis can allow companies to categorize these applications based on the quality of their credit.\u003c/p\u003e\n\n\u003ch2\u003e3. Anomaly detection: Is this weird?\u003c/h2\u003e\n\n\u003cp\u003eAnomaly detection is a common data science technique used to find unusual patterns that do not conform to expected behavior. It has applications across various industries from intrusion detection (identifying strange patterns in network traffic that could signal a hack) to fraud detection in credit card transactions to fault detection in operating environments.\u003c/p\u003e\n\n\u003ch3\u003eExample: Identifying Fraud\u003c/h3\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-problems-data-science-can-solve/master/images/Image_186_fishanomaly.png\" alt=\"img\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis approach focuses on finding \u003cstrong\u003eoutliers\u003c/strong\u003e in the data that appear to have unusual patterns. This serves as a first indication of the presence of fraudulent activity. Such approaches are also frequently applied by large social networks like Facebook, Twitter, etc.\u003c/p\u003e\n\n\u003ch2\u003e4. Recommender systems: Which item would a user prefer?\u003c/h2\u003e\n\n\u003cp\u003eRecommender systems are one of the most popular applications of data science today. They are used to predict user preferences towards a product/service. Almost every major tech company (Amazon, Netflix, Google, Facebook) has applied them in some form or the other. You might have noticed phrases like \"If you like this product, you may also like ...\", \"Users who bought this item also bought ...\", and \"Based on your preferences, we recommend following products to you ...\". You got it, these are all recommender systems in action. \u003c/p\u003e\n\n\u003cp\u003eRecommender systems can help a business retain customers by providing them with tailored suggestions specific to their needs. They can help increase sales and create brand loyalty through relevant personalization. When a customer feels as though they are understood by your brand, they are more likely to stay loyal and continue purchasing through your site.\nAccording to a recent study by McKinsey, up to 75% of what consumers watch on Netflix comes from the company’s recommender system. Retail giant Amazon credits recommender systems with 35% of their revenue. Best Buy decided to focus on their online sales, and in 2016’s second quarter they reported a 23.7% increase, thanks in part to their recommender system. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWhile you're going to learn to use a wide range of tools and techniques throughout this course, most of them will be used to predict a continuous value, to decide the most likely category for a value, to identify anomalies or to provide recommendations.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-problems-data-science-can-solve\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-problems-data-science-can-solve\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-problems-data-science-can-solve/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"problems-data-science-can-solve"},{"id":142204,"title":"The Data Science Process","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-the-data-science-process\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-the-data-science-process/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch1\u003eThe Data Science Process\u003c/h1\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eJust as it's important to understand the kinds of problems that can be solved by data science, it's also important to have a sense of the process used to conduct data science. In this lesson, we'll outline the lifecycle of a typical data science project - from business understanding through data visualization.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the full data science process\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eThe Data Science Process\u003c/h2\u003e\n\n\u003cp\u003eThere is much more to data science than just selecting, applying and tuning Machine Learning algorithms. A data science project will often include the following stages:\n\u003cbr\u003e\n\u003cbr\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_process.png\" width=\"950\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cbr\u003e\n\u003cbr\u003e\nIn this section, you will go through each of these stages and see what is involved.\u003c/p\u003e\n\n\u003ch2\u003eBusiness Understanding / Domain Knowledge\u003c/h2\u003e\n\n\u003cp\u003eBefore trying to solve a data related problem, it is important that a Data Scientist/Analyst has a clear understanding of the problem domain and the kinds of question(s) that need to be answered by their analysis. Some of the questions that the Data Scientist might be asked include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eHow much or how many? E.g. Identifying the number of new customers likely to join your company in the next quarter. (Regression analysis)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eWhich category? E.g. Assigning a document to a given category for a document management system. (Classification analysis)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eWhich group? E.g. Creating a number of groups (segments) of your customers based on their monetary value. (Clustering)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIs this weird? E.g. Detecting suspicious activities of customers by a credit card company to identify potential fraud. (Anomaly detection)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eWhich items would a user prefer? E.g. Recommending new products (such as movies, books or music) to existing customers (Recommendation systems)\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cbr\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_domain.png\" width=\"450\"\u003e\n\u003cbr\u003e\u003c/p\u003e\n\n\u003ch2\u003eData Mining\u003c/h2\u003e\n\n\u003cp\u003eAfter identifying the objective for your analysis and agreeing on analytical question(s) that need to be answered, the next step is to identify and gather the required data. \u003c/p\u003e\n\n\u003cp\u003eData mining is a process of identifying and collecting data of interest from different sources - databases, text files, APIs, the Internet, and even printed documents. Some of the questions that you may ask yourself at this stage are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWhat data do I need in order to answer my analytical question?\u003c/li\u003e\n\u003cli\u003eWhere can I find this data?\u003c/li\u003e\n\u003cli\u003eHow can I obtain the data from the data source?\u003c/li\u003e\n\u003cli\u003eHow do I sample from this data?\u003c/li\u003e\n\u003cli\u003eAre there any privacy/legal issues that I must consider prior to using this data?\n\u003cbr\u003e\n\u003cbr\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_datamining.png\" width=\"650\"\u003e\n\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eData Cleaning\u003c/h2\u003e\n\n\u003cp\u003eData cleaning is usually the most time-consuming stage of the Data Science process. This stage may take up to 50-80% of a Data Scientist's time as there are a vast number of possible problems that make the data \"dirty\" and unsuitable for analysis. Some of the problems you may see in data are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eInconsistencies in data\u003c/li\u003e\n\u003cli\u003eMisspelled text data\u003c/li\u003e\n\u003cli\u003eOutliers\u003c/li\u003e\n\u003cli\u003eImbalanced data\u003c/li\u003e\n\u003cli\u003eInvalid/outdated data\u003c/li\u003e\n\u003cli\u003eMissing data\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis stage requires the development of a careful strategy on how to deal with these issues. Such a strategy may vary substantially between different analyses depending on the nature of problems being solved. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_data_cleaning_corrected.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eData Exploration\u003c/h2\u003e\n\n\u003cp\u003eData exploration or Exploratory Data Analysis (EDA) helps highlight the patterns and relations in data. Exploratory analysis may involve the following activities:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCalculating basic descriptive statistics such as the mean, the median, and the mode\u003c/li\u003e\n\u003cli\u003eCreating a range of plots including histograms, scatter plots, and distribution curves to identify trends in the data\u003c/li\u003e\n\u003cli\u003eOther interactive visualizations to focus on a specific segments of data \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_exploration.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eFeature Engineering\u003c/h2\u003e\n\n\u003cp\u003eA \"Feature\" is a measurable attribute of the phenomenon being observed - the number of bedrooms in a house or the weight of a vehicle. Based on the nature of the analytical question asked in the first step, a Data Scientist may have to engineer additional features not found in the original dataset. Feature engineering is the process of using expert knowledge to transform raw data into meaningful features that directly address the problem you are trying to solve. For example, taking weight and height to calculate Body Mass Index for the individuals in the dataset. This stage will substantially influence the accuracy of the predictive model you construct in the next stage. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_engineering.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003ch2\u003ePredictive Modeling\u003c/h2\u003e\n\n\u003cp\u003eModeling is the stage where you use mathematical and/or statistical approaches to answer your analytical question. Predictive Modeling refers to the process of using probabilistic statistical methods to try to predict the outcome of an event. For example, based on employee data, an organization can develop a predictive model to identify employee attrition rate in order to develop better retention strategies.\u003c/p\u003e\n\n\u003cp\u003eChoosing the \"right\" model is often a challenging decision as there is never a single right answer. Selecting a model involves balancing the accuracy and computational cost of the analysis process. For example, some recent approaches in predictive modeling such as deep learning have been shown to offer vastly improved accuracy of results, but with a very high computational cost.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_predictive.png\" width=\"250\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eData Visualization\u003c/h2\u003e\n\n\u003cp\u003eAfter deriving the required results from a statistical model, visualizations are normally used to summarize and present the findings of the analysis process in a form which is easily understandable by non-technical decision makers. \u003c/p\u003e\n\n\u003cp\u003eData visualization could be thought of as an evolution of visual communication techniques as it deals with the visual representation of data. There are a wide range of different data visualization techniques, from bar graphs, line graphs and scatter plots to alluvial diagrams and spatio-temporal visualizations, each of which will work better for presenting certain types of information.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_visualization.png\" width=\"650\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we looked at the end-to-end Data Science process to give a sense of the activities that Data Scientists engage with.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-the-data-science-process\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-the-data-science-process\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-the-data-science-process/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"the-data-science-process"},{"id":142205,"title":"Setting up a Professional Data Science Environment - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-introduction\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-introduction/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you want to become a professional data scientist, it’s important to take a little time to “set yourself up for success” by installing and learning to use the right tools on your computer.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eList some tools used by professional data scientists, and why they are useful\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eWhat Tools do Professional Data Scientists Use?\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003ePython\u003c/strong\u003e - There are many languages that can be used for data science, but these days most data scientists are using Python to write their code.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eJupyter Notebook\u003c/strong\u003e - Most of those data scientists use Jupyter Notebook for writing their Python code. Jupyter Notebook is a tool that allows you to mix comments in-between your code snippets so you can document and share your thought process and make it easier for others to review, replicate, and expand on your work. It's also what we're using for almost all of our lessons in this course!\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eAnaconda\u003c/strong\u003e - Anaconda is one of the most popular ways for data scientists to install Python and Jupyter on their computers. It also provides package management and virtual environments so you can get all the latest data science tools running, like NumPy, Scikit-Learn, and Tensorflow, and so you can use different versions of Python and your packages for different projects without them conflicting with each other.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eGit\u003c/strong\u003e - Git is a version control system. It’s a way of keeping track of all the changes made across your project. Think of it like “track changes” in Word - but with the ability to track changes across multiple documents. At Flatiron School, we use Git to keep track of all of the lessons we create and all the changes we make to them.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eGitHub\u003c/strong\u003e - GitHub is a website where data scientists (and programmers) can save their work in case their computer breaks, and share it with their team or the world! At Flatiron School, we store all of our lessons on GitHub.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIt’s going to take us a few minutes to get this all installed, but once we do, not only will you be set-up for working through the course, but you’ll also have a professional data science setup on your computer for any future courses or projects you want to work on!\u003c/p\u003e\n\u003ch2\u003eComputer Prerequisites\u003c/h2\u003e\n\u003cp\u003eThere are many amazing computing devices available these days, but not all of them will allow you to do data science. We love smartphones, flip phones, Chromebooks, tablets (including iPads), Game Boys, Nintendo Switches, Rokus and Arduinos. But you’re not going to be able to complete this course on any of those devices.\u003c/p\u003e\n\u003cp\u003eYou’re going to need a computer (laptop or desktop). It should be running a recent (last 3-4 years) version of MacOS, Windows or Linux, and ideally, it should have 8Gb of RAM and at least 20Gb free hard drive space. More information \u003ca id=\"32789\" class=\"instructure_file_link instructure_scribd_file\" href=\"viewer/files/ComputerRequirements.pdf?canvas_download=1\u0026amp;canvas_qs_wrap=1\" target=\"_blank\" data-canvas-previewable=\"true\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/files/32789\" data-api-returntype=\"File\"\u003ein this document\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eIn the next few lessons, you'll install and configure some of the primary tools that you'll use as a data scientist!\u003c/p\u003e","exportId":"setting-up-a-professional-data-science-environment-introduction"},{"id":142206,"title":"Setting up a Professional Data Science Environment - MacOS Installation","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-science-env-mac-installation\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-mac-installation\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-mac-installation/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eThere are two major pieces we need to install in order to set you up for success as a professional data scientist! In this lesson, we will be installing Git and Anaconda for MacOS.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eInstall Git\u003c/li\u003e\n\u003cli\u003eInstall Anaconda\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003ePlease note - the exact names and versions will change over time.\u003c/p\u003e\n\u003ch2\u003eInstalling Git\u003c/h2\u003e\n\u003cp\u003eIf you are comfortable with the command line and have installed \u003ca href=\"https://brew.sh/\" target=\"_blank\"\u003e homebrew\u003c/a\u003e, you should install Git by running the command \u003ccode\u003ebrew install git\u003c/code\u003e in a terminal window. If you have no idea what that last sentence meant, please disregard and follow the below steps.\u003c/p\u003e\n\u003ch3\u003eOverview\u003c/h3\u003e\n\u003cp\u003ePlease also reference the image screengrabs for more detail below.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eNavigate to Git's download page for MacOS \u003ca href=\"https://git-scm.com/download/mac\" target=\"_blank\"\u003ehere\u003c/a\u003e. Since you are not using homebrew, you should click on the latest version number under the Binary Installer option\n\u003cul\u003e\n\u003cli\u003eThis should take you to another page, where the download of the installer dmg file should begin automatically after a few seconds\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDouble click on the downloaded dmg file to open a small Finder window\u003c/li\u003e\n\u003cli\u003eDouble click on the .pkg file to run it, and click \"Open\" when the pop-up security warning asks if you are sure you want to open it\n\u003cul\u003e\n\u003cli\u003eIf you get a security warning that simply says the file cannot be opened because it is from an unidentified developer, then:\n\u003cul\u003e\n\u003cli\u003eClick on the Apple symbol at the top left of your screen\u003c/li\u003e\n\u003cli\u003eSelect “System Preferences” from the drop-down menu\u003c/li\u003e\n\u003cli\u003eSelect “Security and Privacy”\u003c/li\u003e\n\u003cli\u003eSelect the “General” tag\u003c/li\u003e\n\u003cli\u003eBelow the “Allow apps downloaded from” option, click the \"Open Anyway\" option. You may need to click the lock to make changes, which will prompt you to enter your password\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhen the Installer opens, click \"Continue\" on each screen, then \"Install\"\n\u003cul\u003e\n\u003cli\u003eYou may need to enter your password when prompted\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhen the installation is complete, click the \"Close\" button\n\u003cul\u003e\n\u003cli\u003eIf the installation window asks if you want to move the installer .pkg file to trash, you can click “Move to Trash”\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4\u003eGit Installation Step-by-Step:\u003c/h4\u003e\n\u003cp\u003e\u003ciframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vQtsPSXRa47q3beYt81S9lchOz5ZC5vrqK324GH1GuGGQXSALFfpBSF_VWVcm8GrQNqvGfjxZeohx5I/embed?start=false\u0026amp;loop=false\u0026amp;delayms=3000\" width=\"960\" height=\"569\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003ch3\u003eConfirming Your Git Installation\u003c/h3\u003e\n\u003cp\u003eTo confirm you have installed Git successfully:\u003c/p\u003e\n\u003cp\u003e1. Open a terminal window\u003c/p\u003e\n\u003cul style=\"list-style-type: circle;\"\u003e\n\u003cli\u003eWhen we ask you to use the terminal, we mean the “Terminal” app in the “Utilities” folder within your “Applications” folder - or, find the \"Terminal\" app in your Launchpad (often found in a subdirectory named \"Other\")\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e2. Type \u003ccode\u003egit --version\u003c/code\u003e: It should return the version of git you are running\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003chr\u003e\n\u003ch2\u003eInstalling Anaconda\u003c/h2\u003e\n\u003cp\u003eThe easiest way to get set up with Python and Jupyter Notebook so you can start coding is to install the Anaconda distribution.\u003c/p\u003e\n\u003ch3\u003eOverview:\u003c/h3\u003e\n\u003cp\u003ePlease also reference the image screengrabs for more detail below.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eDownload the latest version of Anaconda \u003ca href=\"https://www.anaconda.com/products/individual\" target=\"_blank\"\u003ehere\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eOpen the pkg file once it has downloaded to open the Anaconda installer\u003c/li\u003e\n\u003cli\u003eClick \"Continue\" to run the package to determine if the software can be installed\u003c/li\u003e\n\u003cli\u003eWhen the Installation window opens, click \"Continue\"\u003c/li\u003e\n\u003cli\u003eRead the Read Me, then click \"Continue\"\u003c/li\u003e\n\u003cli\u003eAccept the license by clicking \"Continue\", then click \"Agree\" in the pop-up window\u003c/li\u003e\n\u003cli\u003eClick \"Install\" to install the software\n\u003cul\u003e\n\u003cli\u003eYou may need to enter your password when prompted\u003c/li\u003e\n\u003cli\u003eYou can ignore any supplementary materials advertised, such as PyCharm\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClick \"Close\" when the installation was completed successfully\n\u003cul\u003e\n\u003cli\u003eIf the installation window asks if you want to move the installer .pkg file to trash, you can click “Move to Trash”\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4\u003eAnaconda Installation Step-by-Step:\u003c/h4\u003e\n\u003cp\u003e\u003ciframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vQ5d1LpSJt8OnoANlTfAHZg8ff4zVS22HPV1_98k8bGRQEotl686kSjzqEi_vjhXudMB4ui9i_wBheJ/embed?start=false\u0026amp;loop=false\u0026amp;delayms=3000\" width=\"960\" height=\"569\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003ch3\u003eConfirming Your Anaconda Installation\u003c/h3\u003e\n\u003cp\u003eTo confirm you have installed Anaconda successfully:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eOpen a terminal window\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eType \u003ccode\u003econda info\u003c/code\u003e: It should return a table of details about your conda installation\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2\u003eConfirmation\u003c/h2\u003e\n\u003cp\u003eThis image shows what it should look like when you confirm both your Git and Anaconda installs (although version numbers and details may change):\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-mac-installation/master/images/mac-confirm-install.png\" width=\"500\"\u003e\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eCongratulations! If you've gotten this far and everything has worked, you have successfully installed Git and Anaconda on your Mac!\u003c/p\u003e","exportId":"setting-up-a-professional-data-science-environment-macos-installation"},{"id":142207,"title":"Setting up a Professional Data Science Environment - Windows Installation","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-science-env-windows-installation\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-windows-installation\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-windows-installation/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eThere are two major pieces we need to install in order to set you up for success as a professional data scientist! In this lesson, we will be installing Git and Anaconda for Windows.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eInstall Git\u003c/li\u003e\n\u003cli\u003eInstall Anaconda\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eLet’s start by getting Git and Anaconda installed.\u003c/p\u003e\n\u003cp\u003ePlease note - the exact names and versions will change over time.\u003c/p\u003e\n\u003ch2\u003eInstalling Git\u003c/h2\u003e\n\u003ch3\u003eOverview:\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eDownload the install package from \u003ca href=\"https://git-scm.com/download/win\" target=\"_blank\"\u003ehere\u003c/a\u003e.\n\u003cul\u003e\n\u003cli\u003eIf you do not know whether you need the 32 or 64-bit install, check your system type. On Windows 10, head to Settings \u0026gt; System \u0026gt; About. Under the Device specifications header, next to System type, you’ll see if Windows and your processor are 32-bit or 64-bit.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOpen the downloaded exe file\n\u003cul\u003e\n\u003cli\u003eYou can either click the downloaded file at the bottom of your browser to open, or navigate to your downloads folder\u003c/li\u003e\n\u003cli\u003eIt may open a window asking if you want to allow this application to make changes to your device, click “Yes”\u003c/li\u003e\n\u003cli\u003eClick “Next” to accept the license\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSelect the installation desination\n\u003cul\u003e\n\u003cli\u003eThe default option is recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSelect components\n\u003cul\u003e\n\u003cli\u003eMake sure to keep the “Windows Explorer integration” options checked\u003c/li\u003e\n\u003cli\u003eOtherwise, the default options are recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eChoose a default editor that you are comfortable with, or choose either Nano or Visual Studio Code if you have not used an editor before\n\u003cul\u003e\n\u003cli\u003eIf you know or have used vi/vim, feel free to use it (otherwise it is not recommended)\u003c/li\u003e\n\u003cli\u003eYou must have the editor installed to continue. You can set a default now and change it later.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAdjust the PATH environment\n\u003cul\u003e\n\u003cli\u003eSelect “Use Git from the Windows Command Prompt”\u003c/li\u003e\n\u003cli\u003eThe first option is also fine, as you’ll mainly be using Git from the new “Git Bash” program that is being installed, but the second option is ideal as it’ll give you the option of using it through either Git Bash or the Windows Command Prompt in the future if you wish\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eChoose HTTPS transport backend.\n\u003cul\u003e\n\u003cli\u003eSelect the “Use the OpenSSL library” option\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConfigure line-ending conversions\n\u003cul\u003e\n\u003cli\u003eThe default option is recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConfigure the terminal emulator\n\u003cul\u003e\n\u003cli\u003eSelect MinTTY as the default terminal emulator\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eChoose the default behavior of \u003ccode\u003egit pull\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003eThe default option is recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConfigure extra options to enable file system caching\u003c/li\u003e\n\u003cli\u003eChoose a credential helper\n\u003cul\u003e\n\u003cli\u003eSelect Git Credential Manager\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWait while Git is installed onto your computer\u003c/li\u003e\n\u003cli\u003eClick \"Finish\" to complete set-up\n\u003cul\u003e\n\u003cli\u003eIt is not necessary to view the release notes\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e* It is \u003cstrong\u003estrongly recommended\u003c/strong\u003e that you select any options to install and use the \"Git Bash\" shell - it's generally included by default. The Git Bash shell will allow students with either Windows or Mac computers to run the same set of commands, and all commands in this program follow that convention.\u003c/p\u003e\n\u003cp\u003eNote - if there are any differences in the options provided in the installer you download, accept the defaults.\u003c/p\u003e\n\u003ch4\u003eGit Installation Step-by-Step:\u003c/h4\u003e\n\u003cp\u003e\u003ciframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vSB09TxDpbxOjud38L2dX0_YJbh2JOVDMYqkTOxhEbhKKLjCmwM9JP27JTJ8VtOYAwnPzlJg_Ipf7gd/embed?start=false\u0026amp;loop=false\u0026amp;delayms=3000\" width=\"960\" height=\"569\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003ch3\u003eConfirming Your Git Installation\u003c/h3\u003e\n\u003cp\u003eTo confirm you have installed Git successfully:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eOpen a terminal window\n\u003cul\u003e\n\u003cli\u003eWhen we ask you to use the terminal, we mean the Git Bash application we just installed through Git\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eType \u003ccode\u003egit --version\u003c/code\u003e: It should return the version of git you are running\u003c/li\u003e\n\u003c/ol\u003e\n\u003chr\u003e\n\u003ch2\u003eInstalling Anaconda\u003c/h2\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-windows-installation/master/images/win_anaconda.png\" width=\"650\"\u003e\u003c/p\u003e\n\u003cp\u003eThe easiest way to get set up with Python and Jupyter Notebook so you can start coding is to install the Anaconda distribution.\u003c/p\u003e\n\u003ch3\u003eOverview:\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eDownload the latest version of Anaconda \u003ca href=\"https://www.anaconda.com/download/#windows\" target=\"_blank\"\u003ehere\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003eSame as with the Git installation - If you do not know whether you need the 32 or 64-bit install, check your system type.\u003c/li\u003e\n\u003cli\u003eA window may pop up asking if you want to give Anaconda your information in return for a cheat sheet - you do not need to do so unless you want to.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOpen the .exe file once it has downloaded to open the Anaconda installer\n\u003cul\u003e\n\u003cli\u003eClick \"Next\", then \"I Agree\" to accept the license\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eInstall for \"Just Me\"\u003c/li\u003e\n\u003cli\u003eSelect the destination folder\n\u003cul\u003e\n\u003cli\u003eThe default option is recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eChoose both Advanced Installation Options\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003eAlthough you will see a warning from the installer, \u003cstrong\u003e\u003cem\u003emake sure\u003c/em\u003e\u003c/strong\u003e to choose \u003cem\u003eboth\u003c/em\u003e \"Add Anaconda to my PATH environment variable\" \u003cem\u003eand\u003c/em\u003e \"Register Anaconda as my default Python\" !!\u003c/li\u003e\n\u003cli\u003eFor this program, these options will actually avoid you needed to uninstall and reinstall Anaconda in the near future, which is what they're warning about\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWait while Anaconda is installed on your computer\n\u003cul\u003e\n\u003cli\u003eYou can ignore any supplementary materials advertised, such as PyCharm\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhen it thanks you for installing Anaconda, click \"Finish\"\n\u003cul\u003e\n\u003cli\u003eYou do not need to learn more about your installation, and can close the browser window if one opens\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4\u003eAnaconda Installation Step-by-Step:\u003c/h4\u003e\n\u003cp\u003e\u003ciframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vS_m9nr642u3w6p3MmgyvnRWHgVRLVA_8EwsW8UDxgbxmMU2cJ04AkQSbBafLqGOJgQveXLzQtBWIas/embed?start=false\u0026amp;loop=false\u0026amp;delayms=3000\" width=\"960\" height=\"569\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003ch3\u003eConfirming Your Anaconda Installation\u003c/h3\u003e\n\u003cp\u003eTo confirm you have installed Anaconda successfully:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eOpen a terminal window\u003c/li\u003e\n\u003cli\u003eType \u003ccode\u003econda info\u003c/code\u003e: It should return a table of details about your conda installation\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eCongratulations! If you've gotten this far and everything has worked, you have successfully installed Git and Anaconda on your Windows PC!\u003c/p\u003e","exportId":"setting-up-a-professional-data-science-environment-windows-installation"},{"id":142208,"title":"Setting up a Professional Data Science Environment - Configuring Git and Anaconda","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-science-env-config\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-config\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-config/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this lesson, you'll continue setting up your professional data science environment by configuring your terminal to work with GitHub, creating an Anaconda virtual environment, setting up your new virtual environment to open by default from your terminal, and confirming your configuration.\u003c/p\u003e  \u003ch2\u003eObjectives\u003c/h2\u003e  \u003cp\u003eYou will be able to:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eUse basic commands to navigate the command line\u003c/li\u003e \u003cli\u003ePractice utilizing Git and GitHub\u003c/li\u003e \u003cli\u003eSummarize why virtual environments are used\u003c/li\u003e \u003cli\u003eSet up a virtual environment\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eConnecting Your Terminal to GitHub\u003c/h2\u003e  \u003cp\u003eNow that you have Git installed locally, you'll be often working back and forth between GitHub, a service which hosts Git repositories online, and your local computer. To better integrate with GitHub, you should set up your name and email address:\u003c/p\u003e  \u003col\u003e \u003cli\u003e\n\u003cp\u003eIn your terminal window*, type \u003ccode\u003egit config --global user.name\u003c/code\u003e\u003c/p\u003e  \u003cul\u003e \u003cli\u003eIf it returns your name, you’re set!\u003c/li\u003e \u003cli\u003eIf it returns nothing or displays an error message, type \u003ccode\u003egit config --global user.name “Your Name”\u003c/code\u003e - replacing Your Name with your name inside the quotes (this should be your real first and last name, not your GitHub username)\u003c/li\u003e \u003c/ul\u003e\n\u003c/li\u003e \u003cli\u003e\n\u003cp\u003eIn your terminal window, type \u003ccode\u003egit config --global user.email\u003c/code\u003e\u003c/p\u003e  \u003cul\u003e \u003cli\u003eIf it returns your email address, you’re set!\u003c/li\u003e \u003cli\u003eIf it returns nothing or displays an error message, type \u003ccode\u003egit config --global user.email your@email.com\u003c/code\u003e - replacing \u003ca href=\"mailto:your@email.com\"\u003eyour@email.com\u003c/a\u003e with your email address\u003c/li\u003e \u003c/ul\u003e\n\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003e* Remember, when we say \"terminal\" we mean the Terminal app for Mac, and the Git Bash program for Windows\u003c/p\u003e  \u003ch2\u003eCloning this Repository\u003c/h2\u003e  \u003cp\u003eTo complete the later steps in this configuration process, you’re going to need to download a copy of the files in this repository, so we should do this now since you already have a terminal window open.\u003c/p\u003e  \u003cp\u003eYou should get in the habit of checking exactly where you are in your Terminal before downloading anything. Use the command \u003ccode\u003epwd\u003c/code\u003e to print your working directory. If you're not in a place you want to download lessons, you should navigate to a place you want to keep your Flatiron repositories and files.\u003c/p\u003e  \u003cp\u003eIf you have not used the command line much or at all, follow the below steps:\u003c/p\u003e  \u003col\u003e \u003cli\u003eOpen a new terminal window\u003c/li\u003e \u003cli\u003eType \u003ccode\u003epwd\u003c/code\u003e - this should show your home directory, the most basic of paths on your computer\u003c/li\u003e \u003cli\u003eType \u003ccode\u003ecd Documents\u003c/code\u003e - this will change your directory, and move you into your Documents folder\u003c/li\u003e \u003cli\u003eType \u003ccode\u003emkdir Flatiron\u003c/code\u003e - this will create a new folder, called Flatiron, to keep all of your Flatiron repositories and files\u003c/li\u003e \u003cli\u003eType \u003ccode\u003ecd Flatiron\u003c/code\u003e - this will change your directory, moving you into the new Flatiron folder you just created\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003eMacOS Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-make-flatiron-directory.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cp\u003eWindows Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/windows_create_dir.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cblockquote\u003e \u003ch2\u003eImportant Note\u003c/h2\u003e  \u003cp\u003eYou should \u003cstrong\u003eNEVER\u003c/strong\u003e clone a Git repository into another Git repository!\u003c/p\u003e  \u003cp\u003eYou can always check if you are currently in a Git repository by running \u003ccode\u003egit status\u003c/code\u003e. If you get an error that says \"\u003ccode\u003efatal: not a git repository (or any of the parent directories): .git\u003c/code\u003e\", then you are not in a Git repository.\u003c/p\u003e \u003c/blockquote\u003e  \u003cp\u003eOnce you are in a good place to download files from GitHub, like a general folder to keep all of your Flatiron repositories and files, type (or better still, copy and paste) \u003ccode\u003egit clone https://github.com/learn-co-curriculum/dsc-data-science-env-config.git\u003c/code\u003e\u003c/p\u003e  \u003cp\u003e\u003cem\u003eIn Windows, in Git Bash, to paste from the clipboard the shortcut should be \u003cstrong\u003eshift-insert\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e  \u003cp\u003eThis will create a new subdirectory whose name is \"dsc-data-science-env-config\" which will contain a copy of all of the files in this repository!\u003c/p\u003e  \u003cp\u003eMove into that directory using the \u003ccode\u003ecd\u003c/code\u003e, or change directory, command (after typing \u003ccode\u003ecd dsc\u003c/code\u003e you should be able to hit the \u003cstrong\u003etab\u003c/strong\u003e key to \"tab complete\" so you don't need to type the whole directory name).\u003c/p\u003e  \u003cp\u003eNow, if you run \u003ccode\u003epwd\u003c/code\u003e to print your working directory again, you should be inside the folder we just cloned down from that GitHub link!\u003c/p\u003e  \u003cp\u003eMacOS Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-git-clone.png\" width=\"650\"\u003e\u003c/p\u003e  \u003cp\u003eWindows Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/win_git_clone.png\" width=\"650\"\u003e\u003c/p\u003e  \u003ch2\u003eSetting Up Virtual Environments\u003c/h2\u003e  \u003cp\u003eAs you do data science projects, you will spend a lot of your time using pre-written libraries to speed up your development - like numpy, pandas, or scikit-learn. As you work on different projects, you may also find that you use different versions of different libraries for different projects. The most common versioning issue is that some projects will run in Python 2 whereas others will run in Python 3, but you may also find that different projects depend on different versions of libraries like Tensorflow.\u003c/p\u003e  \u003cp\u003eOccasionally, code that works in an old version of a library won’t work in a newer version. So if you open up a new project and install the dependencies, it’s possible that your old project won’t work anymore.\u003c/p\u003e  \u003cp\u003eTo avoid that problem, a best practice is to use “virtual environments”. Virtual environments allow you to have different versions of Python and different versions of the various libraries you use, so you can install a new version of a library for one project but still use the old version for another project. It’s almost as if you have multiple computers that you can swap between, each having a different setup and configuration, just by running a couple of commands.\u003c/p\u003e  \u003cp\u003eThere is a built-in virtual environment feature in Python, but we’re going to use the more flexible virtual environments provided by Conda as part of the Anaconda distribution you installed.\u003c/p\u003e  \u003cp\u003eTo use a new virtual environment, there are two steps you need to complete. The first step is to create the virtual environment. That may take a couple of minutes as your computer has to download the necessary version of Python and all of the libraries that you want to be able to use in that environment. The next step then is to “use” the virtual environment by activating it.\u003c/p\u003e  \u003cp\u003eIf you want to learn more about Conda environments, have a look at the \u003ca href=\"https://conda.io/docs/user-guide/tasks/manage-environments.html\" target=\"_blank\"\u003edocumentation\u003c/a\u003e, otherwise, let’s give this a try.\u003c/p\u003e  \u003ch3\u003eCreating the Conda Virtual Environment\u003c/h3\u003e  \u003cp\u003eYou need to start by navigating into this project folder. If you run \u003ccode\u003epwd\u003c/code\u003e to print your working directory in your terminal, you should be inside the folder we cloned down. If the name of the current working directory is not \"dsc-data-science-env-config\", then you need to move into that folder - follow the steps above.\u003c/p\u003e  \u003cp\u003eThe instructions to create the environment are slightly different for MacOS and Windows, because they need to use different environment files, so make sure you follow the instructions relevant to your operating system.\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eMacOS\u003c/strong\u003e: run \u003ccode\u003econda env create -f mac_environment.yml\u003c/code\u003e\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eWindows\u003c/strong\u003e: run \u003ccode\u003econda env create -f win_environment.yml\u003c/code\u003e\u003c/p\u003e  \u003cp\u003eDepending on the speed of your computer and your internet connection it may take up to twenty minutes for this to complete. While it does you should see output similar to that displayed below start to appear in your terminal.\u003c/p\u003e  \u003cp\u003eMacOS Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-env-create-from-yml.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cp\u003eWindows Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/win_env_create.PNG\" width=\"450\"\u003e\u003c/p\u003e  \u003ch3\u003eActivating the Conda Virtual Environment\u003c/h3\u003e  \u003cp\u003eNext, try activating the environment. Type \u003ccode\u003econda activate learn-env\u003c/code\u003e.\u003c/p\u003e  \u003cp\u003eTo confirm that it worked, type \u003ccode\u003econda info --envs\u003c/code\u003e and confirm that the asterisk (*) is next to the learn-env environment.\u003c/p\u003e  \u003cp\u003eMacOS Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-conda-info-envs.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cp\u003eWindowsWindows Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/win_env_check.PNG\" width=\"450\"\u003e\u003c/p\u003e  \u003ch2\u003eTroubleshooting\u003c/h2\u003e  \u003cp\u003eif you see a message that states “WARNING: A newer version of Conda exists”, run \u003ccode\u003econda update -n base conda\u003c/code\u003e and then try again to create the environment.\u003c/p\u003e  \u003cp\u003eIf you see a message that states \"file not found\", double check that you are running this command from the directory that contains the .yml file. If you type \u003ccode\u003els\u003c/code\u003e you should see the environment.yml file. If you don't see it, you likely forgot to run \u003ccode\u003ecd dsc-data-science-env-config\u003c/code\u003e to change into the right directory.\u003c/p\u003e  \u003ch2\u003eSetting your Default Environment\u003c/h2\u003e  \u003cp\u003eYou have successfully created your virtual environment! But, to be sure that you are using the learn-env, it's helpful to set it as your default environment so that you don't need to remember to manually switch to it every time you open the terminal. This step is \u003cstrong\u003ehighly recommended\u003c/strong\u003e but not required.\u003c/p\u003e  \u003ch3\u003eMac\u003c/h3\u003e  \u003cp\u003eOn a Mac, we need to first see what shell you're running in your terminal. Run \u003ccode\u003eecho $SHELL\u003c/code\u003e.\u003c/p\u003e  \u003cp\u003eIf the response ends in \u003ccode\u003ebash\u003c/code\u003e:\u003c/p\u003e  \u003cul\u003e \u003cli\u003erun \u003ccode\u003eecho \"conda activate learn-env\" \u0026gt;\u0026gt; ~/.bash_profile\u003c/code\u003e to add the configuration to your bash profile\u003c/li\u003e \u003cli\u003erun \u003ccode\u003esource ~/.bash_profile\u003c/code\u003e to activate the changes you just made\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-bash-set-default-env.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cblockquote\u003e \u003cp\u003e(Don't forget to run \u003ccode\u003esource ~/.bash_profile\u003c/code\u003e like the Test Student in the screen capture!)\u003c/p\u003e \u003c/blockquote\u003e  \u003cp\u003eIf the response ends in \u003ccode\u003ezsh\u003c/code\u003e:\u003c/p\u003e  \u003cul\u003e \u003cli\u003erun \u003ccode\u003eecho \"conda activate learn-env\" \u0026gt;\u0026gt; ~/.zshrc\u003c/code\u003e to add the configuration to your bash profile\u003c/li\u003e \u003cli\u003erun \u003ccode\u003esource ~/.zshrc\u003c/code\u003e to activate the changes you just made\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-zsh-set-default-env.png\" width=\"450\"\u003e\u003c/p\u003e  \u003ch3\u003eWindows\u003c/h3\u003e  \u003cp\u003eTo follow these instructions on a Windows machine you must be using the Git Bash shell it was suggested to install above.\u003c/p\u003e  \u003col\u003e \u003cli\u003eRun \u003ccode\u003etouch ~/.bash_profile\u003c/code\u003e to create a new file.\u003c/li\u003e \u003cli\u003eRun \u003ccode\u003eecho \"conda activate learn-env\" \u0026gt;\u0026gt; ~/.bash_profile\u003c/code\u003e to add the configuration to your bash profile\u003c/li\u003e \u003cli\u003eRun \u003ccode\u003esource ~/.bash_profile\u003c/code\u003e to activate the changes you just made\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/win_default_env.PNG\" width=\"450\"\u003e\u003c/p\u003e  \u003ch2\u003eUpdating your Virtual Environment\u003c/h2\u003e  \u003cp\u003e\u003cimg src=\"https://imgs.xkcd.com/comics/python_environment_2x.png\" alt=\"xkcd comic about python environments\" width=\"500\"\u003e\u003c/p\u003e  \u003cp\u003ePython packages are constantly updating and changing, and switching between environments, updating or installing new packages, and troubleshooting environment issues will are all necessary skills for when you're a fully-fledged professional data scientist.\u003c/p\u003e  \u003cp\u003eIn general, because we are using Anaconda as our package manager, it is preferable to update or install new packages using \u003ccode\u003econda\u003c/code\u003e options instead of \u003ccode\u003epip\u003c/code\u003e.\u003c/p\u003e  \u003cp\u003eIf you are ever concerned about conflicting package versions, just remember that creating a new conda environment is as easy as \u003ccode\u003econda create --name new-env\u003c/code\u003e - and it is very normal to have different environments with different packages for different purposes. Just remember that you've likely just set up learn-env to activate by default, so you'll need to either change that or activate other environments manually when needed.\u003c/p\u003e  \u003ch2\u003eConfiguring your Kernel and Confirming your Configuration\u003c/h2\u003e  \u003cp\u003eJupyter Notebooks run \"kernels\" - the computational engine used for executing your code. It's important to be running the right kernel within your notebook, otherwise you may get errors stating that you don't have a particular package or have the wrong version of it or even complaints about the version of Python you're running (some packages don't support Python 3.8, for example).\u003c/p\u003e  \u003cp\u003eRight now, let's check that everything is running properly. In your terminal, run \u003ccode\u003ejupyter notebook\u003c/code\u003e. This should prompt a new browser window to open, at an address that is something like \"localhost:8888\". \u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/jupyter-home-dir.png\" width=\"650\"\u003e\u003c/p\u003e  \u003cp\u003eWe'll talk a lot more about Jupyter Notebooks later on in the course, because you'll use them quite a lot! For now, we want to check not only that the terminal shortcut you just used to open a Jupyter Notebook worked, but also that you are running your learn-env kernel in your notebook.\u003c/p\u003e  \u003cp\u003eYou should be able to see learn-env as an option in two places:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eWhen you create a new Jupyter Notebook, by clicking \"New\" on the right-hand side\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/check-kernel1.png\" width=\"650\"\u003e\u003c/p\u003e  \u003cul\u003e \u003cli\u003eOnce you're in a notebook or create a new one, by checking the options under \"Kernel\" in the top menu bar\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/check-kernel2.png\" width=\"650\"\u003e\u003c/p\u003e  \u003cp\u003eIf you don't see the learn-env option in those two places:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eClose the notebook in the browser\u003c/li\u003e \u003cli\u003eClose down the notebook server from the terminal  \u003cul\u003e \u003cli\u003e(run \u003ccode\u003ectrl\u003c/code\u003e + \u003ccode\u003ec\u003c/code\u003e and then type \u003ccode\u003ey\u003c/code\u003e to confirm that you want to close down jupyter)\u003c/li\u003e \u003c/ul\u003e\n\u003c/li\u003e \u003cli\u003eIn the terminal, type \u003ccode\u003epython -m ipykernel install --user --name=learn-env\u003c/code\u003e\n\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eThat will add the learn-env to your list of kernels. When you restart the Jupyter Notebook server and try again, you'll be able to select the learn-env option in those two places above.\u003c/p\u003e  \u003cp\u003eIt will be essential to run \u003ccode\u003econda activate learn-env\u003c/code\u003e every time you start a new terminal window if you do not set your terminal to activate that environment by default. If you don't do this you \u003cstrong\u003ewill\u003c/strong\u003e get errors, so please check this first. You can always run \u003ccode\u003econda info --envs\u003c/code\u003e to see which environment is selected - and, if you run the above steps to set the learn-env to open by default, you won't need to remember to activate every time you open your terminal.\u003c/p\u003e  \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eCongratulations! That was a lot! If you've gotten this far and everything has worked, you have successfully set up your computer with some of the primary tools you need to work as a professional data scientist!\u003c/p\u003e","exportId":"setting-up-a-professional-data-science-environment-configuring-git-and-anaconda"},{"id":142209,"title":"The Structure of This Course","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-structure-of-this-course\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-structure-of-this-course\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-structure-of-this-course/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson you will learn about how this course is structured in Canvas. Additionally, you will be introduced to Jupyter Notebooks and what they are for the very first time!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand the difference between a Canvas Assignment and Page\u003c/li\u003e\n\u003cli\u003eUnderstand how Pages host Lessons and Assignments host Code Lessons and Labs\u003c/li\u003e\n\u003cli\u003eGet introduced to Jupyter Notebooks\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSetting the Stage\u003c/h2\u003e\n\n\u003cp\u003eThere are two main types of materials in this course: \u003cstrong\u003ePages\u003c/strong\u003e and \u003cstrong\u003eAssignments\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou can recognize a \u003cstrong\u003ePage\u003c/strong\u003e by the following icon:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course/master/images/page.png\" width=\"70\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd an \u003cstrong\u003eAssignment\u003c/strong\u003e by the following icon:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course/master/images/assignment.png\" width=\"70\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ePages\u003c/strong\u003e contain \u003cem\u003eLessons\u003c/em\u003e, and these lessons are mainly about giving you tons of information to absorb. In these lessons you'll be reading text and sometimes watching videos (note that what you're reading now is a Page). There is really not much more about it, all you need to do is to read them in Canvas. Enjoy!\u003c/p\u003e\n\n\u003cp\u003eOften, you'll be required to write code. This is where \u003cstrong\u003eAssignments\u003c/strong\u003e come in. Assignments come in two forms:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cem\u003eCode Lessons\u003c/em\u003e: Code Lessons require you to be able to run code, but you will not be instructed to write code yourself. Code Lessons are very much like Lessons, but there is an interactive component to it as you'll be running some code that was provided for you.\u003c/li\u003e\n\u003cli\u003e\n\u003cem\u003eLabs\u003c/em\u003e: Labs ask you to write code yourself! We provide example solutions for each lab to help you if you get stuck.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eYou can easily tell if an assignment is a \u003cem\u003eCode Lesson\u003c/em\u003e or a \u003cem\u003eLab\u003c/em\u003e from the title and the organization. If the title ends with \"Lab\", it's a lab. Additionally, Labs are indented. In the image below, you see a Code Lesson followed by a Lab.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course/master/images/labs.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNote that there is a third type of content that hasn't been discussed: a \u003cstrong\u003eQuiz\u003c/strong\u003e. Quizzes are less prevalent than Assignments or Pages, but they're important, as they contain questions for you to answer to reinforce your learning!\u003c/p\u003e\n\n\u003cp\u003eThe quiz icon looks like this:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course/master/images/quiz.png\" width=\"70\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eAssignments: Meet IllumiDesk!\u003c/h2\u003e\n\n\u003cp\u003eWith any assignment that you open, this is what you'll see:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course/master/images/illumidesk.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn order to go to the assignment, you need to load the assignment in a new window by clicking on the grey bar:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course/master/images/illumidesk_4.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eClicking on the grey bar will take you into IllumiDesk to work on a \u003cstrong\u003eJupyter Notebook\u003c/strong\u003e, a document-like application that allows you to do live coding!\u003c/p\u003e\n\n\u003cp\u003eThis is what a Jupyter Notebook looks like:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course/master/images/jupyter.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eLab Solutions\u003c/h2\u003e\n\n\u003cp\u003eWe provide solutions for each Lab to help you get unstuck when all else fails. Learning how to persevere and solve coding problems is one of the most important skills you will learn as a data scientist! That said, sometimes it's not worth your time or energy to keep trying to solve a problem, especially if the problem ends up being something minor like a typo. In general, if you're not making any progress with a Lab after 10-20 minutes then you should reach out to peers for help. If that doesn't get you unstuck, \u003cem\u003ethen\u003c/em\u003e look at a solution. Read just enough of the solution to get unstuck, then continue on your own.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eBe careful about when \u0026amp; how you use these!\u003c/strong\u003e You may be tempted to go look at the solution immediately when you don't know what to do or your code isn't working.  You won't always be able to look up a correct solution to problems you encounter during a technical interview or on the job, so don't let yourself fall into the habit.\u003c/p\u003e\n\n\u003cp\u003eTo access a Lab solution, click the GitHub icon to go to the Lab's GitHub repository.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course/master/images/github_lab_repo.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eFrom the GitHub repository, click the branch dropdown to switch to the \u003ccode\u003esolution\u003c/code\u003e branch.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course/master/images/github_branches.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eGreat - enough \u003cem\u003etalking\u003c/em\u003e, let's dive right into your first Jupyter Notebook in the next Assignment!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you learned about how Assignments and Pages are the two main building blocks of the Data Science Program in Canvas, hosting Lessons, Code Lessons and Labs. Next up, we'll explore our first Code Lesson in a Jupyter Notebook!\u003c/p\u003e","exportId":"the-structure-of-this-course"},{"id":142210,"title":"Your First Jupyter Notebook!","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-your-first-jupyter-notebook\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-your-first-jupyter-notebook/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g70b028d2d7b521da1389079d00470f8c"},{"id":142211,"title":"Running Jupyter Notebooks Locally","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-running-jupyter-locally\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-running-jupyter-locally\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-running-jupyter-locally/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this lesson you will practice the workflow you will be using when you want to work \u003cem\u003elocally\u003c/em\u003e instead of in IllumiDesk on Canvas, and also get some hands-on practice with important tools that you will need to be familiar with as a professional Data Scientist: the command line, git, GitHub, and running Jupyter Notebooks locally.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse basic commands to navigate the command line\u003c/li\u003e\n\u003cli\u003eUse bash commands to create new files and folders\u003c/li\u003e\n\u003cli\u003eUse git clone to clone a repository\u003c/li\u003e\n\u003cli\u003eWork on your labs locally\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSetting the Stage\u003c/h2\u003e\n\u003cp\u003eRemember how \u003cstrong\u003eCode Lessons\u003c/strong\u003e and \u003cstrong\u003eLabs\u003c/strong\u003e on Canvas use Illumidesk (by clicking the grey button below) to open notebooks and start coding?\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-running-jupyter-locally/master/images/illumidesk_4.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cp\u003eWhen you're a professional Data Scientist, you won't have access to Illumidesk, but you'll need to get everything up and running to work on your local machine. Luckily, you've already set up a professional data science environment, and in this lesson you'll learn how to actually run your code on your local machine instead of through Illumidesk!\u003c/p\u003e\n\u003ch2\u003eThe Command Line\u003c/h2\u003e\n\u003cp\u003eIn order to be able to work locally, we first need to tell you a tiny bit about command line. On Mac computers, this is the terminal application. On Windows computers, we'll use \"Git Bash\". The command line serves as a low-level interpreter through which you, the user, can send commands directly to the computer. As a computer user, you previously have probably sent commands to the computer through a graphical user interface (GUI) such as a web browser, text editor, photo editor, or any other of the myriad of computer programs now in existence. While the command line is initially daunting with its cryptic looking text, we will quickly see some of the many advantages it can have.\u003c/p\u003e\n\u003cp\u003eOne of the many useful features of the command line will be using \u003cem\u003egit\u003c/em\u003e to clone (download) a local copy of the curriculum hosted on Canvas. This will allow you to work offline and to save changes as you work through exercises and start programming!\u003c/p\u003e\n\u003cp\u003eTo start, \u003cstrong\u003efor Mac users, open the terminal application\u003c/strong\u003e, \u003cstrong\u003efor Windows, open “Git Bash”\u003c/strong\u003e.\u003c/p\u003e\n\u003ch3\u003epwd\u003c/h3\u003e\n\u003cp\u003eThe first command to try out is \u003cstrong\u003epwd\u003c/strong\u003e which stands for \u003cstrong\u003eprint working directory\u003c/strong\u003e. This will tell you where you currently are in the computer's directory structure. Try it out.\u003c/p\u003e\n\u003ch3\u003ecd\u003c/h3\u003e\n\u003cp\u003eThe next essential command is \u003cstrong\u003ecd\u003c/strong\u003e which stands for \u003cstrong\u003echange directory\u003c/strong\u003e. This allows you to navigate to different folders on your computer's hard drive. Typing \u003ccode\u003ecd\u003c/code\u003e by itself (or \u003ccode\u003ecd ~\u003c/code\u003e) will automatically take you to your home directory. Typing \u003ccode\u003ecd\u003c/code\u003e and a folder name will take you to that folder. Typing \u003ccode\u003ecd ..\u003c/code\u003e will move you one folder up in the hierarchy. Play around and trying moving between folders for a minute or two.\u003c/p\u003e\n\u003ch3\u003eTab Completion\u003c/h3\u003e\n\u003cp\u003eAn extraordinarly useful feature when working with the command line is tab completion. This allows you to hit the tab button to autocomplete names once you have made a unique specification.\u003c/p\u003e\n\u003cp\u003eFor example, if you navigate to your root directory by running the command \u003ccode\u003ecd\u003c/code\u003e, if you're on a Mac, you will probably have 2 folders within your root directory named \"Downloads\" and \"Documents\" (these are standard folder names created by default in most systems, although you may have renamed them, or your system may be different). With these, or longer folder names, it can sometimes become cumbersome to type the full folder name. instead, you can start typing the command and folder name such as \u003ccode\u003ecd Dow\u003c/code\u003e and then press \u003cstrong\u003etab\u003c/strong\u003e to autocomplete. Like magic, the command line should complete the statement correctly to be \u003ccode\u003ecd Downloads\u003c/code\u003e. (Note: this will not work if you have another folder that begins with \"Dow\". Similarly, if you just typed \u003ccode\u003ecd D\u003c/code\u003e or \u003ccode\u003ecd Do\u003c/code\u003e followed by \u003cstrong\u003etab\u003c/strong\u003e, the command line will not autocomplete, as the selection is not unique, because \u003cstrong\u003eD\u003c/strong\u003e or \u003cstrong\u003eDo\u003c/strong\u003e could both refer to either \u003cstrong\u003eDocuments\u003c/strong\u003e or \u003cstrong\u003eDownloads\u003c/strong\u003e. Also note that these commands are case sensitive, and folder capitalization much be matched exactly.\u003c/p\u003e\n\u003ch3\u003els\u003c/h3\u003e\n\u003cp\u003eContinuing with navigating the computer's hard drive, it's useful to know how to \u003cstrong\u003elist files\u003c/strong\u003e. This is done with the \u003ccode\u003els\u003c/code\u003e command, short for list.\u003c/p\u003e\n\u003cp\u003eYou can also pass optional parameters to \u003ccode\u003els\u003c/code\u003e such as \u003ccode\u003els -a\u003c/code\u003e which lists \u003cstrong\u003eall files\u003c/strong\u003e (including hidden files), \u003ccode\u003els -l\u003c/code\u003e gives a \u003cstrong\u003elong listing\u003c/strong\u003e of files (including file size and last edit times). You can also pass multiple parameters simultaneously, such as \u003ccode\u003els -al\u003c/code\u003e to produce a detailed listing of all files.\u003c/p\u003e\n\u003ch3\u003e* the wildcard parameter\u003c/h3\u003e\n\u003cp\u003eAlso very useful is the wildcard parameter. For example, if you wanted to list all files in the current working directory that begin with a, you could type \u003ccode\u003els a*\u003c/code\u003e. Here, the asterix (\u003ccode\u003e*\u003c/code\u003e) denotes anything is allowed following the a. Similarly, to list all pdf files in the current working directory you can use \u003ccode\u003els *.pdf\u003c/code\u003e, or to list all text files, you can use \u003ccode\u003els *.txt\u003c/code\u003e.\u003c/p\u003e\n\u003ch3\u003emkdir\u003c/h3\u003e\n\u003cp\u003eFinally, as you continue to navigate the file directory from the command line it can be useful to be able to create new folders. To do this, use the \u003ccode\u003emkdir\u003c/code\u003e command, which stands for \u003cstrong\u003emake directory\u003c/strong\u003e. Try it out with \u003ccode\u003emkdir NewFolderName\u003c/code\u003e. Afterward, use the \u003ccode\u003els\u003c/code\u003e command to see that there is indeed a new folder, and if you wish, move into the new folder using the \u003ccode\u003ecd\u003c/code\u003e command.\u003c/p\u003e\n\u003ch2\u003eCloning GitHub repositories and Canvas lessons\u003c/h2\u003e\n\u003cp\u003eYou have already read a little bit about GitHub and how it's used to share code. Since you can now navigate the file directory using the command line, you're ready to download some course materials from GitHub to your local environment. In practice, you will do the following:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eFork\u003c/strong\u003e the course material repository: Forking is the process of making a personal copy of the Canvas course materials on your own GitHub account.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eClone\u003c/strong\u003e the forked course material repository: Cloning is the process of downloading a repository from Github onto your personal computer.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eDon't worry if this process seems a little confusing. It will be explained in more detail soon. For now, you can just follow the steps below:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a folder on your computer for your course materials and navigate into it\u003cbr\u003e\n\u003cul\u003e\n\u003cli\u003eYou may also want to create a subfolder titled \"phase_1\" and navigate into that\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eReturn to your web browser and navigate to the lesson you want to download\u003c/li\u003e\n\u003cli\u003eClick the GitHub icon\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-running-jupyter-locally/master/images/illumidesk_3.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cp\u003eYou'll be redirected to the associated GitHub repository.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eClick the fork button\u003c/strong\u003e, as shown, in order to create a copy to your personal account which you can edit and update\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-running-jupyter-locally/master/images/before-fork.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cp\u003eOne of two things will happen. Either it'll pop up a modal (window) and if you scroll to the bottom of it you'll see it says that you already have a fork. If that's the case, just click on the link to view your existing fork.\u003c/p\u003e\n\u003cp\u003eIf you don't already have a fork, you'll be redirected to your new personal copy of the repository:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-running-jupyter-locally/master/images/after-fork.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003ch2\u003eFinally\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ePress \u003cstrong\u003ecmd + L\u003c/strong\u003e to highlight the url bar and \u003cstrong\u003ecmd + c\u003c/strong\u003e to copy the url (whenever we use \u003cstrong\u003ecmd\u003c/strong\u003e to refer to holding down the command key on a Mac computer, on a Windows computer, hold down the control key instead)\u003c/li\u003e\n\u003cli\u003eReturn to the terminal (you should be in your course materials folder or your \"phase_1\" subfolder)\u003c/li\u003e\n\u003cli\u003eType: \u003ccode\u003egit clone\u003c/code\u003e and paste your repo url (\u003cstrong\u003ecmd + v\u003c/strong\u003e for Mac; for Windows, in git bash, \u003cstrong\u003eshift + insert\u003c/strong\u003e)\u003c/li\u003e\n\u003cli\u003eEt Voila! The repository and all of its contents will be downloaded locally to your computer!\u003c/li\u003e\n\u003cli\u003eRemember that you need to \u003ccode\u003ecd\u003c/code\u003e into the new repository once you've downloaded it\u003c/li\u003e\n\u003cli\u003eThe next step is to open your Jupyter Notebook locally (\u003cstrong\u003enot on Canvas/Illumidesk\u003c/strong\u003e) using the command line\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eStarting the Jupyter Notebook\u003c/h2\u003e\n\u003cp\u003eMake sure to activate your conda virtual environment in your terminal first by typing \u003ccode\u003esource activate learn-env\u003c/code\u003e. Then type \u003ccode\u003ejupyter notebook\u003c/code\u003e in your command line and press enter. Next, your default browser will open a new window or tab and you will see the list of files that are in your current directory (\u003cem\u003eremember you want to be in the GitHub repo directory that we just downloaded\u003c/em\u003e).\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e To stop a Jupyter Notebook, go to your command line where the notebook is running and press the \u003cstrong\u003econtrol\u003c/strong\u003e key + the letter \u003cstrong\u003ec\u003c/strong\u003e (\u003ccode\u003ectrl\u003c/code\u003e+\u003ccode\u003ec\u003c/code\u003e).\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThen click on the \u003ccode\u003eindex.ipynb\u003c/code\u003e file which is the Jupyter Notebook we will be using in this and future labs and lessons. This will open a new tab where you will see the same content you saw in IllumiDesk on Canvas!\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eIn this lesson, you learned about the command line, cloning GitHub repositorites, and how to work with Jupyter notebooks locally. In the next lab, you'll put what you learned into practice!\u003c/p\u003e","exportId":"running-jupyter-notebooks-locally"},{"id":142212,"title":"Running Jupyter Notebooks Locally - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-running-jupyter-locally-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-running-jupyter-locally-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g2e240e1f72819d18f2ec6e5187a1b9ec"},{"id":142213,"title":"Introduction to Variables: Variable Assignment","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-variable-assignment-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-variable-assignment-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g888b6eb376c7a6b277b962c16ad651c0"},{"id":142214,"title":"Introduction to Variables: Strings","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g715365292afa69e2cac2cf2abb764c98"},{"id":142215,"title":"Introduction to Variables: Strings - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"ga6b0b9c2e0c5a5fd462ef86dd99ffe69"},{"id":142216,"title":"Introduction to Variables: Numeric Types and Booleans","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-floats-ints-booleans\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-floats-ints-booleans/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g48a987adde3bef31abc4eb552e78e9a1"},{"id":142217,"title":"Introduction to Variables: Strings and Numeric Types - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings-floats-ints-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings-floats-ints-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g46ea4ba9b7784532cc0f648a44aef762"},{"id":142218,"title":"Introduction to Variables: Variable Assignment - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-variable-assignment-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-variable-assignment-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gc362b41cff5de67c8ec530827501d7a6"},{"id":142219,"title":"Control Flow: Conditionals","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-conditionals\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-conditionals/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gcf409194525fcc422964ed467b157f09"},{"id":142220,"title":"Control Flow: Conditionals - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-conditionals-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-conditionals-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g2c6fa21bf4d9398fe9890d6ce3cebb65"},{"id":142221,"title":"Working with Lists","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lists\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lists/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g667371636918acaa8b5b34f9a7cb1c73"},{"id":142222,"title":"Working with Lists - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lists-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lists-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gfe7cfcefb6c9bbe08d2591fc197125e5"},{"id":142223,"title":"Working With Dictionaries","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dictionaries\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dictionaries/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gca56aeeaeaca1464db3fbee78399cb50"},{"id":142224,"title":"Working with Dictionaries - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dictionaries-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dictionaries-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g39be3133c9db4c67773a63585d808225"},{"id":142225,"title":"Looping Over Collections","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-looping-over-collections\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-looping-over-collections/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gf00b1a001ba103961287442f21b15849"},{"id":142226,"title":"Looping Over Collections - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-looping-over-collections-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-looping-over-collections-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g8737619f35a7d7a2cd6136e39eaa3933"},{"id":142227,"title":"Data Visualization","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g15707c5ede0c5cb703e12592df15b52c"},{"id":142228,"title":"Data Visualization - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"ga1d4c545e1235cdb50f3cd2d9ec778ac"},{"id":142229,"title":"Mini-Project: Analyzing Macbeth","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-analyzing-macbeth-project-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-analyzing-macbeth-project-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g32b7afc2fe7705aa9a4b33ed1d38b9db"},{"id":142230,"title":"Getting Started with Data Science - Recap","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-data-cleaning-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-data-cleaning-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you learned about the Data Science process as well as the fundamentals of Python. You started off with learning about the basic Python data types as well as variable assignment. After that, you worked with collections of these basic data types, learning about lists and dictionaries. Finally, you learned about data visualization and used \u003ccode\u003ematplotlib\u003c/code\u003e to create some bar charts, histograms, and scatter plots. \u003c/p\u003e\n\n\u003ch2\u003eKey Takeaways\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eThere is a lot to learn about Data Science, but most of the time you're predicting a continuous value (regression), predicting a category (classification), identifying unusual data (anomaly detection) or generating recommendations.\u003c/li\u003e\n\u003cli\u003eData Science is not just about selecting and tuning machine learning models. Much of the value comes from understanding the business needs and formulating the problem thoughtfully. And most of the effort is in the early stages of finding, cleaning, exploring, and simplifying the data so it's ready to be run against your models. \u003c/li\u003e\n\u003cli\u003eIt's important to use professional tools. Jupyter Notebook is a great environment for combining your notes and your code. Git allows you to keep track of your changes. GitHub allows to share them with your team. Conda virtual environments ensure that the libraries you use for one project won't break another project you were working on.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-pandas-data-cleaning-recap\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-pandas-data-cleaning-recap\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-pandas-data-cleaning-recap/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"getting-started-with-data-science-recap"}]},{"id":15167,"name":"Topic 2: Bash and Git","status":"started","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g14fd9ba43db32ada7b9426ec16f11c8b","items":[{"id":142231,"title":"Bash and Git - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-bash-collab-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-bash-collab-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll learn about Bash command line and Git. You've seen a bit of this from our first section in which you took a look at how to clone a GitHub repository. Now, we'll further investigate how to navigate the command line and use more powerful Git techniques. \u003c/p\u003e\n\n\u003ch2\u003eBash and the command line\u003c/h2\u003e\n\n\u003cp\u003eThe command line or shell is the preliminary interface where users can interact with the operating system. Before applications, windows, and graphical user interfaces, all interaction with the computer was facilitated through the command line. Of these command line shells, bash now comes preinstalled in every mac and many other unix based systems.\u003c/p\u003e\n\n\u003ch3\u003eNavigating directories\u003c/h3\u003e\n\n\u003cp\u003eThe preliminary fundamental techniques you'll practice in this section are changing directories using the \u003ccode\u003ecd\u003c/code\u003e command, making directories with the \u003ccode\u003emkdir\u003c/code\u003e command, and checking where you are using the print working directory, \u003ccode\u003epwd\u003c/code\u003e command. In addition, you'll also take a look at how to create and edit files from the command line using the \u003ccode\u003enano\u003c/code\u003e command.\u003c/p\u003e\n\n\u003ch2\u003eGit\u003c/h2\u003e\n\n\u003cp\u003eYou've previously seen how to fork and clone git repositories from GitHub. Git is a version control system that is used by developers all over the world for collaboration. Git is the technology underlying the GitHub platform, a cloud service provider, of which there are many. \u003c/p\u003e\n\n\u003ch3\u003eGit commands\u003c/h3\u003e\n\n\u003cp\u003eIn this section, you'll take a look at several Git commands including \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, \u003ccode\u003egit push\u003c/code\u003e, \u003ccode\u003egit merge\u003c/code\u003e, \u003ccode\u003egit branch\u003c/code\u003e, \u003ccode\u003egit checkout\u003c/code\u003e, \u003ccode\u003egit status\u003c/code\u003e, \u003ccode\u003egit stash\u003c/code\u003e, and \u003ccode\u003egit log\u003c/code\u003e. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll take a look at Git and Bash! Get ready to have the preliminary tools that almost all developers consider to be their foundation!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-git-bash-collab-intro\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-git-bash-collab-intro\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-bash-collab-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"bash-and-git-introduction"},{"id":142232,"title":"The Bash Shell","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-bash-shell\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-bash-shell/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWhen conducting Data Science (or programming in general), it’s helpful to get oriented with the command line, or bash shell. On mac computers, this is the terminal application. You've actually already seen some of this when working through how to download lessons from Learn and GitHub onto your local computer! The command line serves as a low-level interpreter through which you, the user, can send commands directly to the computer. As a computer user, you previously have probably sent commands to the computer through a graphical user interface (GUI) such as a web browser, text editor, photo editor, or any other of the myriad of computer programs now in existence. While the command line is initially daunting with its cryptic looking text, we will quickly see some of its advantages.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eNavigate between directories using the Bash shell\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eShell\u003c/h2\u003e\n\n\u003cp\u003eTo start, open up your shell program. For mac, this is the terminal, and for Windows we recommend git bash. Note that the \"command prompt\" on Windows may look similar but it is actually another language.\u003c/p\u003e\n\n\u003ch2\u003eMac\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-bash-shell/master/images/mac_terminal.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eWindows\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-bash-shell/master/images/git_bash.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eWorkflow Hints\u003c/h2\u003e\n\n\u003cp\u003eWhen going back and forth between this lesson and your shell, it is useful to either use split screen or to know the shortcuts to switch between applications on your computer. \u003c/p\u003e\n\n\u003cp\u003eShortcuts to change programs/applications:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eMac: (cmd+tab)\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eWindows: (alt+tab)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003epwd\u003c/h2\u003e\n\n\u003cp\u003eRemember, \u003cstrong\u003epwd\u003c/strong\u003e stands for \u003cstrong\u003eprint working directory\u003c/strong\u003e. This is essential to determine where you are within the file structure.  \u003c/p\u003e\n\n\u003ch2\u003ecd\u003c/h2\u003e\n\n\u003cp\u003eFrom there, remember that \u003cstrong\u003ecd\u003c/strong\u003e stands for \u003cstrong\u003echange directory\u003c/strong\u003e. You can navigate to the home directory with \u003ccode\u003ecd\u003c/code\u003e alone, or go up one level with \u003ccode\u003ecd ..\u003c/code\u003e. You can also use the \u003ccode\u003e~\u003c/code\u003e symbol to refer to your home directory. For example, \u003ccode\u003ecd ~/Documents\u003c/code\u003e will take you to the Documents folder in your home directory no matter where you are. \u003c/p\u003e\n\n\u003ch2\u003els\u003c/h2\u003e\n\n\u003cp\u003eYou can use the \u003cstrong\u003els\u003c/strong\u003e command, which stands for \u003cstrong\u003elist files\u003c/strong\u003e to print all the files in the current working directory. \u003c/p\u003e\n\n\u003ch2\u003eTab completion\u003c/h2\u003e\n\n\u003cp\u003eAnother useful feature when working on the command line is tab completion. This also works in many other programming environments such as Jupyter notebooks.\u003c/p\u003e\n\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://www.ks.uiuc.edu/Training/Tutorials/Reference/unixprimer.html\"\u003eMore Basic Shell Commands\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://linux.die.net/man/1/bash\"\u003eLinux Bash Man Page\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://tiswww.case.edu/php/chet/bash/bashref.html\"\u003eDetailed Bash\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we reviewed some of the basic bash commands in order to navigate through files and folders on your computer. From here, we're ready to get started with Git, an important version control system used by many programmers, developers, and Data Scientists.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-bash-shell\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-bash-shell\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-bash-shell/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"the-bash-shell"},{"id":142233,"title":"Git Version Control 101","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-version-control-101\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-version-control-101/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e“The past is never where you think you left it.” — \u003ca href=\"http://en.wikipedia.org/wiki/Katherine_Anne_Porter\"\u003eKatherine Anne Porter\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eVersion Control is the process of storing multiple versions of a single project, allowing each version to be recalled at a later date.\u003c/p\u003e\n\n\u003cp\u003eThere are a lot of different ways to do version control. You could save a new file every time you make a change, timestamp that file, and place all of those files into a timestamped folder. You could track all of your changes in a spreadsheet with copious notes. Or you could use dedicated version control software. Guess which method programmers use?\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the purpose of version control and Git\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy Use Version Control?\u003c/h2\u003e\n\n\u003cp\u003eLet's think about the future for a second. It's a year or two down the road, and you're working at your dream job (YAY!). You just deployed a new chat feature for the app you're working on. Suddenly, your boss runs over to your desk: \"Wait! We can't deploy the chat yet! Revert! Revert!\"\u003c/p\u003e\n\n\u003cp\u003eWhat do you do? You need to find all of the new code you pushed to the server and delete it. Then you need to find the old code, test it, and re-upload it. So much work to do. Well, since you used version control software, it's as easy as 1, 2, 3. Actually, it's as easy as \u003ccode\u003egit reset --hard \u0026lt;commit id\u0026gt;\u003c/code\u003e... but we'll get to that later. Using version control is useful because it allows you to easily rollback to a previous version of your application, saving you a ton of extra work and time.\u003c/p\u003e\n\n\u003cp\u003eThere are a lot of advantages to version control. It's a great way to keep a backup of your work, it facilitates collaboration, and it gives you the freedom to experiment and try new things without messing up the code base.\u003c/p\u003e\n\n\u003ch2\u003eLocal vs Remote Version Control\u003c/h2\u003e\n\n\u003cp\u003eA local version control system stores all of the information on your computer, locally. This system works great while you work on a project by yourself. However, it becomes cumbersome when you attempt to collaborate.\u003c/p\u003e\n\n\u003cp\u003eSome organizations use a centralized repository on a company server. Think of a repository as a big folder that stores all of the files of a particular project. It is simply the location where a project's data is stored. Users pull only the files they need to work on from the server. The advantage is that multiple people can collaborate and work on the same project at once. The disadvantage of this process is that a user must be connected to the network in order to work on the project.\u003c/p\u003e\n\n\u003cp\u003eWhich brings us to the third system, a distributed version control system. In a distributed system, all users have a complete copy of the entire repository. This means that you can work on the project independent of any network connection. Upon reconnecting, you can push your changes to the server and merge with the server's repository.\u003c/p\u003e\n\n\u003ch2\u003eMeet Git\u003c/h2\u003e\n\n\u003cp\u003eGit is the distributed version control system we use here at The Flatiron School. Git began in 2005 and has quickly grown to be one of the most widely used version control systems in the industry. Because so many companies use Git, it's important that you get used to working with it. We also use GitHub, a popular remote repository hosting service built to integrate seamlessly with Git.\u003c/p\u003e\n\n\u003cp\u003eCheck out some of the resources below to learn more about Git.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Getting-Started-About-Version-Control\"\u003eGetting Started - About Version Control\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/video/what-is-git\"\u003eGit Basics - What is Git?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you were introduced to version control and Git, and the reasons we use it as part of our workflow!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-git-version-control-101\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-git-version-control-101\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-version-control-101/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"git-version-control-101"},{"id":142234,"title":"Getting Started with Git","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-git-intro\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eAs you now know, Git is a version control system. The Flatiron School hosts our curriculum using GitHub, and we use IllumiDesk to facilitate a deep integration with GitHub. GitHub is an online hosting platform that uses Git. We need to teach you just enough Git to interact with GitHub like a real developer. While you can run Python notebooks on the Illumidesk platform, you'll also want to be able to download material to your local computer so you can work on it there.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDescribe the difference between a forked and a cloned respository\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit clone\u003c/code\u003e to clone a repository\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, and \u003ccode\u003egit push\u003c/code\u003e to make changes to a repository\u003c/li\u003e\n\u003cli\u003eCompare local and remote repositories\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSome terminology and concepts\u003c/h2\u003e\n\u003cp\u003eAs you can see from the objectives above, we're going to dive in and use several Git commands in this lesson.\u003c/p\u003e\n\u003cp\u003eThe first thing we'll look at is \u003cem\u003eforking\u003c/em\u003e, a concept from the GitHub platform.\u003c/p\u003e\n\u003cp\u003eForking is the process of making a personal copy of the lesson or lab on GitHub.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"http://ironboard-curriculum-content.s3.amazonaws.com/front-end/lab-assets/git-workflow-1.png\" alt=\"What's a Fork\"\u003e\u003c/p\u003e\n\u003cp\u003eAfterward, we'll use \u003ccode\u003egit clone\u003c/code\u003e from a bash shell like terminal or git bash in order to copy the material from the web to our local computer.\u003c/p\u003e\n\u003cp\u003eFrom there, Git will allow us to continue to track and incorporate changes that we make to our work.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit status\u003c/code\u003e allows us to see if we have made any changes.\u003c/p\u003e\n\u003cp\u003eIf we have made changes that we would like to save to our version control history, we can then use \u003ccode\u003egit add\u003c/code\u003e to stage the changed files to the version history and \u003ccode\u003egit commit\u003c/code\u003e to finalize the process. Finally, we can then use \u003ccode\u003egit push\u003c/code\u003e to push our changes to the web so that we or collaborators can access them from anywhere.\u003c/p\u003e\n\u003cp\u003eNow that you have a brief overview of what we're about to dive into, let's go through the process step by step.\u003c/p\u003e\n\u003ch2\u003eOpen up a Bash Shell and Create a Course Folder / Subfolder\u003c/h2\u003e\n\u003cp\u003eTo use Git, we're going back to the bash shell (mac: terminal, windows: git bash) once again!\u003c/p\u003e\n\u003cp\u003eTo start:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a folder on your computer for your course materials and navigate into it (preferably using \u003ccode\u003emkdir\u003c/code\u003e and \u003ccode\u003ecd\u003c/code\u003e) if you haven't already\n\u003cul\u003e\n\u003cli\u003eYou may want to create a subfolder titled \"Section1\", \"Phase_1\" (or whatever you find to be an appropriate title) and navigate into that\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eReturn to your web browser and navigate to the lesson or lab you want to download\u003c/li\u003e\n\u003cli\u003eClick the GitHub icon\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-intro/master/images/canvas_github_icon.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cp\u003eYou'll be redirected to the associated GitHub repository.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-intro/master/images/before-fork.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eClick the fork button\u003c/strong\u003e, as shown above in order to create a copy on your personal account which you can edit and update.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAfter a moment of this:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-intro/master/images/during-fork.png\" width=\"400\"\u003e\u003c/p\u003e\n\u003cp\u003eYou'll be redirected to your new personal copy of the repository:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-intro/master/images/after-fork.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit clone\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eNow that you have your own copy (by forking), we're going to download this copy to your local computer using \u003ccode\u003egit clone\u003c/code\u003e.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eCopy the URL\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMac: Press \u003cstrong\u003ecmd+L\u003c/strong\u003e to highlight the url bar and \u003cstrong\u003ecmd+c\u003c/strong\u003e to copy the url\u003c/li\u003e\n\u003cli\u003eWindows: Press \u003cstrong\u003eCtrl+L\u003c/strong\u003e to highlight the url bar and \u003cstrong\u003eCtrl+c\u003c/strong\u003e to copy the url\u003c/li\u003e\n\u003cli\u003eYou can also click the green \"Code\" button on the GitHub page, and click the clipboard icon to copy the url\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eReturn to your bash shell\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eType: \u003ccode\u003egit clone\u003c/code\u003e and paste your repo url (\u003cstrong\u003ecmd + v\u003c/strong\u003e or \u003cstrong\u003eCtrl+V\u003c/strong\u003e)\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eVoila!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eThe repository and all of its contents will be downloaded locally to your computer!\u003c/p\u003e\n\u003cp\u003eYou should be able to see the new folder by listing the files in the current directory with \u003ccode\u003els\u003c/code\u003e. You can then navigate into the git directory with \u003ccode\u003ecd directory_name\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eNow that you have a local copy, we can further investigate some more Git commands for version control. \u003cstrong\u003eNote that for these to work you must be in the git folder (the one you just cloned above). Make sure to navigate into the folder using the \u003ccode\u003ecd\u003c/code\u003e command.\u003c/strong\u003e\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit status\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eOnce you have a Git repository downloaded locally, Git will keep track of every change you make to the code in that folder. You can ask Git what the differences or changes you've made since the last commit by typing \u003ccode\u003egit status\u003c/code\u003e into your terminal.\u003c/p\u003e\n\u003cp\u003eIt's really helpful to constantly get the status from Git to see what changes you need to add, commit, or push.\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit add\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eAdding changes with the \u003ccode\u003egit add\u003c/code\u003e command is a way to stage any changes and get them ready to be a permanent record in your Git log via a commit. The workflow worth memorizing right now is to simply add all your changes via \u003ccode\u003egit add .\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit commit\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eA commit is a permanent moment in time in your Git history. A commit creates a new version of your code. To commit, memorize this command. \u003ccode\u003egit commit -am \"Your commit message\"\u003c/code\u003e. You are using the \u003ccode\u003egit commit\u003c/code\u003e command with the flags \u003ccode\u003e-am\u003c/code\u003e, which tell Git to add and commit all changes and to include a commit message. You supply the commit message in \u003ccode\u003e\"\"\u003c/code\u003e directly after the command, where it says \u003ccode\u003e\"Your commit message\"\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit push\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003ePushing is the process of taking your local code and commits and syncing them, or uploading them, to GitHub. You're updating the GitHub remote (remotes are just fancy names for cloud copies of the repository), generally your fork, represented by a remote named \u003ccode\u003eorigin\u003c/code\u003e, by pushing your code to the remote. The Git command to do this is simply \u003ccode\u003egit push\u003c/code\u003e. When you \u003ccode\u003egit push\u003c/code\u003e from within a Git repository, it will take all the commits that you have locally and push them to the online remote.\u003c/p\u003e\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.git-tower.com/blog/git-cheat-sheet/\"\u003eGit Cheatsheet\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.git-tower.com/learn/git/ebook/en/command-line/appendix/best-practices\"\u003eGit Best Practices\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://guides.github.com/introduction/flow\"\u003eUnderstanding the GitHub Flow\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://guides.github.com/activities/hello-world\"\u003eHello World GitHub\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://guides.github.com/activities/forking\"\u003eForking on GitHub\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://rogerdudler.github.io/git-guide/\"\u003eGit - The Simple Guide\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://gitimmersion.com/\"\u003eGit Immersion\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://try.github.com/\"\u003eTry Git\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eIn this lesson, we took an introductory look at Git and GitHub. First, we saw how to fork and clone repositories from GitHub onto your local machine. From there, we then further discussed how to add changes to git, commit them, and push them online.\u003c/p\u003e","exportId":"getting-started-with-git"},{"id":142235,"title":"Quiz: Git Basics","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"gd41d8cd98f00b204e9800998ecf8427e","questionCount":10,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":10.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cp\u003e\u003cspan style=\"font-size: 14pt;\"\u003e\u003cstrong\u003eOverview\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 12pt;\"\u003eTake the quiz below to make sure you're familiar with the crucial git commands and workflows to interact with GitHub and Learn.\u003c/span\u003e\u003c/p\u003e","exportId":"gc0e5410bdba7c803f63850537ed27e08"},{"id":142236,"title":"Git Practice","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-practice\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-practice/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eNow that you've seen a little bit of the bash shell and cloned a Git repository from GitHub, its time to practice a full workflow cycle in a little more detail. In this lesson, we'll start by taking a look at how to create a new Git repository if you are not working from an existing one. From there, we'll further investigate how the concepts of \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, and \u003ccode\u003egit push\u003c/code\u003e work in practice.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a new git repository\u003c/li\u003e\n\u003cli\u003eCompare local and remote repositories\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, and \u003ccode\u003egit push\u003c/code\u003e to make changes to a repository\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eCreating a New Git Repository\u003c/h2\u003e\n\u003cp\u003eIn order to create a new Git repository, start by going to \u003ccode\u003ehttps://github.com/new\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e(Alternatively, you can click the New button under the repositories tab of you profile page)\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/repos_page_new_button.png\" width=\"550\"\u003e\u003c/p\u003e\n\u003cp\u003eEither way, you'll then end up at the \u003ccode\u003ehttps://github.com/new\u003c/code\u003e page:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/github_new.png\" width=\"550\"\u003e\u003c/p\u003e\n\u003cp\u003eHere, you have several fields to go through:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eNaming the repository\n\u003col\u003e\n\u003cli\u003eFor this example, make the repository name \u003ccode\u003egit_practice\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003eDescription\n\u003col\u003e\n\u003cli\u003eOptional as described; leave it blank for now\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003eThe public vs private\n\u003col\u003e\n\u003cli\u003eDo you want this code to be publicly visible to everyone on GitHub or do you wish to keep it private?\u003c/li\u003e\n\u003cli\u003ePublic is probably fine for this\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003eInitialize this repository with a README\n\u003col\u003e\n\u003cli\u003e\n\u003cstrong\u003eThis option is very important!\u003c/strong\u003e\n\u003col\u003e\n\u003cli\u003eIf you check this box then you will clone the online repository as we did before and work from there\u003c/li\u003e\n\u003cli\u003eIf you don't check this box, then you will start from your local computer and then attach that work to the online repository.\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eFor now, name the repository \u003ccode\u003egit_practice\u003c/code\u003e, select public and \u003cstrong\u003edo NOT check the readme box\u003c/strong\u003e. Then click create repository.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/git_practice_new.png\" width=\"550\"\u003e\u003c/p\u003e\n\u003cp\u003eYou'll see a page like this:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/git_practice_blank_repo.png\" width=\"550\"\u003e\u003c/p\u003e\n\u003cp\u003eThis says it all!\u003c/p\u003e\n\u003cp\u003eHere's an explanation of the steps we're going to follow:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eCreate a directory (GitHub doesn't tell you to do this, but we want to organize and contain what we're sending to the web)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eecho \"# git_practice\" \u0026gt;\u0026gt; README.md\u003c/code\u003e: \u003ccode\u003eecho\u003c/code\u003e is a bash command which will create a markdown file \u003ccode\u003eREADME.md\u003c/code\u003e with the text \u003ccode\u003e\"# git_practice\"\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003egit init\u003c/code\u003e: This turns the current directory into a Git repository\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003egit add README.md\u003c/code\u003e: Now that the current folder is a Git repository from \u003ccode\u003egit init\u003c/code\u003e, we can add files for Git to track\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003egit commit -m \"first commit\"\u003c/code\u003e: Once files have been added to Git, we commit them. The \u003ccode\u003e-m\u003c/code\u003e option is for leaving a comment which is required\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003egit remote add origin url_goes_here\u003c/code\u003e: By default, git does not have to be connected to an online platform like GitHub. You can use Git locally for version control too. There are also other online Git platforms like Bitbucket and GitLab. Here, you're adding a link to GitHub's online hosting so that you can also sync your work with the cloud. This is super handy for sharing your work with others, collaborating, or any of the other reasons why cloud services are used\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eAgain, now that you have an overview, let's have at it!\u003c/p\u003e\n\u003ch2\u003eCreate a new directory for your repo\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOpen up your command line (mac: terminal, windows: git bash)\u003c/li\u003e\n\u003cli\u003eNavigate to the appropriate directory such as /Documents/Flatiron/Module_2_Git_Bash (or however you plan to organize your course materials)\u003c/li\u003e\n\u003cli\u003eCreate a new folder for this lesson \u003ccode\u003emkdir git_practice\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eNavigate into your new folder\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003ecd git_practice\u003c/code\u003e\u003c/p\u003e\n\u003ch2\u003eInitialize this folder as a git repository\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003egit init\u003c/code\u003e\u003c/p\u003e\n\u003ch2\u003eCreate a README\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eecho \"# git_practice\" \u0026gt;\u0026gt; README.md\u003c/code\u003e as described works perfectly well\u003c/li\u003e\n\u003cli\u003eAlternatively, if you're feeling adventurous, you can try a text editor such as nano, vim, or emacs\n\u003cul\u003e\n\u003cli\u003eIf you're going the adventurous route, try \u003ccode\u003enano README.txt\u003c/code\u003e for now and then type \"# git_practice\" in the file. Press \"Ctrl+X\" to quit and press \"Y\" to confirm you wish to save your changes\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eGit Status\u003c/h2\u003e\n\u003cp\u003eWhile not required, let's get familiar with what's going on with \u003ccode\u003egit status\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003eGit Add\u003c/h2\u003e\n\u003cp\u003eAdd your file. You can use \u003ccode\u003egit add README.md\u003c/code\u003e or \u003ccode\u003egit add --all\u003c/code\u003e (if there were multiple files, you would add all of them).\u003c/p\u003e\n\u003ch2\u003eGit Status\u003c/h2\u003e\n\u003cp\u003eAgain, not required but helpful to get familiar with everything. Try it again and note the difference: \u003ccode\u003egit status\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003eGit Commit\u003c/h2\u003e\n\u003cp\u003eNow that we've added the files, we're ready to finalize them to our version history. Commit them with \u003ccode\u003egit commit -m \"your message here\"\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003eAdd a Remote Location\u003c/h2\u003e\n\u003cp\u003eAgain, remember that Git itself is a version control system that can be used anywhere. GitHub is an online hosting platform allowing us to take Git repositories to the cloud to share and collaborate. By adding a remote location, we are able to sync our work between online and offline and collaborate with others. The \u003ccode\u003eorigin\u003c/code\u003e is simply a default naming convention symbolizing that the online version will be the central source of truth for this repository.\u003c/p\u003e\n\u003cp\u003eWith that, we can set it up with\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit remote add origin the_url_for_the_repo\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eGenerally, it's easiest to simply copy and paste from the code provided by GitHub.\u003c/p\u003e\n\u003ch2\u003ePushing our changes\u003c/h2\u003e\n\u003cp\u003eWe've already added our \u003cstrong\u003eREADME.md\u003c/strong\u003e file to Git and commited the changes. While these changes are present and up to date (take a look at \u003ccode\u003egit status\u003c/code\u003e again), they are not reflected online yet as we haven't synced our updates with our online version. To do this, type \u003ccode\u003egit push origin master\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eIf you are wondering what \u003ccode\u003emaster\u003c/code\u003e is, it's the name of our branch. You can use branches in git to seperate versions of code from each other. A common example comes from web development for production environments. The \u003ccode\u003emaster\u003c/code\u003e branch usually contains the working code for the website or app in production, and then other branches can be created for developing updates and new features, while not breaking the current working version. \u003ccode\u003emaster\u003c/code\u003e is the default branch for all Git repositories, and we'll take a further look into branches in general in the upcoming lessons.\u003c/p\u003e\n\u003ch2\u003ePreviewing Changes\u003c/h2\u003e\n\u003cp\u003eNow that you've pushed your changes online, refresh the GitHub page. You should now see a little page like this:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/git_repo.png\" width=\"550\"\u003e\u003c/p\u003e\n\u003cp\u003eCongratulations! You just created your first Git repository!\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eIn this lesson, we continued to practice our bash skills with the command line and started practicing our version control skills with Git. We created our first Git repository from scratch, and practiced adding, commiting, and pushing those changes to GitHub.\u003c/p\u003e","exportId":"git-practice"},{"id":142237,"title":"Collaborating with Git Branches","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-branches\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-branches/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSo far we've primarily presented Git as a version control system. Not only is Git a good version control system, it is also a marvelous tool for collaboration and team development. In fact, it was originally designed by Linus Torvalds for coordinating development for the Linux kernel. A primary mechanism through which Git collaboration can effectively be organized is the concept of branches. \u003c/p\u003e\n\n\u003cp\u003eTwo golden practices in collaborating with \u003ccode\u003egit\u003c/code\u003e are:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eKeep the \u003ccode\u003emaster\u003c/code\u003e \u003cem\u003ebranch\u003c/em\u003e functional at all times\u003c/li\u003e\n\u003cli\u003eKeep lines of work ( \u003cem\u003ebranches\u003c/em\u003e ) separate from each other\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eLet's explore \u003ccode\u003egit\u003c/code\u003e \u003cem\u003ebranches\u003c/em\u003e and we'll come back to review why these golden practices are so helpful.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain branches and their purpose in git\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate a new branch\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eSwitch between branches\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit merge\u003c/code\u003e to merge different branches\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eIdentify and fix merge conflicts when merging branches\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eDefine a \u003ccode\u003egit\u003c/code\u003e branch\u003c/h2\u003e\n\n\u003cp\u003eA \u003ccode\u003egit\u003c/code\u003e branch is a means to separate a new set of commits or edits from another branch. Typically we create a new branch off of \u003ccode\u003emaster\u003c/code\u003e. If all developers we collaborate with honor golden practice 1, we can trust that \u003ccode\u003emaster\u003c/code\u003e will be a safe starting point. \u003c/p\u003e\n\n\u003cp\u003eWhen we branch, we're creating a separate parallel universe. We can experiment there without any adverse effects to the \u003ccode\u003emaster\u003c/code\u003e branch. It's a contained sandbox where mistakes can be made or ideas can incubate.\u003c/p\u003e\n\n\u003cp\u003eIt's an idea that a lot of fiction has presented in the last 50 years.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eParallel Universe\u003c/th\u003e\n\u003cth\u003eSource\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eMirror Dimension\u003c/td\u003e\n\u003ctd\u003eDr. Strange (2016)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDarkest Timeline\u003c/td\u003e\n\u003ctd\u003e\"Community\" / \"Inspector Spacetime\"\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eThe entire premise of..\u003c/td\u003e\n\u003ctd\u003e\"Dr. Who\"\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eMirror, Mirror (Evil Kirk / Spock)\u003c/td\u003e\n\u003ctd\u003eStar Trek\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cem\u003ePlot Against America\u003c/em\u003e\u003c/td\u003e\n\u003ctd\u003ePhilip Roth\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eThe entire plot of...\u003c/td\u003e\n\u003ctd\u003e\"Primer\" (2004)\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eIf you understand multiple-timeline fiction, you get the idea of branches.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://media.giphy.com/media/aorHd4Tl6qIDK/giphy.gif\" alt=\"Annie Edison Says Farewhen to the Inspector\"\u003e\u003c/p\u003e\n\n\u003cp\u003eBy working in branches, collaborators can work without messing with the main timeline, known as \u003ccode\u003emaster\u003c/code\u003e. OK, so how can we \u003cem\u003eactually\u003c/em\u003e leverage this reality-shattering idea?\u003c/p\u003e\n\n\u003ch2\u003eCreate a new branch\u003c/h2\u003e\n\n\u003cp\u003eLet's suppose a \u003ccode\u003emaster\u003c/code\u003e branch with two commits:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-branches/master/images/new_image_git_1.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eBest practices suggest that any new set of changes related to fixing a bug, creating a feature, or even messing around with experimental code in a \"sandbox\", should be started on a new branch.\u003c/p\u003e\n\n\u003cp\u003eIn order to start a new branch, type: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e$ git branch \u0026lt;new-branch-name\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis creates a new branch. If you wish to see a list of all branches associated with a \u003ccode\u003egit\u003c/code\u003e repo, you can type: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e$ git branch -a\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn case of a branch relating to writing a new feature, you could name the branch \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e. Thus: \u003ccode\u003egit branch add-preprocessing-and-normalization\u003c/code\u003e creates a new branch named \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e. This will take the entire commit history of the branch you're on (usually \u003ccode\u003emaster\u003c/code\u003e) and make it the same history as on the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e branch.\u003c/p\u003e\n\n\u003cp\u003eAt this moment \u003ccode\u003emaster\u003c/code\u003e and \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e \u003cstrong\u003eare the same branches / realities\u003c/strong\u003e etc. \u003c/p\u003e\n\n\u003ch2\u003eSwitch to a new branch\u003c/h2\u003e\n\n\u003cp\u003eIn order to start making changes on your new branch, you need to \"check it\nout.\" After checking a branch out, your commits will be added to that branch's\nhistory. You move between branches with: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e$ git checkout \u0026lt;branch-name\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eProtip\u003c/strong\u003e: You can create and checkout a new branch in one command using:\n\u003ccode\u003egit checkout -b \u0026lt;new-branch-name\u0026gt;\u003c/code\u003e.  This will both create the branch\n\u003ccode\u003enew-branch-name\u003c/code\u003e and move into it by checking it out.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIf you are currently on \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e, you can move back to \u003ccode\u003emaster\u003c/code\u003e\nwith \u003ccode\u003egit checkout master\u003c/code\u003e. You can also type \u003ccode\u003egit checkout -\u003c/code\u003e in order to move\nback to the previous branch.\u003c/p\u003e\n\n\u003cp\u003eWhen you add commits to a branch, you can see the history of the commits by typing: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e$ git log --graph\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe \u003ccode\u003egit log\u003c/code\u003e command displays the history of commits\nfor the branch you're on.  The \u003ccode\u003e--graph\u003c/code\u003e \"flag\" tells \u003ccode\u003egit\u003c/code\u003e to make it pretty,\nlike a timeline. You can use \"Space\" to page down the history of commits. Use\n\u003ccode\u003eq\u003c/code\u003e to exit.\u003c/p\u003e\n\n\u003cp\u003eLet's suppose we added two new commits to our new branch. We could visualize it\nas:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-branches/master/images/new_image_git_2.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eTo make sure that you don't lose work, you should make sure all your changes\nare committed before you switch branches. If you're doing work in\n\u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e that updates \u003ccode\u003emodel.py\u003c/code\u003e, because \u003ccode\u003emaster\u003c/code\u003e \u003cem\u003ealso\u003c/em\u003e has\na \u003ccode\u003emodel.py\u003c/code\u003e file, \u003ccode\u003emaster\u003c/code\u003e could overwrite your changes. Make sure all your\nchanges are committed before you switch branches.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eAdvanced\u003c/strong\u003e: \u003ccode\u003egit\u003c/code\u003e has a powerful feature called \u003ccode\u003estash\u003c/code\u003e which can be used\nwhen you're ready to hold changes-in-progress. When you're very comfortable\nwith \u003ccode\u003egit\u003c/code\u003e, look into it!\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAs you add more commits on the new branch you're changing \u003cem\u003eonly\u003c/em\u003e the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e reality. The \u003ccode\u003emaster\u003c/code\u003e branch \u003cstrong\u003ewill not be changed\u003c/strong\u003e. \u003c/p\u003e\n\n\u003cp\u003eYou can confirm this by first checking out \u003ccode\u003emaster\u003c/code\u003e using \u003ccode\u003egit checkout master\u003c/code\u003e, then use \u003ccode\u003egit log --graph\u003c/code\u003e again, and you can see that the \u003ccode\u003emaster\u003c/code\u003e branch \u003cem\u003eonly\u003c/em\u003e has the code up to the moment you \"branched\" into the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e timeline, er, branch.\u003c/p\u003e\n\n\u003cp\u003eThe code from \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e is safely tucked away in that branch, waiting patiently in isolation from the rest of your code in \u003ccode\u003emaster\u003c/code\u003e until the feature is considered complete. Let's talk about merging these commits into \u003ccode\u003emaster\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eMerge a branch into master\u003c/h2\u003e\n\n\u003cp\u003eNow that you have some additions to the code that you'd like to combine back with the \u003ccode\u003emaster\u003c/code\u003e, the goal is to bring the commits that occurred on the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e branch into the \u003ccode\u003emaster\u003c/code\u003e branch. By merging the branch, \u003ccode\u003emaster\u003c/code\u003e will have all of the commits from the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e branch as though those events occurred on the \u003ccode\u003emaster\u003c/code\u003e branch.\u003c/p\u003e\n\n\u003cp\u003eWhen merging a branch with \u003ccode\u003egit merge\u003c/code\u003e, it's important to be currently working on your target branch, the branch that you want to move the content to of the new branch. \u003c/p\u003e\n\n\u003cp\u003eThe first step for our \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e merge is to checkout \u003ccode\u003emaster\u003c/code\u003e because that is where you want the commits to end up. You can then use \u003ccode\u003egit merge \u0026lt;branch-to-merge\u0026gt; -m \"message\"\u003c/code\u003e like shown here: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e$ git checkout master\n$ git merge add-preprocessing-and-normalization -m \"merge in the feature\" \n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNow the branches have been merged. If you type \u003ccode\u003egit log --graph\u003c/code\u003e, you'll see the commits from the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e branch on your \u003ccode\u003emaster\u003c/code\u003e branch.\u003c/p\u003e\n\n\u003cp\u003eHere's another way to visualize it:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-branches/master/images/new_image_git_3.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn this graphic, you might note that a commit happened to \u003ccode\u003emaster\u003c/code\u003e \u003cem\u003ebetween\u003c/em\u003e\nthe two commits that made up our feature branch. The amazing thing is \u003ccode\u003egit\u003c/code\u003e\nreconciles the \u003ccode\u003emaster\u003c/code\u003e timeline, the additional commit, and the commits in\nthis feature branch. It re-weaves multiple realities together. That is\n\u003cem\u003eseriously\u003c/em\u003e cool.\u003c/p\u003e\n\n\u003cp\u003eWhen you're done with a branch that's been merged you can delete it with: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e$ git branch -d \u0026lt;branch-to-delete\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eMerge conflicts\u003c/h2\u003e\n\n\u003cp\u003eOccasionally, when merging two branches, you might run into a message similar to this: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eAuto-merging \u0026lt;filename\u0026gt;\nCONFLICT (content): Merge conflict in \u0026lt;filename\u0026gt;\nAutomatic merge failed; fix conflicts and then commit the result. \n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWhat happened here? Well, you made changes to the same file (\u003ccode\u003e\u0026lt;filename\u0026gt;\u003c/code\u003e in this case) on both the base and the feature branches, and now Git doesn't know which set of changes to retain. In order to resolve this, you need to manually fix the relevant file. To do this, first open the relevant file. After opening the file, you will see conflict markers -- \u003ccode\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; HEAD\u003c/code\u003e, \u003ccode\u003e=======\u003c/code\u003e, and \u003ccode\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; branch-name\u003c/code\u003e. These markers indicate which portions of the file have conflicting changes. The markers and the conflicting changes are represented like this: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e...\n...\neverthing is fine here\n\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; HEAD\n...\n...\nthis is the portion from the destination branch\n=======\n...\n...\nthis is the portion from the source branch\n\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; branch-name\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eAll the lines between \u003ccode\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; HEAD\u003c/code\u003e and \u003ccode\u003e=======\u003c/code\u003e are the conflicting lines from the base branch and all lines between \u003ccode\u003e=======\u003c/code\u003e and \u003ccode\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; branch-name\u003c/code\u003e are the conflicting lines from the \u003ccode\u003e\u0026lt;branch-name\u0026gt;\u003c/code\u003e branch. Here you can discard the set of conflicting lines of your choice and then delete the conflict markers (\u003ccode\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; HEAD\u003c/code\u003e, \u003ccode\u003e=======\u003c/code\u003e, and \u003ccode\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; branch-name\u003c/code\u003e). After you do this, add and commit your changes so you can merge the branches without any issues. \u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eNote: If there are multiple conflicts in the same file, each conflict is surrounded by conflict markers and it is your resposibility to resolve each conflict individually and remove all the conflict markers before you attempt to merge again.\u003c/em\u003e \u003c/p\u003e\n\n\u003ch2\u003eKeep your local repo up to date\u003c/h2\u003e\n\n\u003cp\u003eWhen you are collaborating with several people on a project, it is important that you are always up to date with the changes others are making to the project. Not only will this ensure that you are always working with the latest version of the project, but it will also help reduce merge conflicts! \u003c/p\u003e\n\n\u003cp\u003eThus your local branches can merge in changes from remote repository branches just like they can do for local branches! To update a list of available branches at a remote we use: \u003ccode\u003egit fetch \u0026lt;remote-name\u0026gt;\u003c/code\u003e. Note this only updates the list of branches from remote repositories and not the local branches themselves. If you want to update the local branches, you have to merge. To give you a preview of what merging a remote branch workflow looks like: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e$ git fetch origin \n$ git checkout add-preprocessing-and-normalization \n$ git merge origin/laurens-preprocessing \n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eAnd now our local \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e has Lauren's ideas woven into it.\u003c/p\u003e\n\n\u003cp\u003eAlternatively, as a shorthand, you can fetch and then automatically merge the same-named branch from the remote using \u003ccode\u003egit pull \u0026lt;remote-name\u0026gt; \u0026lt;branch-name-to-merge-in\u0026gt;\u003c/code\u003e. \u003c/p\u003e\n\n\u003ch2\u003eExplain the motivation of the \"Golden Practices\"\u003c/h2\u003e\n\n\u003cp\u003eAs developers we try to make sure that everyone has a clean place to start from: be that for writing a new feature or fixing a bug. Branching lets us keep \u003ccode\u003emaster\u003c/code\u003e working at all times. If an emergency bug comes up, we know we have a\nsolid foundation to build from. Feature branches also help us look at \u003ccode\u003egit log\u003c/code\u003e and see what the intention of a feature was.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eGit is a complex tool, and these tools are just scratching the surface for collaborating with people. These workflows are just being introduced to you -- and it may be challenging for the time being. You'll have lots of time to practice them and get used to what each command does. Don't try to cram it all in at once; instead just start to get an understanding of what is at your disposal.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"http://imgs.xkcd.com/comics/git.png\" alt=\"XKCD Git\"\u003e\u003c/p\u003e\n\n\u003cp\u003eImage courtesy of \u003ca href=\"https://www.xkcd.com/\"\u003exkcd\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eDo not do as stick man suggests!\u003c/em\u003e\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-git-branches\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-git-branches\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-branches/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"collaborating-with-git-branches"},{"id":142238,"title":"Git Merge - Lab","type":"WikiPage","indent":1,"locked":false,"requirement":"must_mark_done","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-merge-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-merge-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIt's time to continue to practice your git and bash skills! In this lab, you'll work primarily from the command line in order to create a git repository, create a development branch and practice merging updates into a master copy. Along the way, you'll see how python scripts can be run from the command line and continue to get more familiar with git and bash in general!\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eExplain branches and their purpose in git\u003c/li\u003e\n\u003cli\u003eCreate a new branch\u003c/li\u003e\n\u003cli\u003eSwitch between branches\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit merge\u003c/code\u003e to merge different branches\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eCreate a Local Folder to House the Git Repository\u003c/h2\u003e\n\u003cp\u003eTo start, create a folder from the command line. (Be sure to place this in a logical, organized location!)\u003c/p\u003e\n\u003ch2\u003eInitialize Git In Your New Folder\u003c/h2\u003e\n\u003cp\u003eStill working from the command line, navigate into your folder and initialize git!\u003c/p\u003e\n\u003ch2\u003eOptional: Check What's Going On with git status\u003c/h2\u003e\n\u003ch2\u003eCreate a New Python File\u003c/h2\u003e\n\u003cp\u003eFrom the command line type \u003ccode\u003enano numbers.py\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eInside the file that opens write the following:\u003c/p\u003e\n\u003cp\u003e(use 4 spaces for the indentation on the second line) \u003ccode\u003e\nfor i in range(10):\n    print(i**2)\n\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003ePress Ctrl+X to exit and press Y to confirm that you wish to save your changes.\u003c/p\u003e\n\u003ch2\u003eTest Your Python File\u003c/h2\u003e\n\u003cp\u003ePython files can be run from the command line with \u003ccode\u003epython filename\u003c/code\u003e.\u003cbr\u003eSo in this case, let's practice running our super simple script with \u003ccode\u003epython numbers.py\u003c/code\u003e. With luck, you should see the square numbers up through 81.\u003c/p\u003e\n\u003ch2\u003eAdd and Commit Your Changes\u003c/h2\u003e\n\u003cp\u003eAdd and commit (with a comment) your new file.\u003c/p\u003e\n\u003ch2\u003eCreate and Checkout a New Branch\u003c/h2\u003e\n\u003cp\u003eCreate a new branch called cubes and switch to it.\u003c/p\u003e\n\u003ch2\u003eModify the Branch\u003c/h2\u003e\n\u003cp\u003eType \u003ccode\u003enano numbers.py\u003c/code\u003e to open up the file again.\u003c/p\u003e\n\u003cp\u003eChange the file from\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efor i in range(10):\n    print(i**2)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eto\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efor i in range(10):\n    print(i**3)\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eAdd and Commit the Changes to the Cubes Branch\u003c/h2\u003e\n\u003cp\u003eAdd and commit your changes to the cubes branch.\u003c/p\u003e\n\u003ch2\u003eSwitch Back to the Master Branch\u003c/h2\u003e\n\u003cp\u003eNow that we've made development changes in our new branch, we may wish to integrate them back into our master branch such as updating our production code. To do this, we'll switch back to the master branch and then merge the changes we made to our development branch.\u003c/p\u003e\n\u003ch2\u003eMerge the Changes from Cubes\u003c/h2\u003e\n\u003cp\u003eFinally, let's merge the changes from the cubes branch into our master branch.\u003c/p\u003e\n\u003ch2\u003eDo a Couple Sanity Checks\u003c/h2\u003e\n\u003cp\u003eEverything should have gone smoothly, but let's do a couple of checks to be sure. Try running the python file again and observe the output. Take a look a \u003ccode\u003egit status\u003c/code\u003e and see what the output is.\u003c/p\u003e\n\u003ch2\u003eDelete the Development Branch\u003c/h2\u003e\n\u003cp\u003eWhile deleting branches should be cautionary, now that we've merged our changes into the master, we really don't need our development cubes branch anymore. To clean things up, delete the branch.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eCongratulations! In this lab, you practiced using multiple branches in git and merging your changes together. What's more, we also saw that you can use git locally with no remote connection to GitHub if you wish!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-git-merge-lab\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-git-merge-lab\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-merge-lab/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\n\u003c/footer\u003e","exportId":"git-merge-lab"},{"id":142239,"title":"Git Stash - Lab","type":"WikiPage","indent":1,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-stash-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-stash-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou've started to see some of the awesome power of git as a tool for version control and collaboration. Sometimes, workflows aren't quite as linear or straightforward as those examples we've discussed thus far. For example, if both the local and remote versions of a repository have been updated at the same time, you may encounter merge conflicts! Essentially, Git is unsure of which changes to incorporate if both versions of the repository have changed the same line of the same file. In these cases, \u003ccode\u003egit stash\u003c/code\u003e can be a valuable tool: it allows you to \u003cem\u003estash\u003c/em\u003e away your changes for later use!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse \u003ccode\u003egit stash\u003c/code\u003e to store changes to files\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eIdentify and fix merge conflicts when merging branches \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eGetting started\u003c/h2\u003e\n\n\u003cp\u003eSince we're doing another Git investigation, let's start by working from our previously created \u003ccode\u003egit\u003c/code\u003e repository from \u003cem\u003eGit Merge - Lab\u003c/em\u003e. \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCheck \u003ccode\u003egit status\u003c/code\u003e \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHopefully, you should see the usual:  \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eOn branch master\nnothing to commit, working tree clean\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf not, add and commit your changes and recheck \u003ccode\u003egit status\u003c/code\u003e. \u003c/p\u003e\n\n\u003ch2\u003eMake some changes\u003c/h2\u003e\n\n\u003cp\u003eNow that we have a clean working directory, let's muck things up! (Sorry if you already had untracked changes and cleaned them up; it's good practice at the very least!)\u003c/p\u003e\n\n\u003cp\u003eOnce again, let's modify \u003ccode\u003enumbers.py\u003c/code\u003e. Open up the file from the command line with \u003ccode\u003enano numbers.py\u003c/code\u003e and modify the script so that it prints the fourth power of numbers. The script should look like this:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003efor i in range(10):\n    print(i**4)    \n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cul\u003e\n\u003cli\u003eCheck \u003ccode\u003egit status\u003c/code\u003e again \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis time, you should see something like:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eOn branch master\nChanges not staged for commit:\n  (use \"git add \u0026lt;file\u0026gt;...\" to update what will be committed)\n  (use \"git checkout -- \u0026lt;file\u0026gt;...\" to discard changes in working directory)\n\n    modified:   numbers.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eTry out \u003ccode\u003egit stash\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003eNow for our new wizardry! Execute the command \u003ccode\u003egit stash\u003c/code\u003e. Afterward, do another \u003ccode\u003egit status\u003c/code\u003e to see what's going on.\u003c/p\u003e\n\n\u003ch3\u003eFurther exploration\u003c/h3\u003e\n\n\u003cp\u003eYou should see that we're back to a clean working tree. You can further see this by using the bash command \u003ccode\u003ecat\u003c/code\u003e which will print the contents of a file to the command line, so in this case, try out \u003ccode\u003ecat numbers.py\u003c/code\u003e. You should see that our file has reverted back to the previous version where we were actually cubing our numbers.\u003c/p\u003e\n\n\u003cp\u003eSo what happened to our changes? Where did they go? We stashed them. To see stashes, you can use the command \u003ccode\u003egit stash list\u003c/code\u003e. Try it out now. \u003c/p\u003e\n\n\u003cp\u003eIf you want a few more details about the stash, you can use \u003ccode\u003egit stash show\u003c/code\u003e. Again, give it a try.\u003c/p\u003e\n\n\u003cp\u003eFinally, if you want to re-implement your stashed changes you can use \u003ccode\u003egit stash apply\u003c/code\u003e. Let's go ahead and reapply our changes (raising numbers to the fourth power rather than the third). \u003c/p\u003e\n\n\u003cp\u003eOnce you do that, you'll see a message as if we did \u003ccode\u003egit status\u003c/code\u003e, and you'll see that we once again have changes that have not been added or committed. What's more, while we've applied our stash, the stash still exists (you can see this once again with \u003ccode\u003egit stash list\u003c/code\u003e).\u003c/p\u003e\n\n\u003ch2\u003eSee all of the commit history\u003c/h2\u003e\n\n\u003cp\u003eAs a friendly reminder, you can see all of the commit history to date with \u003ccode\u003egit log --graph\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eCreate a new branch\u003c/h2\u003e\n\n\u003cp\u003eNext, we're going to briefly investigate some merge conflicts. These occur when you have two versions of the same file which both have the same line modified. This typically occurs when merging branches as we cleanly did in the last lab. Here, we'll cause the same behavior to occur by modifying our new branch and then attempting to apply our stashed changes.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a new branch called \u003ccode\u003ebeta\u003c/code\u003e \u003c/li\u003e\n\u003cli\u003eOn your new branch, modify \u003ccode\u003enumbers.py\u003c/code\u003e to raise numbers to the 5th power \u003c/li\u003e\n\u003cli\u003eOnce you modify the script, take a look at the state of affairs with \u003ccode\u003egit status\u003c/code\u003e. Then add and commit your changes with an appropriate description \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eMerge Conflicts\u003c/h2\u003e\n\n\u003cp\u003eNow for the fun part. We're going to create a merge conflict. Execute \u003ccode\u003egit stash apply\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou should be presented with a message:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eAuto-merging numbers.py\nCONFLICT (content): Merge conflict in numbers.py\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWhat's more, if you open up \u003ccode\u003enumbers.py\u003c/code\u003e with \u003ccode\u003enano numbers.py\u003c/code\u003e, you'll see some bizarre changes:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-stash-lab/master/images/stash_merge_conflict.png\" width=\"750\"\u003e\u003c/p\u003e\n\n\u003cp\u003eSo what do all of these symbols mean?\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; Updated Upstream\u003c/code\u003e - the beginning of the original branch (beta)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e=======\u003c/code\u003e - the end of the original branch/the beginning of the branch being merged in (our stashed changes)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; Stashed changes\u003c/code\u003e - the end of our stashed changes\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis is because our new branch and the stashed changes modified the same line of the same file. Specifically, both modified line 2 of the \u003ccode\u003enumbers.py\u003c/code\u003e file. As such, Git is unsure of which version of line 2 we wish to incorporate. It has highlighted this for us, and it’s now our job to manually modify the file to resolve these conflicts, keeping the version we are interested in.\u003c/p\u003e\n\n\u003cp\u003eAs a further note, this is why development would generally be separated by files, or at the very least, sections of files; we can avoid merge conflicts and continue to collaborate together working seamlessly on a project. \u003c/p\u003e\n\n\u003cp\u003eYour \u003ccode\u003enumbers.py\u003c/code\u003e file should now be back to numbers raised the 4th degree as such:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003efor i in range(10):\n    print(i**4)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e(To do this, we simply manually opened up the file with nano and resolved the merge conflicts, including removing the notes left for us by Git.)\u003c/p\u003e\n\n\u003cp\u003eChecking \u003ccode\u003egit status\u003c/code\u003e, we now see that we have once again modified \u003ccode\u003enumbers.py\u003c/code\u003e. As usual, we can now add and commit those changes to our version history. \u003c/p\u003e\n\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.git-scm.com/docs/git-stash\"\u003eGit Stash Documentation\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we took a look at \u003ccode\u003egit stash\u003c/code\u003e as well as merge conflicts, and how to resolve them. \u003ccode\u003egit stash\u003c/code\u003e is often useful when you need to quickly store away your changes and don't wish to create a new branch; you intend to quickly reintroduce these changes but need to put them to the side for a moment. This can be helpful if the remote repository has been updated and you first need to fetch and pull it, but have already also made some changes locally. In this and other cases, it's often easiest to first just stash the changes and then apply them subsequently. Similarly, we also saw that stashed changes can be applied to multiple branches. Overall, the more you use Git and its myriad of tools, the more options you'll have for organizing and synchronizing your development process.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-git-stash-lab\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-git-stash-lab\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-stash-lab/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"git-stash-lab"},{"id":142240,"title":"Git Resources","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-resources\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-resources/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've gotten a solid introduction to git, it's time to give you a resource trove! Take a look at these resources if you want to learn more. They're optional but great to make note of and come back to.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse resources to expand Git and Markdown skills\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eGit and Markdown Resources\u003c/h2\u003e\n\n\u003ch3\u003eGit Basics\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e(\u003ca href=\"https://gist.github.com/aviflombaum/0d1c335291350a2e4036\"\u003eGist of Git resources\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Getting-Started-A-Short-History-of-Git\"\u003eGetting Started 1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Getting-Started-About-Version-Control\"\u003eGetting Started 2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Basics-Recording-Changes-to-the-Repository\"\u003eGit Basics 1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Basics-Viewing-the-Commit-History\"\u003eViewing The Commit History\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Basics-Working-with-Remotes\"\u003eRemotes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://bloggytoons.com/posts/2013/10/10/git-kitchen-wchef-ramsay\"\u003eGit Kitchen\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Branching-What-a-Branch-Is\"\u003eBranches\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Branching-Basic-Branching-and-Merging\"\u003eMerging\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Branching-Branch-Management\"\u003eBranch Management\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Branching-Branching-Workflows\"\u003eWorkflows\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eAdditional Git Resources\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://rogerdudler.github.io/git-guide/\"\u003eGit Guide\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://pcottle.github.io/learnGitBranching/\"\u003eGit Branching\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://marklodato.github.io/visual-git-guide/index-en.html\"\u003eVisual Git\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.youtube.com/watch?v=3QnD2c4Xovk\u0026amp;feature=plcp\"\u003ePublic Private Key Video\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eMarkdown\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://github.github.com/github-flavored-markdown\"\u003eGitHub Flavored Markdown\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://daringfireball.net/projects/markdown/basics\"\u003eDaring Fireball MD Basics\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://daringfireball.net/projects/markdown/syntax\"\u003eDaring Fireball MD Syntax\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://bywordapp.com/markdown/guide.html\"\u003eByword MultiMarkdown Guide\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4\u003eMarkdown plugins and apps\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/revolunet/sublimetext-markdown-preview\"\u003eSublime MD Preview Plugin\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://mouapp.com/\"\u003eMou MD writer app\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://atom.io\"\u003eAtom text editor\u003c/a\u003e has a markdown preview built in.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eNot a lesson in the traditional sense, but a great list of resources for you now or going forward on git resources! (Also of note, Markdown is the text formating used to display readme's on GitHub, hence the .md extension of README.md.) Cheers!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-git-resources\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-git-resources\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-resources/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"git-resources"},{"id":142241,"title":"PEP8","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-PEP8\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-PEP8/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gbccc950221437cbbe6271c82cf9b8e6f"},{"id":142242,"title":"Bash and Git - Recap","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-collab-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-collab-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section you took a look at how Git is used for collaboration as part of a development team. This started by practicing navigating directories using the command line and continued by further investigating Git commands. You also practiced creating and maintaining Git repositories including adding, committing, and pushing changes. You saw how to make multiple branches and then merge changes back into the master branch. You also saw how to navigate merge conflicts when the same line of the same file has been edited in both branches trying to be merged. Make sure you continue to head back to the PEP8 and Git documentation for clarification, review, and learn more commands and arguments or style suggestions. \u003c/p\u003e\n\n\u003ch2\u003eBash and the command line\u003c/h2\u003e\n\n\u003cp\u003eRecall some of our primary tools for navigating the command line: \u003ccode\u003ecd\u003c/code\u003e, \u003ccode\u003els\u003c/code\u003e, \u003ccode\u003epwd\u003c/code\u003e, \u003ccode\u003emkdir\u003c/code\u003e, and \u003ccode\u003enano\u003c/code\u003e. You can use \u003ccode\u003ecd ..\u003c/code\u003e to move up a directory level and \u003ccode\u003ecd ~/Documents\u003c/code\u003e for folders starting at the user's home directory. You can use \u003ccode\u003els -a\u003c/code\u003e to view hidden files and \u003ccode\u003els -la\u003c/code\u003e for a long listing of all files. (Again the \u003ccode\u003el\u003c/code\u003e argument is for long form and the \u003ccode\u003ea\u003c/code\u003e in both cases for all files, including those beginning with \u003ccode\u003e.\u003c/code\u003e, indicating that they are hidden.) You can also make directories with the \u003ccode\u003emkdir\u003c/code\u003e command. You saw how to use \u003ccode\u003enano\u003c/code\u003e to make and edit files from the command line. Other editors such as emacs and vim can be worthwhile if you are doing more substantial command line editing. \u003c/p\u003e\n\n\u003ch2\u003eGit\u003c/h2\u003e\n\n\u003cp\u003eRemember that Git was not only designed as a version control system, but a means for collaborative development. It was originally released in 2005 by Linus Torvalds, to help facilitate development of the Linux kernel. While there is still much to learn about Git, you saw some of the primary concepts all developers interact with when using Git to collaborate on projects. \u003c/p\u003e\n\n\u003ch3\u003eGit commands\u003c/h3\u003e\n\n\u003cp\u003eYou've seen a decent amount of Git commands including \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, \u003ccode\u003egit branch\u003c/code\u003e, \u003ccode\u003egit checkout\u003c/code\u003e, and \u003ccode\u003egit merge\u003c/code\u003e. Also its important to know how to access documentation so that you can both review and extend your knowledge. For example, to see a list of git commands in general, start with \u003ccode\u003egit --help\u003c/code\u003e. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-collab-recap/master/images/git_help.png\" width=\"700\"\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can also review individual commands with 'git help ' such as \u003ccode\u003egit help add\u003c/code\u003e (press \u003ccode\u003eq\u003c/code\u003e to quit the documentation.)\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-collab-recap/master/images/git_help_add.png\" width=\"1200\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn the synopsis, you can see optional parameters such as in \u003ccode\u003egit add --all\u003c/code\u003e which you previously used before. \u003c/p\u003e\n\n\u003cp\u003eSimilarly, for the commit documentation, take a look at \u003ccode\u003egit help commit\u003c/code\u003e (and subsequently use \u003ccode\u003eq\u003c/code\u003e to quit.)\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-collab-recap/master/images/git_help_commit.png\" width=\"1000\"\u003e\u003c/p\u003e\n\n\u003cp\u003eHere, you might notice additional arguments that you can begin to use, such as \u003ccode\u003ea\u003c/code\u003e, which you see listed in the synopsis.  Then, if you look under the options header, you will see a full description.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-collab-recap/master/images/git_help_commit_options.png\" width=\"900\"\u003e\u003c/p\u003e\n\n\u003cp\u003eSo for example, you could combine this with the \u003ccode\u003em\u003c/code\u003e option as \u003ccode\u003egit commit -am \"your commit message\"\u003c/code\u003e. (Indeed this is a useful shortcut; by doing this you can bypass the \u003ccode\u003egit add\u003c/code\u003e command in your workflow in updating files being tracked by Git.)\u003c/p\u003e\n\n\u003cp\u003eAt some point, you will also run into some trouble with Git and have merge conflicts or other idiosyncrasies between versions of your code. You have seen how Git annotates merge conflicts, and can also use \u003ccode\u003egit stash\u003c/code\u003e to temporarily store changes.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eOnce again, preliminary tools such as the command line and Git are foundational to managing projects and maintaining code. Similarly, knowing how to access further information quickly is also an indispensable soft skill. Be sure to continue to organize work, modularize, and use version control. Also, keep PEP8 in mind and be thoughtful of how you organize, comment, and structure your code. All of these will make you a better programmer and Data Scientist.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-git-collab-recap\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-git-collab-recap\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-collab-recap/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"bash-and-git-recap"}]},{"id":15168,"name":"Topic 3: Control flow, Functions, and Statistics","status":"unlocked","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g18d948c09045964203ab5e0a93ee9b5d","items":[{"id":142243,"title":"Control Flow, Functions, and Statistics - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-section-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-section-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll learn about creating functions in Python, iterating over nested loops, and using basic statistics to measure aspects of different datasets. \u003c/p\u003e\n\n\u003ch2\u003eCoding in Python\u003c/h2\u003e\n\n\u003cp\u003eWe're going to spend most of this section deepening and widening your experience of programming in Python. We're going to introduce some of Python's built-in functions and methods, show you some more types of loops, and give you some practice of creating and using custom functions so you can efficiently reuse your code.\u003c/p\u003e\n\n\u003ch2\u003eBasic Statistics\u003c/h2\u003e\n\n\u003cp\u003eWe're then going to take a break from coding by introducing some basic statistics - measures of centrality and dispersion - that will be crucial in understanding the datasets that you work with as a professional Data Scientist. We'll also get some more practice writing custom functions for calculating these statistics. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIf you're already a professional software developer with a degree in a quantitative subject, it's not going to be the hardest section for you to complete. But please take the time to practice your skills and feel free to dig deeper with the optional \"Level Up\" content if you're done more quickly than your peers.\u003c/p\u003e\n\n\u003cp\u003eIf you're completely new to coding and/or stats, you will probably find this a fairly challenging section. We're continuing to introduce core programming concepts at quite a pace. Don't worry if you still feel overwhelmed as you work through this section or work on the projects. You're going to get to practice most of these skills on a daily or weekly basis for the rest of the course!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-python-section-intro\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-python-section-intro\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-python-section-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"control-flow-functions-and-statistics-introduction"},{"id":142244,"title":"Built-in Python Operators, Functions and Methods","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-operators-functions-and-methods\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-operators-functions-and-methods/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gea3b04a09df945c51bb5d6ac73e901b3"},{"id":142245,"title":"Built-in Python Operators, Functions, and Methods - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-operators-functions-and-methods-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-operators-functions-and-methods-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g5b91f624007cabf8550bf3bd8d049e8c"},{"id":142246,"title":"While Loops, Break and Continue","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-while-loops-break-and-continue\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-while-loops-break-and-continue/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g1a83228f902fafaa9546efc7c6302310"},{"id":142247,"title":"While Loops, Break and Continue - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-while-loops-break-and-continue-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-while-loops-break-and-continue-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gc24ed56049691264b2a96de36a37926a"},{"id":142248,"title":"Using Nested Loops","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-nested-loops\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-nested-loops/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"ga493651484086592815ef3a1cc93f035"},{"id":142249,"title":"Using Nested Loops - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-nested-loops-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-nested-loops-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gcae6fd7a09869609e3efb5d2daaaaca4"},{"id":142250,"title":"Creating Functions","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-creating-functions\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-creating-functions/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"ga562909694645a02d9d8437606f8a131"},{"id":142251,"title":"Creating Functions - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-creating-functions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-creating-functions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g45b61ea39770eee4639bac29f390b73a"},{"id":142252,"title":"Functions with Arguments","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-functions-with-arguments\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-functions-with-arguments/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g8ef7254ae10ee7264bc080d0bb90d90c"},{"id":142254,"title":"Functions With Arguments - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-functions-with-arguments-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-functions-with-arguments-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g74c501389e56190e27b8d7fc44731429"},{"id":142255,"title":"User Input and Output in Python","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-user-input-and-output-in-python\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-user-input-and-output-in-python/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"ge32f51922abe58d037f57c1acf773f1f"},{"id":142256,"title":"Mathematical Notation","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mathematical-notation\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mathematical-notation/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn how to read some of the more common mathematical notation that you'll see when reading equations pertaining to Data Science.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRead and understand basic mathematical notation\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eUnderstanding Mathematical Notation\u003c/h2\u003e\n\n\u003cp\u003eWhen learning Data Science, running into dense, arcane-looking mathematical equations is an inevitability. For instance, here's an equation for a machine learning algorithm called a \u003cem\u003eSupport Vector Machine\u003c/em\u003e that you'll learn about later in the course:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5CLARGE%20%5Ctext%7Bminimize:%7D\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5CLARGE%20W(%5Calpha)=-%5Cdisplaystyle%5Csum_%7Bi=1%7D%5E%7B%5Cell%7D%5Calpha_i%20%2B%20%5Cdisplaystyle%5Cfrac%7B1%7D%7B2%7D%5Csum_%7Bi=1%7D%5E%7B%5Cell%7D%5Csum_%7Bj=1%7D%5E%7B%5Cell%7Dy_iy_j%5Calpha_i%5Calpha_j%5Ctextbf%7Bx%7D_i%5Ctextbf%7Bx%7D_j\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5Ctext%7Bsubject%20to:%7D%20%24%20%24%24%20%5CLARGE%20%5Csum_%7B%5Csubstack%7Bi=1%20%5C%5C%200%5Cleq%5Calpha_i%5Cleq%20C%7D%7D%5E%7B%5Cell%7Dy_i%20%5Calpha_i%20=%200\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eDon't stare at this too long, or else you'll get a nosebleed...\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eAt first glance, equations like this often seem impenetrable and impossible to understand. If seeing math like this makes you nervous, don't worry--you're not alone! This is a particularly dense example of mathematical notation, but at the end of the day, it's just a recipe for an algorithm. Whereas we are used to expressing our algorithms in code, mathematicians prefer to use \u003cstrong\u003e\u003cem\u003eMathematical Notation\u003c/em\u003e\u003c/strong\u003e, to express big ideas in small, dense packages full of Greek letters, subscripts, and superscripts. Although these look intimidating in the beginning, they'll seem a lot more manageable once we've learned some basic mathematical notation. \u003c/p\u003e\n\n\u003cp\u003eThe first thing to remember is that there are many, many mathematical symbols. \u003cstrong\u003e\u003cem\u003eDO NOT\u003c/em\u003e\u003c/strong\u003e bother trying to memorize them--that's a waste of time. Instead, keep a cheat sheet handy! And, as with all things, remember that Google is your friend.  There is no shame in looking it up. As a Junior Data Scientist, you're going to be spending an embarrassing amount of time using Google and Stack Overflow to look up things that you don't know. As a Senior Data Scientist, you'll spend the same amount of time doing this--you just won't be embarrassed by it anymore! \u003c/p\u003e\n\n\u003cp\u003eWe've included a cheat sheet in this repo (see below) that you should store in an easy-to-find place on your computer. You'll be using it plenty as a Data Scientist. You'll notice that the cheat sheet also contains examples that go with each notation. Use these to your advantage! Toy examples are your friend. \u003c/p\u003e\n\n\u003cp\u003eThe cheat sheet works wonders for most of the symbols included on that document. However, there are two types of notation that are worth examining in more depth: \u003cstrong\u003e\u003cem\u003eSummations\u003c/em\u003e\u003c/strong\u003e, and \u003cstrong\u003e\u003cem\u003eProducts\u003c/em\u003e\u003c/strong\u003e. \u003c/p\u003e\n\n\u003ch2\u003eSigma Notation (Summations)\u003c/h2\u003e\n\n\u003cp\u003eIn the equation above, you'll notice the following symbol appears:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5Csum\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis is called \u003cstrong\u003e\u003cem\u003eSigma Notation\u003c/em\u003e\u003c/strong\u003e, and is a way of notating \u003cstrong\u003e\u003cem\u003eSummation\u003c/em\u003e\u003c/strong\u003e. \u003c/p\u003e\n\n\u003cp\u003eConsider the following code:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003esum_total = 0\nn = 5\nfor i in range(1, n+1):\n    sum_total += i\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis is pretty simple code--just a for-loop that calculates the sum total of every number between 1 and 5, inclusive (meaning it stops after including 5 in the total, not before, which is why we put \u003ccode\u003en+1\u003c/code\u003e in the range instead of just \u003ccode\u003en\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eA mathematician would express the same algorithm using the following \u003cstrong\u003e\u003cem\u003eSigma Notation\u003c/em\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5CLARGE%5Cdisplaystyle%5Csum_%7Bn=1%7D%5E%7B5%7Dx\"\u003e\u003c/p\u003e\n\n\u003cp\u003ePretty nifty, huh? The equation above says that we should start counting at 1, because we see \u003ccode\u003en=1\u003c/code\u003e under the summation. We should stop once we've hit 5 (inclusive). Our sum totals the sum of each value of X for each step between \u003ccode\u003en=1\u003c/code\u003e and up to (and including) \u003ccode\u003en=5\u003c/code\u003e. \u003c/p\u003e\n\n\u003cp\u003eIf we were to write it out explicitly, it would look like:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5CLARGE%5Cdisplaystyle%5Csum_%7Bn=1%7D%5E%7B5%7Dx=1%2b2%2b3%2b4%2b5\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis was the most simple example of summation since we were just adding in the individual value at each step in the example above. However, we can put anything we want to the right of the Sigma symbol, and this will be what happens at each step. For example, let's consider the following code:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edef f(x):\n    return x**2 - 2\n\nsum_total = 0\nn = 5\nfor i in range(1, n+1):\n    sum_total += f(i)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn the code above, we have a simple function that returns the square of a number, minus 2. This time, the for loop calculates the sum of that function called on every number between 1 and 5, inclusive.  We can write the exact same thing in Sigma Notation as follows:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5CLARGE%5Cdisplaystyle%5Csum_%7Bn=1%7D%5E%7B5%7Dx%5E2-2\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWhich, if \"unrolled\" to show each step, would look like: \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5CLARGE%5Cdisplaystyle%5Csum_%7Bn=1%7D%5E%7B5%7Dx%5E2-2%20=(1%5E2%20-%202)%2b(2%5E2%20-%202)%2b(3%5E2%20-%202)%2b(4%5E2%20-%202)%2b(5%5E2%20-%202)\"\u003e\u003c/p\u003e\n\n\u003cp\u003eFinally, let's consider what this looks like when working with arrays. \u003c/p\u003e\n\n\u003cp\u003eConsider the following code:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003ew = [2.2, 3, -2, 4]\nx = [0.25, 0, 1, -2]\n\nsum_total = 0\n\nfor i in range(len(w)):\n    sum_total += w[i] * x[i]\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn the above example, we use the counter in our for loop as the index to get each subsequent element out of \u003ccode\u003ew\u003c/code\u003e and \u003ccode\u003ex\u003c/code\u003e and multiply them together. We can denote the same thing with Sigma Notation as follows:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5CLARGE%20%5Cdisplaystyle%5Csum_%7Bi=1%7D%5E%7Bw%7D%20w_i%20x_i\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eNOTE:\u003c/em\u003e\u003c/strong\u003e Can you spot the difference? In our for loop, our index starts at 0, while in our Sigma Notation, our index starts at 1. In practice, they still mean the same thing--start at the first element in each list, multiply them, and add them to the sum, and then continue until we've done that for every item in the list \u003ccode\u003ew\u003c/code\u003e. The Sigma Notation starts at 1 because mathematicians start counting at 1, whereas programmers start counting at 0. \u003cstrong\u003e\u003cem\u003eRemember this--it'll save you from buggy code later on!\u003c/em\u003e\u003c/strong\u003e \u003c/p\u003e\n\n\u003ch2\u003ePi Notation (Products)\u003c/h2\u003e\n\n\u003cp\u003eAnother common type of notation is \u003cstrong\u003e\u003cem\u003ePi Notation\u003c/em\u003e\u003c/strong\u003e, which works similarly to Sigma Notation. The only real difference here is that Pi Notation multiplies each step, rather than adds them to a total. With our understanding of Sigma Notation, it isn't that hard to figure out an example of Pi Notation. \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003etotal = 1\nn = 5\n\nfor i in range(1, n+1):\n    total *= i + 2\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn Pi Notation, this would translate to:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5CLARGE%5Cdisplaystyle%5Cprod_%7Bi=1%7D%5E%7B5%7D%20i%20%2b%202\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWhich, when written out completely, would be:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5CLARGE%20%5Cdisplaystyle%5Cprod_%7Bi=1%7D%5E%7B5%7D%20i%20%2b%202%20=%20(1%20%2b%202)%20*%20(2%20%2b%202)%20*%20(3%20%2b%202)%20*%20(%204%20%2b%202)%20*%20(%205%20%2b%202)\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAs you can see from the example above, there isn't too much of a difference between sigma and pi notation. The only difference is that with Sigma, you add the results of each step, whereas with Pi, you multiply them!\u003c/p\u003e\n\n\u003ch2\u003eA Cheat Sheet For the Rest\u003c/h2\u003e\n\n\u003cp\u003eIn the repo containing this notebook, you'll find a PDF document called \u003ccode\u003efull-notation.pdf\u003c/code\u003e. This PDF is a multi-page cheat sheet containing all the Greek letters, as well as other more obscure symbols, and examples of what they mean. Again, don't try to memorize it--just keep this cheat sheet handy for when you need it. In general, we'll make an effort to explain any new mathematical symbols or notation as they come up in future lessons. However, if you're not sure, don't be afraid to use this cheat sheet and Google!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned about how to read basic Sigma and Pi Notation.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-mathematical-notation\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-mathematical-notation\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-mathematical-notation/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"mathematical-notation"},{"id":142257,"title":"Measures of Central Tendency","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-measures-of-central-tendency\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-measures-of-central-tendency/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gdd32d2b6d80ccd0687fe80deb5cd8f30"},{"id":142258,"title":"Measures of Central Tendency - Quiz","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"gd41d8cd98f00b204e9800998ecf8427e","questionCount":6,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":6.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cp\u003e\u003cspan\u003eWhile we recommend using Python to find the answers to these questions, it is not required. You are more than welcome to use a calculator or pencil and paper to solve them, too.\u003c/span\u003e\u003c/p\u003e","exportId":"g078303dc1afa826a09b81f131fcfc17f"},{"id":142259,"title":"Measures of Dispersion","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-measures-of-dispersion\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-measures-of-dispersion/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g4a6ba0714ed616689deebd7f2df9f70c"},{"id":142260,"title":"Measures of Dispersion - Quiz","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"gd41d8cd98f00b204e9800998ecf8427e","questionCount":3,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":3.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"","exportId":"g7ca22a8676c52e453f4419b44ac05651"},{"id":142261,"title":"Implementing Statistics with Functions - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-implementing-statistics-with-functions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-implementing-statistics-with-functions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gc771b191ce8b6ea1490b348faf8c87ed"},{"id":142262,"title":"Covariance and Correlation","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-correlation-covariance\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-correlation-covariance/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"ga83442b6d6d49d8c0f418a3b5bbbbf51"},{"id":142263,"title":"Covariance and Correlation - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-correlation-covariance-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-correlation-covariance-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g923776a3e7e780ca608dd7ff1bdbc6a5"},{"id":142264,"title":"Control Flow, Functions, and Statistics - Recap","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-section-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-section-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you continued to build your Python skills. As you continue your Data Science journey, programming will continue to be one of the most important components of your toolkit.\u003c/p\u003e\n\n\u003ch2\u003eKey Takeaways\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eFunctions and Methods\u003c/strong\u003e - Python has a range of functions and methods (methods are functions associated with an object) that can help us to perform a wide range of useful tasks quickly and efficiently.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eLoops\u003c/strong\u003e - Loops aren't only for collections. \u003ccode\u003ewhile\u003c/code\u003e loops allow us to iterate until a condition is met, and we can use nested loops for more complicated situations (but should be careful about doing so too often).\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eCustom Functions\u003c/strong\u003e - When you write a piece of code that you might want to use again, it often makes sense to save it in as a function, and you can add arguments to functions to allow them to be more flexible in the ways they're reused.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eMeasures of Centrality\u003c/strong\u003e - There are three common ways to measure the \"central tendency\" of a dataset - the mean, the median, and the mode. Each can be used to answer different questions and has strengths or weaknesses that depend on how the data is distributed.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eMeasures of Dispersion\u003c/strong\u003e - There are multiple measures of dispersion. The absolute deviation, variance, standard deviation, and interquartile range can all give us a sense of how closely or widely a dataset is distributed from its central value. Again, this is going to be useful later in the course.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eGreat job! In this section, we spent time deepening our Python skills and introduced some basic statistics that will be important as we work with various types of datasets later in the course.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-python-section-recap\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-python-section-recap\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-python-section-recap/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"control-flow-functions-and-statistics-recap"}]},{"id":15169,"name":"Topic 4: Python Libraries: Numpy and Pandas","status":"started","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g4198f4003e82a9e81c786b385c7271b6","items":[{"id":142265,"title":"Python Libraries: Numpy and Pandas - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-numpy-and-pandas-section-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-numpy-and-pandas-section-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this section, you'll be introduced to two libraries you will use extensively during your career as a Data Scientist: Numpy and Pandas!\u003c/p\u003e\n\u003ch2\u003ePython and the Open-Source Movement\u003c/h2\u003e\n\u003cp\u003eNow that we've learned some Python skills and have some Data Science knowledge, it's time to start gaining experience with the tools the professionals use. There are two programming languages that are heavily used in Data Science: Python and R. As you've probably surmised by now, we'll be focusing on Python. One of the great benefits of the Python language is that it has a very active open-source community, which means tons of great libraries and frameworks we can use to do the heavy lifting. One of the main reasons that Python is such a great choice for Data Science is that the scientific community has written plenty of great packages to do all advanced things we need. This means that when we use Python, we have access to a wealth of robust, effective tools written and maintained by an army of volunteers and professionals.\u003c/p\u003e\n\u003cp\u003eIn this section, we're going to dig into two of the most foundational libraries in the Data Science toolbox -- \u003cstrong\u003e\u003cem\u003eNumpy\u003c/em\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003cem\u003ePandas\u003c/em\u003e\u003c/strong\u003e!\u003c/p\u003e\n\u003ch2\u003eThe Data Science Stack: Numpy and Pandas\u003c/h2\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-numpy-and-pandas-section-intro/master/numpy-logo.png\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-numpy-and-pandas-section-intro/master/pandas-logo.png\" width=\"50%\" height=\"50%\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eThe two most foundational libraries in the Data Science 'Stack' are \u003cstrong\u003e\u003cem\u003eNumpy\u003c/em\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003cem\u003ePandas\u003c/em\u003e\u003c/strong\u003e. In this section, we're going to dig into both libraries and get a feel for how they can make our lives easier and allow us to do amazing things with data with just a few lines of code.\u003c/p\u003e\n\u003ch3\u003eNumpy: Numerical Computation\u003c/h3\u003e\n\u003cp\u003eThe Python library that's most important to Data Scientists is almost certainly \u003ca href=\"http://www.numpy.org/\"\u003eNumpy\u003c/a\u003e. Numpy is a \u003cem\u003eNumerical Computation\u003c/em\u003e Library, because it provides the building blocks for all of the other amazing Python libraries such as Pandas, in addition to providing a quick and easy way to do advanced mathematical computations. In a few short lessons, we're going to learn all about how Numpy works, how we can use it to quickly perform advanced math and computations, and how it fits into Data Science as a whole.\u003c/p\u003e\n\u003ch3\u003ePandas: For Working With Data\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://pandas.pydata.org/\"\u003ePandas\u003c/a\u003e is a library for data analysis that makes Python a much more effective tool for Data Science. Pandas allows us to create \u003cstrong\u003e\u003cem\u003eDataFrames\u003c/em\u003e\u003c/strong\u003e to organize and work with any dataset. You'll probably recognize DataFrames when you see them -- they look just like an Excel Spreadsheet! In this section, we're going to get \u003cstrong\u003eA LOT\u003c/strong\u003e of practice in Pandas. You'll learn how Data Scientists use Pandas to quickly and effectively read, store, manipulate, and export data. The best part is, it's a one-stop shop since it is built on top of libraries like Numpy and Matplotlib!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-numpy-and-pandas-section-intro\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-numpy-and-pandas-section-intro\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-numpy-and-pandas-section-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\n\u003c/footer\u003e","exportId":"python-libraries-numpy-and-pandas-introduction"},{"id":142266,"title":"Introducing Python Libraries","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":true,"content":"\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eA library (or a module/package) is a pre-written piece of software that you can re-use rather than having to write that functionality yourself. So instead of having to write the code from scratch to plot a bar chart, you can use the Matplotlib library.\u003c/p\u003e\n\u003cp\u003eIn this lesson, we will look at some of the key libraries used in Python for Data Science.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eExplain the purpose of common Python libraries in the data science toolkit\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003ePython Libraries for Data Science\u003c/h2\u003e\n\u003ch3\u003eScientific Computation\u003c/h3\u003e\n\u003cp\u003eOne of the key requirements for a Data Scientist is to be able to convert data into an easy-to-process format. Data, represented inside a computer, may become too large to be processed efficiently by Python's native lists and dictionaries and using Python's built-in methods. The following libraries add scientific computation abilities to Python for working efficiently with larger data sets.\u003c/p\u003e\n\u003ch3\u003eNumPy\u003c/h3\u003e\n\u003cp\u003eIn Python, the most fundamental package used for scientific computation is \u003cstrong\u003eNumPy\u003c/strong\u003e (Numerical Python). It provides lots of useful functionality for mathematical operations on vectors and matrices in Python. Matrix computation is the primary strength of NumPy.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/numpy.jpeg\" width=\"250\"\u003e\u003c/p\u003e\n\u003cp\u003eThe library provides these mathematical operations using the NumPy \u003cstrong\u003earray\u003c/strong\u003e data type, which enhances performance and speeds up execution when compared to Python's default methods and data types. It contains among other things:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA powerful N-dimensional array object\u003c/li\u003e\n\u003cli\u003eSophisticated (broadcasting) functions\u003c/li\u003e\n\u003cli\u003eTools for integrating C/C++ and Fortran code\u003c/li\u003e\n\u003cli\u003eUseful linear algebra, Fourier transform, and random number capabilities\u003c/li\u003e\n\u003cli\u003eBesides its obvious scientific uses, NumPy can also be used as an efficient multi-dimensional container of generic data. Arbitrary data-types can be defined. This allows NumPy to seamlessly and speedily integrate with a wide variety of databases.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNumpy is also used as a foundation for other, more advanced, libraries as we shall see below.\u003c/p\u003e\n\u003ch3\u003eSciPy\u003c/h3\u003e\n\u003cp\u003eIn the Data Science domain, Python’s SciPy stack (a collection of software specifically designed for scientific computing) is used heavily for conducting scientific experiments. The SciPy library is as an integral part of this stack.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/scipy.png\" width=\"150\"\u003e\u003c/p\u003e\n\u003cp\u003eSciPy is a library of software for engineering and science applications and contains functions for \u003cstrong\u003elinear algebra\u003c/strong\u003e, \u003cstrong\u003eoptimization\u003c/strong\u003e, \u003cstrong\u003eintegration\u003c/strong\u003e, and \u003cstrong\u003estatistics\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eThe functionality of the SciPy library is built on top of NumPy, and its data structures make heavy use of NumPy. It provides efficient numerical computational routines and comes packaged with a number of specific submodules. The following are a few modules from this library which are very commonly applied to Data Science experiments:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003estats\u003c/code\u003e: Statistical functions\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003elinalg\u003c/code\u003e: Linear algebra routines\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003efftpack\u003c/code\u003e: Discrete Fourier transform algorithms\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003esignal\u003c/code\u003e: Signal processing tools\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eoptimize\u003c/code\u003e: Optimization algorithms including linear programming\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eStatsmodels\u003c/h3\u003e\n\u003cp\u003eStatsmodels is a library for Python that enables its users to conduct data exploration via the use of various methods of estimation of statistical models and performing statistical assertions and analysis.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/statsmodels-logo-300.png\" width=\"250\"\u003e\u003c/p\u003e\n\u003cp\u003eOne of the many useful features it provides is a comprehensive set of descriptive statistics. The library provides insights when diagnosing issues with linear regression models, generalized linear models, discrete choice models, robust linear models, and time series analysis models with various estimators.\u003c/p\u003e\n\u003cp\u003eThe library also provides extensive plotting functions that are designed specifically for statistical analysis and are optimized for good performance with large data sets.\u003c/p\u003e\n\u003ch3\u003ePandas\u003c/h3\u003e\n\u003cp\u003ePandas is a Python package designed to work with “relational” data and helps replicates the functionality of relational databases in a simple and intuitive way. Pandas is a great tool for data wrangling. It is designed for quick and easy data cleansing, manipulation, aggregation, and visualization.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/pandas-300x300.jpg\" width=\"200\"\u003e\u003c/p\u003e\n\u003cp\u003eThere are two main data structures in the library:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e“Series” - one-dimensional\u003c/li\u003e\n\u003cli\u003e“DataFrames” - two-dimensional\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThese data types can be manipulated in a number of ways for analytical needs. Here are a few ways in which Pandas may come in handy:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eEasily delete and add columns from DataFrame\u003c/li\u003e\n\u003cli\u003eConvert data structures to DataFrame objects\u003c/li\u003e\n\u003cli\u003eHandle missing data and outliers\u003c/li\u003e\n\u003cli\u003ePowerful grouping and aggregation functionality\u003c/li\u003e\n\u003cli\u003eOffers visualization functionality to plot complex statistical visualizations on the go\u003c/li\u003e\n\u003cli\u003eThe data structures in Pandas are highly compatible with most of the other libraries\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eData Visualization\u003c/h2\u003e\n\u003cp\u003eData visualization is one of the most common tasks that Data Scientists have to perform. Traditionally, drawing visualizations would involve providing pixel level details and complex mathematical functions to create the plots. Luckily, Python has good library support for data visualization from plotting routine visualizations in Matplotlib, to developing graphical dashboards in Plotly and Bokeh. In this course, we will cover the following graphical packages:\u003c/p\u003e\n\u003ch3\u003eMatplotLib\u003c/h3\u003e\n\u003cp\u003eMatplotlib is another SciPy stack package and a library that is tailored for the generation of simple and powerful visualizations. It is a sophisticated package which is making Python (with the help of NumPy, SciPy, and Pandas) an industry standard analytics tool.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/matplotlib.png\" width=\"300\"\u003e\u003c/p\u003e\n\u003cp\u003eMatplotlib is a flexible plotting library for creating interactive 2D and 3D plots that can also be saved as manuscript-quality figures. The API in many ways reflects that of MATLAB, easing the transition of MATLAB users to Python. Many examples, along with the source code to re-create them, are available in the Matplotlib gallery. With a bit of effort you can make just about any visualization, including:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eLine plots\nScatter plots\nBar charts and Histograms\nPie charts\nStem plots\nContour plots\nQuiver plots\nSpectrograms\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThere are also facilities for creating labels, grids, legends, and many other formatting entities with Matplotlib. Basically, everything is customizable.\u003c/p\u003e\n\u003cp\u003eThe library, however, is pretty low-level which means that you will need to write more code for advanced visualizations and will generally need more effort.\u003c/p\u003e\n\u003ch3\u003eSeaborn\u003c/h3\u003e\n\u003cp\u003eSeaborn is complementary to Matplotlib and it specifically targets statistical data visualizations, which may be more time-consuming to implement using Matplotlib. Seaborn extends the functionality of Matplotlib and that’s why it can address the two biggest issues with Matplotlib - the quality of plots and parameter defaults. A full overview of Seaborn's capabilities (as the image below) can be found \u003ca href=\"https://seaborn.pydata.org/examples/index.html\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/seaborn_2.png\" width=\"500\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf Matplotlib \"tries to make easy things easy and hard things possible,\" then Seaborn tries to make a well-defined set of hard things easy too.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSince Seaborn complements and extends Matplotlib, if you know Matplotlib, you’ll already have most of Seaborn down. Your plots with Seaborn will be more attractive, need less time to create, and will reveal more information.\u003c/p\u003e\n\u003ch2\u003eMachine Learning\u003c/h2\u003e\n\u003ch3\u003eScikit-Learn\u003c/h3\u003e\n\u003cp\u003eScikits are Scientific \"kits\" on top of the SciPy stack. These are designed to add specific functionality to SciPy like image processing and machine learning facilitation. For machine learning, one of the most heavily used packages is \u003cstrong\u003escikit-learn\u003c/strong\u003e. The package makes heavy use of its mathematical operations to model and test complex computational algorithms.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/sklearn.png\" width=\"200\"\u003e\u003c/p\u003e\n\u003cp\u003eScikit-learn (sometimes abbreviated to sklearn) offers a consistent interface to common Machine Learning (ML) algorithms, making it simple to bring ML into production systems. The library combines quality code and good documentation, ease of use and high performance, and has become industry standard for machine learning with Python. The image below highlights the key machine learning algorithms that come packaged with sklearn for problems in classification, regression, clustering, and dimensionality reduction. You can find an interactive version of the machine learning map below \u003ca href=\"https://scikit-learn.org/stable/tutorial/machine_learning_map/index.html\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/drop_shadows_background.png\" width=\"850\"\u003e\u003c/p\u003e\n\u003ch2\u003eDeep Learning  (Keras / TensorFlow)\u003c/h2\u003e\n\u003cp\u003eFor Deep Learning, one of the most popular and convenient libraries for Python is Keras, which builds on top of TensorFlow.\u003c/p\u003e\n\u003ch3\u003eTensorFlow\u003c/h3\u003e\n\u003cp\u003eDeveloped by a team of ML experts at Google, TensorFlow is an open-source library of data flow graph computations, which are fine-tuned for heavy duty Machine Learning. TensorFlow was designed to meet the performance requirements of Google for training Deep Neural Networks in order to analyze visual and textual data. However, TensorFlow isn't limited to scientific use - it is general enough to use in a variety of real-world applications.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/tf.png\" width=\"320\"\u003e\u003c/p\u003e\n\u003cp\u003eThe key feature of TensorFlow is its multi-layered nodes system that enables quick training of artificial neural networks on big data. This is the library that powers Google’s voice recognition and object recognition in real time.\u003c/p\u003e\n\u003ch3\u003eKeras\u003c/h3\u003e\n\u003cp\u003eKeras is an open-source library for building Neural Networks with a high-level of interface abstraction. The Keras library is written in Python so Python developers find it much easier to start coding for deep networks in Keras than Tensorflow, which demands a deeper understanding of graph computation. Keras is much more minimalistic and straightforward while still being highly extensible. Under the hood, it can use either Theano (another deep learning library) or TensorFlow.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/keras.jpg\" width=\"320\"\u003e\u003c/p\u003e\n\u003cp\u003eKeras is really easy to get started with and for quick prototyping, it is highly modular and extensible. Notwithstanding its ease, simplicity, and high-level orientation, Keras is still deep and powerful enough for serious modeling. In the deep learning section of our course, we will introduce you to Keras to help you dive into deep neural networks.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eA big part of your journey as a Data Scientist will be building comfort and familiarity with the key Python Data Science libraries that we've outlined in this lesson. As the course progresses, you'll get plenty of hands-on experience with each one of them!\u003c/p\u003e","exportId":"introducing-python-libraries"},{"id":142267,"title":"Introduction to NumPy","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-numpy\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-numpy/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gd358758a12ad5b801911943020edad43"},{"id":142268,"title":"Getting Started with NumPy","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-with-numpy\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-with-numpy/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g32a4f90eca15e7b9fac535f9ea01ce2b"},{"id":142269,"title":"Getting Started with Numpy - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-with-numpy-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-with-numpy-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g6eda5df09815bc8ee8730e88a56a58a2"},{"id":142270,"title":"Accessing Data within Pandas","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-accessing-data-with-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-accessing-data-with-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g5addbd37c6bd0c0bf58863cef0d0bc3b"},{"id":142271,"title":"Accessing Data within Pandas - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-accessing-data-with-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-accessing-data-with-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g7797ef288b7a71e14dc60f0427256d9c"},{"id":142272,"title":"Importing Data Using Pandas","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-importing-data-using-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-importing-data-using-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g419767fbca3fc28c1c8565d1b22138b2"},{"id":142273,"title":"Importing Data Using Pandas - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-importing-data-using-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-importing-data-using-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g2126000a195d1a72426874e0ff63d841"},{"id":142274,"title":"Understanding Pandas Series and DataFrames","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-series-and-dataframes\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-series-and-dataframes/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gcc72303544419c96ecd43d696652acaa"},{"id":142275,"title":"Understanding Pandas Series and DataFrames - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-series-and-dataframes-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-series-and-dataframes-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g1990200d5562da8249a83b8fb5784565"},{"id":142276,"title":"Statistical Methods in Pandas","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll learn how to use some of the key summary statistics methods in Pandas.\u003c/p\u003e\n\n\u003ch2\u003eObjectives:\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCalculate summary statistics for a series and DataFrame \u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003e.apply()\u003c/code\u003e or \u003ccode\u003e.applymap()\u003c/code\u003e methods to apply a function to a pandas series or DataFrame\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eGetting DataFrame-Level Summary Statistics\u003c/h2\u003e\n\n\u003cp\u003eWhen working with a new dataset, the first step is always to begin to understand what makes up that dataset. The Pandas DataFrame class contains two built-in methods that make this very easy for us. \u003c/p\u003e\n\n\u003ch3\u003eUsing \u003ccode\u003edf.info()\u003c/code\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eThe \u003ccode\u003edf.info()\u003c/code\u003e method provides us with summary \u003cstrong\u003e\u003cem\u003emetadata\u003c/em\u003e\u003c/strong\u003e about our DataFrame -- that is, it gives us data about our dataset, such as how many rows and columns it contains, and what data types they are stored as.  Let's demonstrate this by reading in the Titanic dataset and calling the \u003ccode\u003e.info()\u003c/code\u003e method on the DataFrame. \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003eimport pandas as pd\ndf = pd.read_csv('titanic.csv', index_col=0)\ndf.info()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e\u0026lt;class 'pandas.core.frame.DataFrame'\u0026gt;\nInt64Index: 891 entries, 0 to 890\nData columns (total 12 columns):\nPassengerId    891 non-null int64\nSurvived       891 non-null int64\nPclass         891 non-null object\nName           891 non-null object\nSex            891 non-null object\nAge            714 non-null float64\nSibSp          891 non-null int64\nParch          891 non-null int64\nTicket         891 non-null object\nFare           891 non-null float64\nCabin          204 non-null object\nEmbarked       889 non-null object\ndtypes: float64(2), int64(4), object(6)\nmemory usage: 90.5+ KB\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eAs we can see from the output above, the \u003ccode\u003e.info()\u003c/code\u003e method provides us with great information about the characteristics of the DataFrame, without telling us anything about the data it actually contains. \u003c/p\u003e\n\n\u003cp\u003eExamine the output above, and take note of the important things it tells us about the DataFrame, such as:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe number of columns and rows in the DataFrame\u003c/li\u003e\n\u003cli\u003eThe data type of the data each column contains\u003c/li\u003e\n\u003cli\u003eHow many values each column contains (NaNs are not counted)\u003c/li\u003e\n\u003cli\u003eThe memory footprint of the DataFrame\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis sort of information about a dataset is called \u003cstrong\u003e\u003cem\u003emetadata\u003c/em\u003e\u003c/strong\u003e, since it's data about our data. \u003c/p\u003e\n\n\u003ch3\u003eUsing \u003ccode\u003e.describe()\u003c/code\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eThe next step in Exploratory Data Analysis (EDA) is usually to dig into the summary statistics of the dataset, and get a feel for the data each column contains.  Rather than force us to deal with the tedium of doing this individually for every column, Pandas DataFrames provide the handy \u003ccode\u003edf.describe()\u003c/code\u003e method which calculates the basic summary statistics for each column for us automatically. \u003c/p\u003e\n\n\u003cp\u003eSee the example in the cell below.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.describe()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cdiv\u003e\n\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003ePassengerId\u003c/th\u003e\n      \u003cth\u003eSurvived\u003c/th\u003e\n      \u003cth\u003eAge\u003c/th\u003e\n      \u003cth\u003eSibSp\u003c/th\u003e\n      \u003cth\u003eParch\u003c/th\u003e\n      \u003cth\u003eFare\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003ecount\u003c/th\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e714.000000\u003c/td\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003emean\u003c/th\u003e\n      \u003ctd\u003e446.000000\u003c/td\u003e\n      \u003ctd\u003e0.383838\u003c/td\u003e\n      \u003ctd\u003e29.699118\u003c/td\u003e\n      \u003ctd\u003e0.523008\u003c/td\u003e\n      \u003ctd\u003e0.381594\u003c/td\u003e\n      \u003ctd\u003e32.204208\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003estd\u003c/th\u003e\n      \u003ctd\u003e257.353842\u003c/td\u003e\n      \u003ctd\u003e0.486592\u003c/td\u003e\n      \u003ctd\u003e14.526497\u003c/td\u003e\n      \u003ctd\u003e1.102743\u003c/td\u003e\n      \u003ctd\u003e0.806057\u003c/td\u003e\n      \u003ctd\u003e49.693429\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003emin\u003c/th\u003e\n      \u003ctd\u003e1.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.420000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e25%\u003c/th\u003e\n      \u003ctd\u003e223.500000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e20.125000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e7.910400\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e50%\u003c/th\u003e\n      \u003ctd\u003e446.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e28.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e14.454200\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e75%\u003c/th\u003e\n      \u003ctd\u003e668.500000\u003c/td\u003e\n      \u003ctd\u003e1.000000\u003c/td\u003e\n      \u003ctd\u003e38.000000\u003c/td\u003e\n      \u003ctd\u003e1.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e31.000000\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003emax\u003c/th\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e1.000000\u003c/td\u003e\n      \u003ctd\u003e80.000000\u003c/td\u003e\n      \u003ctd\u003e8.000000\u003c/td\u003e\n      \u003ctd\u003e6.000000\u003c/td\u003e\n      \u003ctd\u003e512.329200\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\n\u003cp\u003eAs we can see, the output of the \u003ccode\u003e.describe()\u003c/code\u003e method is very handy, and gives us relevant information such as:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ea \u003ccode\u003ecount\u003c/code\u003e of the number of values in each column, making it identify columns with missing values\u003c/li\u003e\n\u003cli\u003eThe mean and standard deviation of each column\u003c/li\u003e\n\u003cli\u003eThe minimum and maximum values found in each column\u003c/li\u003e\n\u003cli\u003eThe median (50%) and quartile values (25% \u0026amp; 75%) for each column\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eUse the \u003ccode\u003e.describe()\u003c/code\u003e method to quickly help you get a feel for your datasets when you start the Exploratory Data Analysis process. \u003c/p\u003e\n\n\u003ch2\u003eCalculating Individual Column Statistics\u003c/h2\u003e\n\n\u003cp\u003eIf we need to calculate individual statistics about a column, we can also do this easily.  Pandas DataFrames and Series objects come with a plethora of built-in methods to instantly calculate summary statistics for us. \u003c/p\u003e\n\n\u003cp\u003eSee the code blocks below for examples:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.mean()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003ePassengerId    446.000000\nSurvived         0.383838\nAge             29.699118\nSibSp            0.523008\nParch            0.381594\nFare            32.204208\ndtype: float64\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Fare'].mean()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e32.2042079685746\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Age'].quantile(.9)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e50.0\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Age'].median()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e28.0\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThere are many different statistical methods built into Pandas DataFrames -- these are just a few! We will not list all of them, but here are some common ones you'll probably make use of early and often:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003e.mode()\u003c/code\u003e -- the mode of the column\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.count()\u003c/code\u003e -- the count of the total number of entries in a column\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.std()\u003c/code\u003e --  the standard deviation for the column\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.var()\u003c/code\u003e -- the variance for the column\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.sum()\u003c/code\u003e -- the sum of all values in the column\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.cumsum()\u003c/code\u003e -- the cumulative sum, where each cell index contains the sum of all indices lower than, and including, itself.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eSummary Statistics for Categorical Columns\u003c/h3\u003e\n\n\u003cp\u003eObviously, we cannot calculate most summary statistics on columns that contain non-numeric data -- there's no way for us to find the mean of the letters in the \u003ccode\u003eEmbarked\u003c/code\u003e column, for instance.  However, there are some summary statistics we can use to help us better understand our categorical columns. \u003c/p\u003e\n\n\u003cp\u003eSee the examples in the cell below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Embarked'].unique()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003earray(['S', 'C', 'Q', nan], dtype=object)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Embarked'].value_counts()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003eS    644\nC    168\nQ     77\nName: Embarked, dtype: int64\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThese methods are extremely useful when dealing with categorical data! \u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e.unique()\u003c/code\u003e shows us all the unique values contained in the column. \u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e.value_counts()\u003c/code\u003e shows us a count for how many times each unique value is present in a dataset, giving us a feel for the distribution of values in the column. \u003c/p\u003e\n\n\u003ch3\u003eCalculating on the Fly with \u003ccode\u003e.apply()\u003c/code\u003e and \u003ccode\u003e.applymap()\u003c/code\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eSometimes, we'll need to make changes to our dataset, or to compute functions on our data that aren't built-in to Pandas.  We can do this by passing lambda values into the \u003ccode\u003eapply()\u003c/code\u003e method when working with Pandas series, and the \u003ccode\u003e.applymap()\u003c/code\u003e method when working with Pandas DataFrames. \u003c/p\u003e\n\n\u003cp\u003eNote that both of these do not mutate the original dataset -- instead, they return a copy of the Series or DataFrame containing the result. \u003c/p\u003e\n\n\u003cp\u003eSee the example in the cell below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003estring_df = df.applymap(lambda x: str(x))\nstring_df.info()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e\u0026lt;class 'pandas.core.frame.DataFrame'\u0026gt;\nInt64Index: 891 entries, 0 to 890\nData columns (total 12 columns):\nPassengerId    891 non-null object\nSurvived       891 non-null object\nPclass         891 non-null object\nName           891 non-null object\nSex            891 non-null object\nAge            891 non-null object\nSibSp          891 non-null object\nParch          891 non-null object\nTicket         891 non-null object\nFare           891 non-null object\nCabin          891 non-null object\nEmbarked       891 non-null object\ndtypes: object(12)\nmemory usage: 90.5+ KB\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edisplay(df['Age'].apply(lambda x: x**2).head())\n\ndf['Age'].head()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e0     484.0\n1    1444.0\n2     676.0\n3    1225.0\n4    1225.0\nName: Age, dtype: float64\n\n\n\n\n\n0    22.0\n1    38.0\n2    26.0\n3    35.0\n4    35.0\nName: Age, dtype: float64\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you learned how to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand and use the \u003ccode\u003edf.describe()\u003c/code\u003e and \u003ccode\u003edf.info()\u003c/code\u003e summary statistics methods \u003c/li\u003e\n\u003cli\u003eUse built-in Pandas methods for calculating summary statistics \u003c/li\u003e\n\u003cli\u003eApply a function to every element in a Series or DataFrame using \u003ccode\u003es.apply()\u003c/code\u003e and \u003ccode\u003edf.applymap()\u003c/code\u003e \u003c/li\u003e\n\u003c/ul\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-statistical-methods-in-pandas\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-statistical-methods-in-pandas\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"statistical-methods-in-pandas-2"},{"id":142277,"title":"Statistical Methods in Pandas - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gdf59a4379383c724bc16afc875356a62"},{"id":142278,"title":"Data Visualization with Pandas","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-visualization-with-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-visualization-with-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g5a8f3bb6771093dccd6ac02ef1e518af"},{"id":142279,"title":"Data Privacy and Data Ethics","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-ethics\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-ethics/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eData ethics and data privacy are integral to any data project. There are obvious cases such as protecting the privacy of individuals health records under HIPAA. There are also many gray areas surrounding what constitutes personally identifiable information (PII) which occur throughout many industries including advertising, finance, and consumer goods. You may have noticed that starting around the summer of 2018, you started receiving privacy policy notices on many websites asking you to accept the use of cookies. This was a result of Europe's GDPR legislation. You are also probably aware of the Cambridge Analytica debacle in the 2016 United States presidential election. As a data practitioner, it is your responsibility to uphold data ethics in a fast-changing environment.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDetermine whether or not a data science procedure meets an ethics standard\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eExamples\u003c/h2\u003e\n\n\u003ch3\u003eData Breaches\u003c/h3\u003e\n\n\u003cp\u003eIf the data you are handling is valuable, then security should be a primary concern. Data breaches are all too common and often, such leaks of sensitive information could have been avoided if businesses and organizations followed standard security protocols. While there are thousands of said cases, two of the biggest breaches which have caught the public's attention include Cambridge Analytica's misuse of Facebook data to influence political elections, and Equifax's leaking of roughly 100 million individuals' social security numbers and credit scores. \u003c/p\u003e\n\n\u003ch3\u003eIdentifying PII\u003c/h3\u003e\n\n\u003cp\u003ePII stands for \u003cstrong\u003epersonally identifiable information\u003c/strong\u003e. While some cases such as one's social security number and medical records are clear examples of PII, other pieces of data may or may not qualify as PII depending on the jurisdiction. In the United States for example, there are two federal regulations: the Health Insurance Portability and Accountability Act (HIPAA), and the Privacy Act of 1974. While in theory these acts aim to protect the use, collection, and maintenance of personal data, the scope of what constitutes PII and the subsequent regulations surrounding handling and using said data is generally antiquated. For example, a user's IP address has been categorized as non-PII by several U.S. courts despite it being a unique identifier to most individual's home internet connection. This was further eroded by the rollback of net neutrality laws by the FCC Chairman Ajit Pai in mid-2018. Aside from federal jurisdiction, several states, most notably California have their own data protection laws to the benefit and protection of users and consumers.\u003c/p\u003e\n\n\u003ch3\u003eGDPR\u003c/h3\u003e\n\n\u003cp\u003eGDPR stands for the \u003cstrong\u003egeneral data protection regulation\u003c/strong\u003e. It was passed on April 14th 2016 by the European Union and went into effect on May 25th 2018. GDPR protects the data rights of all European citizens and is an example of how legislation will have to change and adapt to the online digital era of the 21st century. GDPR has implemented more widespread regulations surrounding what constitutes PII and has set fine structures for up to 4% of a company's revenue.\u003c/p\u003e\n\n\u003ch3\u003eData Best Practices\u003c/h3\u003e\n\n\u003cp\u003eThere are two primary practices that you should follow when dealing with PII and other sensitive data. The first is to encrypt sensitive data. When in doubt, encrypt. Secondly, ask yourself what level of information you really need. Large organizations will always include data cleaning teams which will first scrub sensitive data such as names and addresses before passing said data off to analysts and others to mine. Ultimately, any well-thought strategy will include multiple layers, safeguards, and other measures to ensure data is safe and secure.\u003c/p\u003e\n\n\u003ch3\u003eData Collection Processes\u003c/h3\u003e\n\n\u003cp\u003eWhen collecting data, it is important to ensure you are not gathering it in a manner that will generate bias. For example, if Data Scientists are not careful in the way they phrase questions in surveys, they can generate misleading results. If a poll contained the question \"How poorly has Politician X performed when it comes to the economy\" it adds a negative connotation the question. That phrasing might make people say Politician X performed worse than if they had merely been asked \"How has Politician X performed when it comes to the economy?\" \u003c/p\u003e\n\n\u003cp\u003eIn some cases, choosing which variables to collect and how to define them can also contain bias. You’ll notice that in some of the datasets we use, gender is represented as a binary value and race is referenced in an insensitive manner. This is an artifact of the societal conditions at the time the data was collected. As soon-to-be Data Scientists, it will be your responsibility to ensure that data collection is done in an inclusive manner.\u003c/p\u003e\n\n\u003ch3\u003eAlgorithm Bias\u003c/h3\u003e\n\n\u003cp\u003ePeople often trust algorithms and their output based on measurements such as \"this algorithm has 99.9% accuracy\". However, it should also be noted that while algorithms such as linear regression are mathematically sound and powerful tools, the models are simply reflections of the data that is fed in. For example, logistic regression and other algorithms are used to inform a wide range of decisions including whether to provide someone with a loan, the degree of criminal sentencing, or whether to hire an individual for a job. (Do a quick search online for algorithm bias, or check out some of the articles below.) In all of these scenarios, it is again important to remember that the algorithm is simply reflective of the underlying data itself. If an algorithm is trained on a dataset where African Americans have had disproportionate criminal prosecution, the algorithm will continue to perpetuate these racial injustices. Similarly, algorithms trained on data reflecting a gender pay-gap will also continue to promote this bias. With this, substantial thought and analysis regarding problem set up and the resulting model is incredibly important.\u003c/p\u003e\n\n\u003cp\u003eBelow is a handful of resources providing further information regarding some of the topics discussed here.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.propublica.org/article/machine-bias-risk-assessments-in-criminal-sentencing\"\u003eMachine Bias\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.bloomberg.com/opinion/articles/2018-10-16/amazon-s-gender-biased-algorithm-is-not-alone\"\u003eAmazon’s Gender-Biased Algorithm Is Not Alone\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.bostonglobe.com/business/2017/12/21/the-software-that-runs-our-lives-can-bigoted-and-unfair-but-can-fix/RK4xG4gYxcVNVTIubeC1JI/story.html\"\u003eThe software that runs our lives can be bigoted and unfair. But we can fix it\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.bostonglobe.com/ideas/2017/07/07/why-artificial-intelligence-far-too-human/jvG77QR5xPbpwBL2ApAFAN/story.html\"\u003eWhy artificial intelligence is far too human\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.npr.org/2016/03/14/470427605/can-computers-be-racist-the-human-like-bias-of-algorithms\"\u003eCan Computers Be Racist? The Human-Like Bias Of Algorithms\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eGray Areas and Forward Thinking\u003c/h2\u003e\n\n\u003cp\u003eAside from overtly illegal practices according to current legislation, data privacy and ethics calls into question a myriad of various thought experiments. For example, should IP addresses or cookies be considered PII? How should security camera footage be handled? What about vehicles such as Google street view cars which are capturing video and pictures of public places? Some companies are now even taking pictures of license plates to track car movements. Should they be allowed to maintain massive databases of said information? What regulations should be put on these and other potentially sensitive datasets?  \u003c/p\u003e\n\n\u003cp\u003eAll of these examples question where and when limits should be put on data. Science fiction stories such as 1984, are much more accurate then one might expect. Moreover, injustices and questionable practices still abound. For example, despite public outcry at debacles like Cambridge Analytica, many companies still exist with nearly identical practices such as \u003ca href=\"https://web.archive.org/web/20160305010738/http://applecart.co/\"\u003eApplecart\u003c/a\u003e in New York City, which collects and sells user data to the Republican party, amongst others. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-ethics/master/images/fix-it.png\" width=\"750\"\u003e\u003c/p\u003e\n\n\u003ch2\u003e\u003ca href=\"https://www.eff.org/deeplinks/2019/02/announcing-fix-it-already\"\u003eFix it Already!\u003c/a\u003e\u003c/h2\u003e\n\n\u003cp\u003eIn staying current, you should also identify some news sources to stay up to date on tech trends.\u003cbr\u003e\nOne great resource is the \u003ca href=\"https://www.eff.org/\"\u003eElectronic Frontier Foundation (EFF)\u003c/a\u003e.  \u003c/p\u003e\n\n\u003cp\u003eEFF recently put together an article called Fix it Already, outlining fixable mishaps by technology companies that continue to be ignored. Take a look at the article \u003ca href=\"https://www.eff.org/deeplinks/2019/02/announcing-fix-it-already\"\u003ehere\u003c/a\u003e and get involved to put pressure on these organizations and your representatives to shape up. Here's a quick preview of their list:  \u003c/p\u003e\n\n\u003cp\u003e\u003c/p\u003e\n\u003cli\u003e\u003cspan\u003eAndroid should let users \u003ca href=\"https://fixitalready.eff.org/android\"\u003edeny and revoke apps' Internet permissions\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eApple should let users \u003ca href=\"https://fixitalready.eff.org/apple\"\u003eencrypt their iCloud backups\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eFacebook should \u003ca href=\"https://fixitalready.eff.org/facebook\"\u003eleave your phone number where you put it\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eSlack should give \u003ca href=\"https://fixitalready.eff.org/slack\"\u003efree workspace administrators control over data retention\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eTwitter should \u003ca href=\"https://fixitalready.eff.org/twitter\"\u003eend-to-end encrypt direct messages\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eVenmo should let users \u003ca href=\"https://fixitalready.eff.org/venmo\"\u003ehide their friends lists\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eVerizon should \u003ca href=\"https://fixitalready.eff.org/verizon\"\u003estop pre-installing spyware on its users’ phones\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eWhatsApp should \u003ca href=\"https://fixitalready.eff.org/whatsapp\"\u003eget your consent before you’re added to a group\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eWindows 10 should let users \u003ca href=\"https://fixitalready.eff.org/win10\"\u003ekeep their disk encryption keys to themselves\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\n\u003ch2\u003eDisclaimer\u003c/h2\u003e\n\n\u003cp\u003eAs a final note, it should also be noted that the nature of online data can also include offensive or inappropriate data at times. For example, if acquiring data from an API such as Twitter, there is potential to encounter lewd or offensive material. While many of these services will eventually screen out and remove particularly egregious cases, plenty of trolls still exist.\u003c/p\u003e\n\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\n\u003cp\u003eThere's a multitude of resources to get involved with data privacy and ethics, but here's a few to get you started.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.eff.org/\"\u003eElectronic Frontier Foundation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:32016R0679\u0026amp;from=EN\"\u003eGDPR\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.hhs.gov/hipaa/for-professionals/index.html\"\u003eHIPAA\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://datadetox.myshadow.org/en/home\"\u003eData Detox\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you got a preview of some of the many issues regarding data privacy and ethics. From GDPR to being aware of your own data aura, there's plenty to keep you busy and on your toes regarding this fascinating perspective on the data industry.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-data-ethics\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-data-ethics\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-data-ethics/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"data-privacy-and-data-ethics"},{"id":142280,"title":"Kaggle and The Ames Housing Dataset","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eKaggle hosts numerous Data Science competitions where you can grab datasets and practice your skills at creating machine learning algorithms to answer useful questions. Here we'll sign up for an account and begin investigating a classic Data Science problem using the Ames housing dataset.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a Kaggle account and download a dataset \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSign up\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eNavigate to \u003ca href=\"https://www.kaggle.com\"\u003ekaggle.com\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/master/images/kagglehome.png\" width=\"800\"\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eClick \"Sign in\" and then \u003c/li\u003e\n\u003cli\u003eClick \"Create one\" to make a new account\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/master/images/kagglelogin1.png\" width=\"300\"\u003e\n\u003c/li\u003e\n\u003cli\u003eFill out the basic information\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/master/images/kagglelogin2.png\" width=\"300\"\u003e\n\u003c/li\u003e\n\u003cli\u003eAccept the Privacy and Terms agreement\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCongratulations!\u003c/h2\u003e\n\n\u003cp\u003eYou should now be signed up for Kaggle where you'll have access to a range of datasets, competitions, and other Data Science resources! Welcome to the community!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn our upcoming lab, you'll then be working with this dataset: \u003ca href=\"https://www.kaggle.com/c/house-prices-advanced-regression-techniques\"\u003ehttps://www.kaggle.com/c/house-prices-advanced-regression-techniques\u003c/a\u003e. To download it, click on the \"data\" tab and then click the \"download all\" to get a copy of the data.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-kaggle-and-boston-housing-dataset\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-kaggle-and-boston-housing-dataset\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"kaggle-and-the-ames-housing-dataset"},{"id":142281,"title":"Mini-Project - EDA with Pandas Using the Ames Housing Data","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-eda-with-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-eda-with-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g317a848820421d0d32fa85f7e0d6882a"},{"id":142282,"title":"Python Libraries: Numpy and Pandas - Recap","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-numpy-and-pandas-section-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-numpy-and-pandas-section-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eThis short lesson summarizes the topics we covered in this section and why they'll be important to you as a Data Scientist.\u003c/p\u003e\n\u003ch2\u003eKey Takeaways\u003c/h2\u003e\n\u003cp\u003eIn this section, we spent time getting comfortable with Pandas and Matplotlib and getting some more practice with exploratory data analysis. Some of the key takeaways:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFor non-trivial datasets you'll usually want to store your data in Pandas data structures rather than native Python lists and dictionaries\u003c/li\u003e\n\u003cli\u003ePandas has a range of great features for easily importing data from anything from a csv, an Excel file, json, or a Python dictionary\u003c/li\u003e\n\u003cli\u003ePandas Series and DataFrames have a bunch of powerful methods for munging data\u003c/li\u003e\n\u003cli\u003ePandas also has a range of methods for applying descriptive statistics to Series and DataFrames\u003c/li\u003e\n\u003cli\u003eFinally, by wrapping Matplotlib, Pandas also provides some very convenient plotting capabilities for quickly visualizing data\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWe also got some experience working with the Ames Housing dataset, and set up accounts on Kaggle - a really useful resource for practicing Data Scientists.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-numpy-and-pandas-section-recap\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-numpy-and-pandas-section-recap\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-numpy-and-pandas-section-recap/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\n\u003c/footer\u003e","exportId":"python-libraries-numpy-and-pandas-recap"}]},{"id":15170,"name":"Topic 5: Data Cleaning in Pandas","status":"unlocked","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g885450040153ef0b71685e9059dbaed4","items":[{"id":142283,"title":"Data Cleaning in Pandas - Introduction","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-pandas-etl\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-pandas-etl/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"ga7656d62fa4c25292e77b11b8944f9ed"},{"id":142284,"title":"Lambda Functions","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lambda-functions\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lambda-functions/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g97797e2e6ed4ea8697d8b4fad24cdbc6"},{"id":142285,"title":"Lambda Functions - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lambda-functions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lambda-functions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g6a507b19011a997f91907be1df11a5ed"},{"id":142286,"title":"Pandas Groupby","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-groupby\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-groupby/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll learn how to use the \u003ccode\u003e.groupby()\u003c/code\u003e method in Pandas to summarize datasets.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse groupby methods to aggregate different groups in a dataframe\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eUsing \u003ccode\u003e.groupby()\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003eConsider an example of the titanic DataFrame:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-pandas-groupby/master/images/titanic_1.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eDuring the Exploratory Data Analysis phase, one of the most common tasks you'll want to do is split the dataset into subgroups and compare them to see if you can notice any trends.  For instance, you may want to group the passengers together by gender or age. You can do this by using the \u003ccode\u003e.groupby()\u003c/code\u003e method built-in to pandas DataFrames. \u003c/p\u003e\n\n\u003cp\u003eTo group passengers by gender, you would type:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.groupby('Sex')\n\ndf.groupby(df['Sex'])\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that this alone will not display a result -- although you have split the dataset into groups, you don't have a meaningful way to display information until you chain an \u003cstrong\u003e\u003cem\u003eAggregation Function\u003c/em\u003e\u003c/strong\u003e onto the groupby.  This allows you to compute summary statistics!\u003c/p\u003e\n\n\u003cp\u003eYou can quickly use an aggregation function by chaining the call to the end of the \u003ccode\u003e.groupby()\u003c/code\u003e method.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.groupby('Sex').sum()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe code above returns displays the following DataFrame:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-pandas-groupby/master/images/titanic_2.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can use aggregation functions to quickly help us compare subsets of our data.  For example, the aggregate statistics displayed above allow you to quickly notice that there were more female survivors overall than male survivors.\u003c/p\u003e\n\n\u003ch2\u003eAggregation functions\u003c/h2\u003e\n\n\u003cp\u003eThere are many built-in aggregate methods provided for you in the \u003ccode\u003epandas\u003c/code\u003e package, and you can even write and apply your own. Some of the most common aggregate methods you may want to use are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003e.min()\u003c/code\u003e: returns the minimum value for each column by group\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.max()\u003c/code\u003e: returns the maximum value for each column by group\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.mean()\u003c/code\u003e: returns the average value for each column by group\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.median()\u003c/code\u003e: returns the median value for each column by group\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.count()\u003c/code\u003e: returns the count of each column by group\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eYou can also see a list of all of the built-in aggregation methods by creating a grouped object and then using tab completion to inspect the available methods:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003egrouped_df = df.groupby('Sex')\ngrouped_df.\u0026lt;TAB\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis will display the following output:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eIn [26]: grouped_df.\u0026lt;TAB\u0026gt;\ngb.agg        gb.boxplot    gb.cummin     gb.describe   gb.filter     gb.get_group  gb.height     gb.last       gb.median     gb.ngroups    gb.plot       gb.rank       gb.std        gb.transform\ngb.aggregate  gb.count      gb.cumprod    gb.dtype      gb.first      gb.groups     gb.hist       gb.max        gb.min        gb.nth        gb.prod       gb.resample   gb.sum        gb.var\ngb.apply      gb.cummax     gb.cumsum     gb.fillna     gb.gender     gb.head       gb.indices    gb.mean       gb.name       gb.ohlc       gb.quantile   gb.size       gb.tail       gb.weight\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis is a comprehensive list of all built-in methods available to grouped objects. Note that some are aggregation methods, while others, such as \u003ccode\u003egb.fillna()\u003c/code\u003e, allow us to fill missing values to individual groups independently.  \u003c/p\u003e\n\n\u003ch2\u003eMultiple groups\u003c/h2\u003e\n\n\u003cp\u003eYou can also split data into multiple different levels of groups by passing in an array containing the name of every column you want to group by -- for instance, by every combination of both \u003ccode\u003eSex\u003c/code\u003e and \u003ccode\u003ePclass\u003c/code\u003e.    \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.groupby(['Sex', 'Pclass']).mean()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe code above would return the following DataFrame:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-pandas-groupby/master/images/titanic_3.png\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eSelecting information from grouped objects\u003c/h2\u003e\n\n\u003cp\u003eSince the resulting object returned is a DataFrame, you can also slice a selection of columns you're interested in from the DataFrame returned. \u003c/p\u003e\n\n\u003cp\u003eThe example below demonstrates the syntax for returning the mean of the \u003ccode\u003eSurvived\u003c/code\u003e class for every combination of \u003ccode\u003eSex\u003c/code\u003e and \u003ccode\u003ePclass\u003c/code\u003e:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.groupby(['Sex', 'Pclass'])['Survived'].mean()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe code above returns the following DataFrame:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-pandas-groupby/master/images/titanic_4.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe above example slices by column, but you can also slice by index. Take a look:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003egrouped = df.groupby(['Sex', 'Pclass'])['Survived'].mean()\nprint(grouped['female'])\n\nprint(grouped['female'][1])\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that you need to provide only the value \u003ccode\u003efemale\u003c/code\u003e as the index, and are returned all the groups where the passenger is female, regardless of the \u003ccode\u003ePclass\u003c/code\u003e value. The second example shows the results for female passengers with a 1st-class ticket. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you learned about how to split a DataFrame into subgroups using the \u003ccode\u003e.groupby()\u003c/code\u003e method. You also learned to generate aggregate views of these groups by applying built-in methods to a groupby object.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-pandas-groupby\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-pandas-groupby\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-pandas-groupby/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"pandas-groupby"},{"id":142287,"title":"Combining DataFrames With Pandas","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll learn how to combine DataFrames with concatenation. You'll also learn how to read in tables from SQL databases and store them in DataFrames, as well as the various types of joins that exist and how you can perform them in Pandas.  \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse concatenation to combine DataFrames\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDetermine which type of join is preferred for two tables of data and a task\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUse different types of joins to merge dataframes\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eConcatenating DataFrames\u003c/h2\u003e\n\n\u003cp\u003eRecall that \"concatenation\" means adding the contents of a second collection on to the end of the first collection.  You learned how to do this when working with strings.  For instance:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003eprint('Data ' + 'Science!')\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSince strings are a form of collections in Python, you can concatenate them as above.  \u003c/p\u003e\n\n\u003cp\u003eDataFrames are also collections, so it stands to reason that pandas provides an easy way to concatenate them.  Examine the following diagram from the pandas documentation on concatenation:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-combining-dataframes-pandas/master/images/Image_197_concat.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn this example, three DataFrames have been concatenated, resulting in one larger DataFrame containing the contents in the order they were concatenated.  \u003c/p\u003e\n\n\u003cp\u003eTo perform a concatenation between two or more DataFrames, you pass in an array of the objects to concatenate to the \u003ccode\u003epd.concat()\u003c/code\u003e function, as demonstrated below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003eto_concat = [df1, df2, df3]\nbig_df = pd.concat(to_concat)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that there are many different optional keyword arguments you can set with \u003ccode\u003epd.concat()\u003c/code\u003e -- for a full breakdown of all the ways you can use this function, take a look at the \u003ca href=\"http://pandas.pydata.org/pandas-docs/stable/merging.html\"\u003epandas documentation\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003eKeys and Indexes\u003c/h3\u003e\n\n\u003cp\u003eEvery table in a database has a column that serves as the \u003cstrong\u003e\u003cem\u003ePrimary Key\u003c/em\u003e\u003c/strong\u003e. In pandas, the index is the primary key for that table. You'll use these keys, along with the \u003cstrong\u003e\u003cem\u003eForeign Key\u003c/em\u003e\u003c/strong\u003e, which points to a primary key value in another table, to execute \u003cstrong\u003e\u003cem\u003eJoins\u003c/em\u003e\u003c/strong\u003e. This allows us to \"line up\" information from multiple tables and combine them into one table. You'll learn more about primary keys and foreign keys in the future when you'll dive into SQL and relational databases, so don't worry too much about these concepts now. That said, you can use similar functionality in Pandas.\u003c/p\u003e\n\n\u003cp\u003eOften, it is useful for us to set a column to act as the index for a DataFrame.  To do this, you would type:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003esome_dataframe.set_index('name_of_index_column', inplace=True)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that this will mutate the dataset in place and set the column with the specified name as the index column of the DataFrame.  If \u003ccode\u003einplace\u003c/code\u003e is not specified it will default to False, meaning that a copy of the DataFrame with the requested changes will be returned, but the original object will remain unchanged. \u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eNOTE:\u003c/em\u003e\u003c/strong\u003e Running cells that make an \u003ccode\u003einplace\u003c/code\u003e change more than once will often cause pandas to throw an error.  If this happens, just restart the kernel.\u003c/p\u003e\n\n\u003cp\u003eBy setting the index columns on DataFrames, you make it easy to join DataFrames later on. Note that this is not always feasible, but it's a useful step when possible.  \u003c/p\u003e\n\n\u003ch3\u003eTypes of Joins\u003c/h3\u003e\n\n\u003cp\u003eJoins are always executed between a \u003cstrong\u003e\u003cem\u003eLeft Table\u003c/em\u003e\u003c/strong\u003e and a \u003cstrong\u003e\u003cem\u003eRight Table\u003c/em\u003e\u003c/strong\u003e.  There are four different types of joins you can execute. Consider the following Venn diagrams:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-combining-dataframes-pandas/master/images/Image_198_joins.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen thinking about joins, it is easy to conceptualize them as Venn diagrams.  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAn \u003cstrong\u003e\u003cem\u003eOuter Join\u003c/em\u003e\u003c/strong\u003e returns all records from both tables \u003c/li\u003e\n\u003cli\u003eAn \u003cstrong\u003e\u003cem\u003eInner Join\u003c/em\u003e\u003c/strong\u003e returns only the records with matching keys in both tables \u003c/li\u003e\n\u003cli\u003eA \u003cstrong\u003e\u003cem\u003eLeft Join\u003c/em\u003e\u003c/strong\u003e returns all the records from the left table, as well as any records from the right table that have a matching key with a record from the left table\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eA \u003cstrong\u003e\u003cem\u003eRight Join\u003c/em\u003e\u003c/strong\u003e returns all the records from the right table, as well as any records from the left table that have a matching key with a record from the right table\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eDataFrames contain a built-in \u003ccode\u003e.join()\u003c/code\u003e method. By default, the table calling the \u003ccode\u003e.join()\u003c/code\u003e method is always the left table.  The following code snippet demonstrates how to execute a join in pandas:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003ejoined_df = df1.join(df2, how='inner')\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that to call \u003ccode\u003e.join()\u003c/code\u003e, you must pass in the right table.  You can also set the type of join to perform with the \u003ccode\u003ehow\u003c/code\u003e parameter.  The options are \u003ccode\u003e'left'\u003c/code\u003e, \u003ccode\u003e'right'\u003c/code\u003e, \u003ccode\u003e'inner'\u003c/code\u003e, and \u003ccode\u003e'outer'\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eIf\u003c/strong\u003e \u003ccode\u003ehow=\u003c/code\u003e \u003cstrong\u003eis not specified, it defaults to \u003ccode\u003e'left'\u003c/code\u003e.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eNOTE:\u003c/em\u003e\u003c/strong\u003e If both tables contain columns with the same name, the join will throw an error due to a naming collision, since the resulting table would have multiple columns with the same name.  To solve this, pass in a value to \u003ccode\u003elsuffix=\u003c/code\u003e or \u003ccode\u003ersuffix=\u003c/code\u003e, which will append this suffix to the offending columns to resolve the naming collisions. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you learned how to use concatenation to join together multiple DataFrames in Pandas.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-combining-dataframes-pandas\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-combining-dataframes-pandas\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"combining-dataframes-with-pandas"},{"id":142288,"title":"Combining DataFrames with Pandas - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gf8a411f3b35e7a0674a029d0300af42b"},{"id":142289,"title":"Pivot Tables with Pandas","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pivot-tables-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pivot-tables-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"ga5eb89b9ae0f0dbb35c6398974de9a66"},{"id":142290,"title":"Pivot Tables with Pandas - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pivot-tables-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pivot-tables-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"ge12f9889b1623b735eec4f7030bf01e1"},{"id":142291,"title":"Dealing with Missing Data","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn about various strategies for detecting and dealing with missing data using Pandas.  \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIdentify missing values in a dataframe using built-in methods \u003c/li\u003e\n\u003cli\u003eExplain why missing values are a problem in data science \u003c/li\u003e\n\u003cli\u003eEvaluate and execute the best strategy for dealing with missing, duplicate, and erroneous values for a given dataset \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy is missing data a problem?\u003c/h2\u003e\n\n\u003cp\u003eMissing data can be problematic during the Data Science process because \u003ccode\u003eNaN\u003c/code\u003e values in the dataset limit our ability to do important things like:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eConvert data types\u003c/li\u003e\n\u003cli\u003eCalculate summary statistics\u003c/li\u003e\n\u003cli\u003eVisualize data\u003c/li\u003e\n\u003cli\u003eBuild models\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eDetecting missing data\u003c/h2\u003e\n\n\u003cp\u003eThere are two main ways missing data is often represented in datasets.\u003c/p\u003e\n\n\u003ch3\u003e\n\u003ccode\u003eNaN\u003c/code\u003es\u003c/h3\u003e\n\n\u003cp\u003eBy default, pandas represents null values with \u003ccode\u003eNaN\u003c/code\u003e, which is short for \u003cstrong\u003e\u003cem\u003eNot a Number\u003c/em\u003e\u003c/strong\u003e.  Pandas provides many great ways for checking for null values, built right into DataFrames and Series objects.\u003c/p\u003e\n\n\u003ch4\u003eDetecting \u003ccode\u003eNaN\u003c/code\u003es\u003c/h4\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.isna()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eReturns a matrix of boolean values, where all cells containing \u003ccode\u003eNaN\u003c/code\u003e are converted to \u003ccode\u003eTrue\u003c/code\u003e, and all cells containing valid data are converted to \u003ccode\u003eFalse\u003c/code\u003e. \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.isna().sum()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSince \u003ccode\u003eTrue\u003c/code\u003e is equivalent to \u003ccode\u003e1\u003c/code\u003e and \u003ccode\u003eFalse\u003c/code\u003e is equivalent to \u003ccode\u003e0\u003c/code\u003e in Python, taking the \u003ccode\u003e.sum()\u003c/code\u003e of the DataFrame (or Series) will return the total number of \u003ccode\u003eNaN\u003c/code\u003e values in the dataset.  Pandas even breaks this down by column -- see the example output below.\u003c/p\u003e\n\n\u003ch1\u003eNumber of NaNs the in Titanic dataset by column\u003c/h1\u003e\n\n\u003cp\u003ePassengerId      0\nSurvived         0\nPclass           0\nName             0\nSex              0\nAge            177\nSibSp            0\nParch            0\nTicket           0\nFare             0\nCabin          687\nEmbarked         2\u003c/p\u003e\n\n\u003ch3\u003ePlaceholder values\u003c/h3\u003e\n\n\u003cp\u003eOften, datasets will contain missing values that are denoted by a value that seems valid to pandas.  This is very common in real-world datasets -- often, people entering the data are required to enter values that they don't actually have, so they enter an agreed-upon placeholder value.  \u003c/p\u003e\n\n\u003cp\u003eThe easiest way to deal with these is to familiarize yourself with the data dictionary that corresponds to your dataset -- any placeholder values meant to denote a \u003ccode\u003eNaN\u003c/code\u003e value will be specified here. \u003c/p\u003e\n\n\u003cp\u003eHowever, you'll encounter plenty of datasets in the real world that don't come with a data dictionary, or that fail to mention placeholder values.  \u003c/p\u003e\n\n\u003cp\u003eFollow these strategies for detecting placeholder values in your data. \u003c/p\u003e\n\n\u003ch4\u003eNumerical data\u003c/h4\u003e\n\n\u003cp\u003eNumerical columns will often represent missing values with a value that is nonsensical to the column in question.  For instance, in healthcare data, missing values in a \u003ccode\u003eWeight\u003c/code\u003e column may be using impossible values such as \u003ccode\u003e0\u003c/code\u003e or \u003ccode\u003e9999\u003c/code\u003e.  These are valid to the computer, since they are real-numbered, but are obvious to anyone analyzing the data as placeholder values.  \u003c/p\u003e\n\n\u003cp\u003eThese are the most difficult to check for, since this requires getting decently familiar with the column in question enough to notice values that are technically valid but pragmatically impossible. \u003c/p\u003e\n\n\u003cp\u003eTo detect these sorts of placeholder values, start by checking for outliers -- they are often encoded as very large numbers, or as 0 (when 0 isn't a realistic value for the column in question).  Any good placeholder value will be a value that couldn't show up in the real world.  \u003c/p\u003e\n\n\u003cp\u003eHowever, you may also find actual outliers (values that are \u003cem\u003enot impossible\u003c/em\u003e, but \u003cem\u003eoccur rarely\u003c/em\u003e). Outliers, like missing or corrupt data, can adversely effect your Machine Learning models. Some of the ways in which you can identify outliers are: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eStandard deviation\u003c/strong\u003e: If the data is normally distributed (or nearly normal), you can use three standard deviations as a cutoff point. In a normal distribution, three standard devations from the mean in both the directions cover 99.7% of the data, so any values outside this range are highly improbable, and can be safely discarded as outliers. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-dealing-missing-data/master/images/normal_sd_new.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eYou will learn more about normal distribution in a later lesson. \u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eInterquartile range (IQR)\u003c/strong\u003e: If the data is not normally distribued, you can use the same method boxplots use to determine the outliers -- all observations that lie 1.5 times the IQR (difference between the 75th and the 25th percentiles of the data) away from the median in either direction are treated as outliers. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-dealing-missing-data/master/images/new_boxplot.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf you need a refresher on IQR, refer to the lesson on \u003cem\u003eMeasures of Dispersion\u003c/em\u003e in the \u003cem\u003eImporting and Statistical Analysis of Data\u003c/em\u003e section of Module 1.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAnother way to confirm these values is to check the \u003ccode\u003e.value_counts()\u003c/code\u003e of a column.  In a continuously-valued column, it is probably rare for one specific value to overwhelm all the others.  If, for instance, you see the same numerical value showing up a statistically improbable number of times, double-check that this value is real -- placeholder values have the potential to show up many times, but it's much less likely for real-valued numbers.  \u003c/p\u003e\n\n\u003ch4\u003eCategorical data\u003c/h4\u003e\n\n\u003cp\u003eTo detect placeholder values in categorical data, get the unique values in the column and see if there are any values that don't match up with your expectations.  Pandas provides a built-in method for this.  For instance, in the titanic dataset, we can check the unique values of the \u003ccode\u003eEmbarked\u003c/code\u003e column by typing:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Embarked'].unique()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis will return an array containing all the unique values in the dataset.  \u003c/p\u003e\n\n\u003cp\u003eNote that for categorical columns, it is much more likely to have a data dictionary to work with, since it is common to have categorical values that aren't readily understandable without a data dictionary to help us figure out what each potential category means.  \u003c/p\u003e\n\n\u003ch2\u003eStrategies for dealing with missing data\u003c/h2\u003e\n\n\u003cp\u003eDetecting missing values isn't enough -- we need to deal with them in order to move forward! We have three options for dealing with missing values -- removing them from the dataset, keeping them, or replacing them with another value. \u003c/p\u003e\n\n\u003ch3\u003eRemove\u003c/h3\u003e\n\n\u003cp\u003eThe easiest way to deal with missing values is to drop the offending rows and/or columns.  The downside to this is that we lose data in the process.  This is a valid strategy on very large datasets -- however, on smaller datasets, throwing away data may be unacceptable.  \u003c/p\u003e\n\n\u003cp\u003eThe two main strategies for dealing with missing values are to drop columns or to drop rows. For this strategy, it does not matter if we are dealing with continuous or categorical data.  \u003c/p\u003e\n\n\u003ch4\u003eDropping columns\u003c/h4\u003e\n\n\u003cp\u003eConsider the output from the titanic dataset shown previously.  The \u003ccode\u003eCabins\u003c/code\u003e column contains 687 missing values. The entire dataset only contains around 900 rows of data.  In this case, it makes more sense to just remove the \u003ccode\u003eCabins\u003c/code\u003e  column from the dataset entirely.  \u003c/p\u003e\n\n\u003cp\u003eNote that while this makes sense for the \u003ccode\u003eCabins\u003c/code\u003e column, this is not a good idea for dealing with the null values contained within the \u003ccode\u003eAge\u003c/code\u003e column. Although the \u003ccode\u003eAge\u003c/code\u003e column contains 75 missing values, the vast majority of the items in this dataset contain perfectly good information for the age column.  If we dropped this column, we would be throwing out all that information just to deal with a small subset of missing values in that column!\u003c/p\u003e\n\n\u003ch4\u003eDropping rows\u003c/h4\u003e\n\n\u003cp\u003eIn the above example, dropping all rows that contain a null value would be a very bad idea, because we would 3/4 of our data! Dropping rows makes more sense when the proportion of rows with missing values is very small compared to the size of the overall dataset -- it's okay to just throw out the missing values as long as it's not too many observations. There's no hard rule for exactly how many missing values is the right amount to throw out, and will vary project by project.  Think critically, and use your best judgment!\u003c/p\u003e\n\n\u003cp\u003eTo drop all rows containing missing values in a DataFrame, use \u003ccode\u003edataframe.dropna()\u003c/code\u003e.  Note that this returns a copy of the dataframe with the rows in question dropped -- however, you can mutate the DataFrame in place by passing in \u003ccode\u003einplace=True\u003c/code\u003e as a parameter to the method call. \u003c/p\u003e\n\n\u003ch3\u003eReplace\u003c/h3\u003e\n\n\u003cp\u003eWe can also deal with missing values by replacing them with a common value. The downside of this method is that this can introduce noise into our dataset. \u003c/p\u003e\n\n\u003ch4\u003eContinuous data\u003c/h4\u003e\n\n\u003cp\u003eFor continuous data, the best solution is to replace the missing values with the median value for that column. The median value is a good choice because it is least likely to influence the distribution of the dataset overall. If the dataset is symmetric, then the mean and the median will be the same value. If the dataset is not symmetric, then the mean is more likely to be skewed by outlier values, so the median is a better choice.  \u003c/p\u003e\n\n\u003cp\u003ePandas provides an easy way for us to replace null values. For instance, if we wanted to replace all null values in the \u003ccode\u003eFare\u003c/code\u003e column with the column median, we would type:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Fare'].fillna(df['Fare'].median())\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch4\u003eCategorical data\u003c/h4\u003e\n\n\u003cp\u003eWith categorical data, this is harder, since we don't have summary statistics to lean on such as the median or the mean. In this case, if one categorical value is much more common than others, it is a valid strategy to replace missing values with this common value. However, make sure to examine your data first! If all the categorical values are equally common, picking one to replace all the missing values may do more harm than good by skewing the distribution and introducing some false signal into your dataset.\u003c/p\u003e\n\n\u003ch3\u003eKeep\u003c/h3\u003e\n\n\u003cp\u003eSometimes, the knowledge that a value is missing can itself be informative for us.  If knowing that a value is missing tells you something, then it is often worth keeping the missing values using the following strategies. \u003c/p\u003e\n\n\u003ch4\u003eCategorical data\u003c/h4\u003e\n\n\u003cp\u003eThis one is the easiest -- just treat missing values as its own category! This may require replacing missing values with a string to denote this, as your model will still likely throw errors if the actual \u003ccode\u003eNaN\u003c/code\u003e values are not replaced. In that case, just replace the \u003ccode\u003eNaN\u003c/code\u003e values with the string \u003ccode\u003e'NaN'\u003c/code\u003e, or another string that makes it obvious that this value is \u003ccode\u003e'missing'\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch4\u003eNumerical data\u003c/h4\u003e\n\n\u003cp\u003eOften, missing values inside a continuously-valued column will cause all sorts of havoc in your models, so leaving the \u003ccode\u003eNaN\u003c/code\u003es alone isn't usually an option here.  Instead, consider using \u003cstrong\u003e\u003cem\u003eCoarse Classification\u003c/em\u003e\u003c/strong\u003e, also referred to as \u003cstrong\u003e\u003cem\u003eBinning\u003c/em\u003e\u003c/strong\u003e.  This allows us to convert the entire column from a numerical column to a categorical column by binning our data into categories. For instance, we could deal with the missing values in the \u003ccode\u003eAge\u003c/code\u003e column by creating a categorical column that separates each person into 10-year age ranges. Anybody between the ages of 0 and 10 would be a \u003ccode\u003e1\u003c/code\u003e, 11 to 20 would be a \u003ccode\u003e2\u003c/code\u003e, and so on.  \u003c/p\u003e\n\n\u003cp\u003eOnce we have binned the data in a new column, we can throw out the numerical version of the column, and just leave the missing values as one more valid category inside our new categorical column!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this section, we learned:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eStrategies for detecting \u003ccode\u003eNaN\u003c/code\u003e values in pandas\u003c/li\u003e\n\u003cli\u003eStrategies for detecting missing data denoted by place holder values\u003c/li\u003e\n\u003cli\u003eHow to deal with missing values by \u003cem\u003eRemoving\u003c/em\u003e, \u003cem\u003eReplacing\u003c/em\u003e, or \u003cem\u003eKeeping\u003c/em\u003e them!\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-dealing-missing-data\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-dealing-missing-data\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"dealing-with-missing-data"},{"id":142292,"title":"Dealing with Missing Data - Quiz","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"gd41d8cd98f00b204e9800998ecf8427e","questionCount":8,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":8.0,"dueAt":null,"lockAt":null,"unlockAt":"2020-11-30T14:42:18Z","requirement":null,"completed":false,"content":"\u003cp\u003eThis quiz is to check your understanding of strategies we've covered for detecting and dealing with missing data.\u003c/p\u003e","exportId":"g6e01ac1e7aecbdffd81b4b7d8bd25bc5"},{"id":142293,"title":"Dealing with Missing Data - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g5117ac59d5ac536eb43580883fdfb066"},{"id":142294,"title":"More on Missing Data","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-on-missing-data\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-on-missing-data/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gb1ec6c615bd4d6eb9cc617979c2fcf1e"},{"id":142295,"title":"More on Missing Data - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-on-missing-data-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-on-missing-data-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gff107d52f4a62757355f1e8a9bc13952"},{"id":142296,"title":"Mini-Project - Data Cleaning","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-cleaning-project\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-cleaning-project/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g07c480c162c195b5848fcd783fa4a443"},{"id":142297,"title":"Data Cleaning in Pandas - Recap","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-summary-data-cleaning-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-summary-data-cleaning-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g970dfa1477f39b9cd65a61cbb7f54579"}]},{"id":15171,"name":"Topic 6: Data Visualization","status":"unlocked","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g56b9baa1491fea6345ae71aea448e136","items":[{"id":142298,"title":"Data Visualization - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-visualizations-section-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-visualizations-section-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll get a more thorough overview of data visualization, Python's libraries, and how to create successful visualizations. \u003c/p\u003e\n\n\u003ch2\u003eData Visualization\u003c/h2\u003e\n\n\u003cp\u003eIn this section, we're going to focus on \u003cstrong\u003e\u003cem\u003eData Visualization\u003c/em\u003e\u003c/strong\u003e. We'll begin by getting some deliberate practice in with some of Matplotlib's more advanced features, such as subplots.\u003c/p\u003e\n\n\u003cp\u003eThen, we'll dig into some of the best practices for data visualization, and learn how we can make visualizations that will look great in any professional environment. We'll also dig into some of the most common mistakes people make when creating visualizations, so that we can avoid them. \u003c/p\u003e\n\n\u003cp\u003eFinally, we'll learn about a more advanced visualization library, \u003cstrong\u003e\u003cem\u003eSeaborn\u003c/em\u003e\u003c/strong\u003e. We'll get some practice with Seaborn, and get a feel for when to use Seaborn, and when to use Matplotlib. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eYou're ready to start exploring how to best visualize your data. Let's get started with this section!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-visualizations-section-intro\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-visualizations-section-intro\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-visualizations-section-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"data-visualization-introduction"},{"id":142299,"title":"Customizing Visualizations with Matplotlib","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-matplotlib\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-matplotlib/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g3eddc6e815cdd02d455d067757aa807f"},{"id":142300,"title":"Customizing Visualizations with Matplotlib - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-matplotlib-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-matplotlib-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gb9411812e62b6117025cdd2ee4fe8906"},{"id":142301,"title":"Subplots and Enumeration - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-subplots-and-enumeration-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-subplots-and-enumeration-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gb23e457b728c32b92045e5c7f5ce9cb6"},{"id":142302,"title":"Data Visualization - Best Practices and Common Mistakes","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn some best practices for creating high-quality data visualizations, as well as some common mistakes to avoid!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eChoose a type of visualization that is appropriate for a given set of data\u003c/li\u003e\n\u003cli\u003eDescribe how some types of visualizations can be misleading to viewers\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCreating High-Quality Data Visualizations\u003c/h2\u003e\n\n\u003cp\u003eCreating your own data visualizations can be trickier than it looks. Not because they're hard to code, but because there are so many different stylistic choices you have to make! Most of Data Science is based in math, where there is a probably correct answer. Unfortunately, there is no \"right answer\" when it comes to building the best data visualization for a given task or project. However, there are some good rules we can follow, and some common mistakes we can avoid. The goal of this lesson is to get you thinking about both of them by looking at some real-world examples. \u003c/p\u003e\n\n\u003ch2\u003eDon't: Use a Pie Chart\u003c/h2\u003e\n\n\u003cp\u003eFrom the Wikipedia page on Pie Charts:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\"Pie charts are very widely used in the business world and the mass media. However, they have been criticized, and many experts recommend avoiding them, pointing out that research has shown it is difficult to compare different sections of a given pie chart, or to compare data across different pie charts. Pie charts can be replaced in most cases by other plots such as the bar chart, box plot or dot plots.\"\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThis is the \u003cem\u003esecond paragraph\u003c/em\u003e on the page. What does this tell us? Pie charts are such a bad choice for data visualizations that it's own Wikipedia page starts with a warning against using them!\u003c/p\u003e\n\n\u003cp\u003eSo why are Pie Charts a bad choice? The simple answer is because humans don't think in radians, and we aren't good at judging the area of a circle. For instance, take a look at the following infographic:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/bad_data_viz.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eInfographic from \u003ca href=\"https://www.vox.com/2014/8/20/6040435/als-ice-bucket-challenge-and-why-we-give-to-charity-donate\"\u003eVox\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIt takes a little while to get a feel for the information this misguided data visualization is trying to get across. It's hard to compare the different items, which is a problem, because the entire goal of this visualization is to show comparisons between the different diseases! \u003c/p\u003e\n\n\u003ch2\u003eDo: Choose the Right Tool for the Job\u003c/h2\u003e\n\n\u003cp\u003eConsider the following Pie Charts:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/piechart.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe pie charts all look pretty much the same. It's hard for us to tell the differences between them, especially when it comes to ranking the different colored sections by size in the each chart. However, when we examine the bar charts below the image,the differences in each become immediately apparent--you couldn't miss them if you tried. \u003c/p\u003e\n\n\u003cp\u003eWhen deciding what visualization to use, consider what information you're trying to communicate, and then pick the plot that communicates that information in the most obvious manner. \u003c/p\u003e\n\n\u003ch2\u003eDon't: Get Your Percentages Wrong\u003c/h2\u003e\n\n\u003cp\u003eThis one seems like an easy mistake to avoid, but it still happens all the time. Double check your math, and always double check your calculations! Nothing destroys a Data Scientist's credibility in front of a crowd like simple arithmetic errors or visualizations that don't match your numbers. \u003c/p\u003e\n\n\u003cp\u003eConsider the following infographic, and try to figure out what is wrong with it:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_percentages.png\" height=\"75%\" width=\"75%\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThere are two things wrong with this infographic. The first is that the percentages add up to 243%, which makes no sense. We can intuit that respondents were allowed to choose more than one category, but that's too ambiguous on its own, and doesn't tell us anything!\u003c/p\u003e\n\n\u003cp\u003eThe second issue with this visualization is that the area taken up by each colored section doesn't fit with their corresponding percentages. In a good data visualization, if 78%  of the respondents chose the category represented by purple, then 78% of the person should be purple!  Mismatches like this undermine the message of your visualization because they are confusing and ambiguous. Avoid them!\u003c/p\u003e\n\n\u003ch2\u003eDon't: Make Your Visualizations Too Busy or Unique\u003c/h2\u003e\n\n\u003cp\u003eOne of the easier mistakes to make is to make visualizations that simply have so much going on that they are almost impossible to interpret. Consider the line graph below. Take a minute and try to make sense of it.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_bad-time-series.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAlmost impossible, right? Mistakes like this can be avoided by breaking information up into a series of smaller graphs, or by picking a more appropriate type of visualzation, when possible. \u003c/p\u003e\n\n\u003cp\u003eAnother big mistake is to try and create new, unique visualizations that people haven't seen before. While it may seem like a good idea to get creative, fight the urge. You don't see weird, unique stuff often for a reason--because they don't work well. Stick to formats people are used to. Switching up things to try and be unique can make your visualization confusing, or in the case below, purposefully misleading!\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_gun-deaths-in-FL.png\" width=\"400\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn this visualization, the author broke the common convention of having a line go up as a number goes up. Instead, the line goes down as the number of gun deaths in Florida increases. However, most people that view this visualization leave with the exact opposite impression, because they are paying more attention to the direction of the line than they are to the numbers on the y-axis. That's because we focus on \u003cstrong\u003e\u003cem\u003ePreattentive Attributes\u003c/em\u003e\u003c/strong\u003e first!\u003c/p\u003e\n\n\u003ch2\u003eDo: Use Preattentive Attributes\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003ePreattentive Attributes\u003c/em\u003e\u003c/strong\u003e are things that our eyes are drawn to. We can't help but notice them, because our brains are wired to. There will be times when you need a visualization to communicate a specific piece of information, that you want to make as obvious as possible. The best way to do this is to pick the right preattentive attribute to highlight this!\u003c/p\u003e\n\n\u003cp\u003eTake a look at some of the examples in the chart below: \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_preattentive-attributes.png\" width=\"700\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNote that preattentive attributes are not one size fits all. Most of them work well for certain types of data, but not others. Consider the following chart, and refer back to the preattentive attributes listed above and consider how they would look trying to highlight each different type of information. \u003c/p\u003e\n\n\u003ch2\u003eDon't: Use 3D Visualizations\u003c/h2\u003e\n\n\u003cp\u003eThe final mistake we'll cover today is the use of 3D Visualizations. While they may seem like a cool idea, in practice, they are almost always trouble. The reason for this is because they easily cause \u003cstrong\u003e\u003cem\u003eOcclusion\u003c/em\u003e\u003c/strong\u003e, which is just a fancy way of saying that the things in front block the things in back so that you can't see them! For example:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_occlusion.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNote that there may be some times where a 3D visualization may actually be your best choice, but those are almost always going to be related to visualizing a point cloud in a 3D space. If you absolutely have to use a 3D visualization (or any other sort of visualization where occlusion could be a problem), consider changing the opacity of the visualization to make items more see-through. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we saw many examples of bad data visualizations, and learned about how to make great data visualizations by avoiding these mistakes and following the best practices!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-data-viz-best-practices-common-mistakes\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-data-viz-best-practices-common-mistakes\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"data-visualization-best-practices-and-common-mistakes"},{"id":142303,"title":"Seaborn","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-seaborn\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-seaborn/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gb4296d85b59219588a9c87a36700e759"},{"id":142304,"title":"Seaborn - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-seaborn-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-seaborn-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g7a95815471d92488114eb5729148a248"},{"id":142305,"title":"Data Visualization - Recap","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-visualizations-section-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-visualizations-section-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll review what you learned in this section. \u003c/p\u003e\n\n\u003ch2\u003eKey Takeaways\u003c/h2\u003e\n\n\u003cp\u003eWe began this section by getting some deeper practice with Python's most popular data visualization library, \u003cstrong\u003e\u003cem\u003eMatplotlib\u003c/em\u003e\u003c/strong\u003e! We got some practice with things like different kinds of plots, setting labels and axes, modifying line ticks, adding a legend, and even using color in our visualizations.  We also learned about how to place multiple plots together as a \u003cstrong\u003e\u003cem\u003esubplot\u003c/em\u003e\u003c/strong\u003e, and how we can write clean, efficient code when building these by making use of the \u003ccode\u003eenumerate\u003c/code\u003e keyword for our loops. \u003c/p\u003e\n\n\u003cp\u003eNext, we learned about the best and worst practices for data visualization. We learned about how to pack multiple kinds of information into a single plot, how to make effective use of color, and how to use \u003cstrong\u003e\u003cem\u003ePreattentive Attributes\u003c/em\u003e\u003c/strong\u003e to make important parts of our visualization stand out. We also learned about common mistakes and errors, so that we can avoid them in the future. \u003c/p\u003e\n\n\u003cp\u003eFinally, we got some practice with a second visualization library, \u003cstrong\u003e\u003cem\u003eSeaborn\u003c/em\u003e\u003c/strong\u003e. We learned about the relationship between Seaborn and Matplotlib, and saw some examples of when we may want to use Seaborn instead of Matplotlib. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you learned how to create meaningful visualizations.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-visualizations-section-recap\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-visualizations-section-recap\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-visualizations-section-recap/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"data-visualization-recap"}]},{"id":15172,"name":"Topic 7: SQL and Relational Databases","status":"unlocked","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"gb9d607eb7934763e71b12eaf22587fc7","items":[{"id":142306,"title":"SQL and Relational Databases - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-introduction-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-introduction-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll learn about SQL, which stands for Structured Query Language. It has been around since the 1970s and there are many different dialects of the language including MySQL, SQLite, and PostgreSQL, to name a few. Each of these has particularities such as specific functions or keywords for that specific implementation. All of these, however, have the same basic structures including keywords like \u003ccode\u003eSELECT\u003c/code\u003e for querying databases, and the same general database architecture. Toward the end of this section, you'll learn about more advanced SQL operations. You'll also get a chance to answer some SQL interview questions to help prepare you for your job search!\u003c/p\u003e\n\n\u003ch2\u003eThe Structure of SQL Databases\u003c/h2\u003e\n\n\u003cp\u003eSQL databases are the root container for data. Databases are a collection of tables. Each table is similar to a csv-file or a spreadsheet within an Excel workbook. That is, tables are two-dimensional objects with specific columns and associated entries organized into rows. To demonstrate, here is an outline of a database structure:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-sql-introduction-v2-1/master/images/Database-Schema.png\" width=\"700\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn the diagram, each rectangle is a table, with the table name listed at the top. In this case, we have 8 tables: productlines, products, orderdetails, employees, offices, customers, orders, and payments. Below each of the table names, we have a list of the various column names associated with that table. So for example, the productlines table has four columns: productLine, textDescription, htmlDescription and image. \u003c/p\u003e\n\n\u003ch3\u003eRelational Data\u003c/h3\u003e\n\n\u003cp\u003eSQL is designed to work with \u003cstrong\u003erelational data\u003c/strong\u003e. This really just means pieces of data that are related to each other. In the example above, data on the employees table has some relationship to data on the offices table, indicating that an employee may be associated with a specific office location. Likewise, certain orders are associated with certain customers. Lots of real world data is inherently related. For example, students have an association to a course, ingredients are related to a recipe.\u003c/p\u003e\n\n\u003cp\u003eYou may also note that some of these column names are preceded by an asterix (*). This indicates that this is the \u003cstrong\u003eprimary key\u003c/strong\u003e for the table. A primary key is a unique identifier for a table. That is, there can only be unique values for this column entry. lastName would not be a good choice for a primary key as it's common for people to have the same last names or even firstName + lastName pairings.\u003c/p\u003e\n\n\u003cp\u003eIf you look closely, you'll see that the columns that are the primary key for one table can also appear on other tables. This is known as a \u003cstrong\u003eforeign key\u003c/strong\u003e aka the primary key from a different (\"foreign\") table. This is the core idea of how data on different tables is associated in a relational database. If you were told a specific customerNumber, and then given a list of order data that included the customerNumber, you could determine which orders were placed by that customer by matching up the primary and foreign keys.\u003c/p\u003e\n\n\u003cp\u003eThe lines, circles, arrows, and tick marks are showing different categorizations on exactly how this data is linked. You'll learn much more about these relationships later.\u003c/p\u003e\n\n\u003ch2\u003eConnecting to and Querying SQL Databases\u003c/h2\u003e\n\n\u003cp\u003eYour initial primary use case of SQL will be querying data stored within databases. To do this, you connect to the database with some sort of tool. This could be via Python, as you'll see in the next lesson, the command line, or a GUI tool such as SQLWorkbench. Once you're connected to the database, you can then read and select data from the database, or even write data to the database. To retrieve data from one or more tables you usually use a \u003ccode\u003eSELECT\u003c/code\u003e statement. \u003c/p\u003e\n\n\u003cp\u003eA simple query would look something like this:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"SQL\"\u003eSELECT col1, col2, col3\nFROM table\nWHERE records match criteria\nLIMIT 100;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eDon't worry if this is confusing now, you'll soon learn what each line does. For now, just notice that queries start with the \u003ccode\u003eSELECT\u003c/code\u003e clause, followed by what you want to select. If selecting multiple columns, you separate them with a comma. Then you specify where that data is being retrieved from the using the \u003ccode\u003eFROM\u003c/code\u003e clause followed by the table name. Afterward, you can provide conditions such as filters or limits on the amount of data returned.\u003c/p\u003e\n\n\u003ch2\u003eInterview Practice\u003c/h2\u003e\n\n\u003cp\u003eData retrieval is the most foundational and arguably most important skill in a Data Scientist's toolbox. In your first job as a Data Scientist, you'll quickly learn that it's usually up to you to get the data you need to solve the problem at hand. This means that you need to be an expert at working with relational databases. You can know all the Python and Machine Learning and Statistics in the world, but they're useless if you don't have data to aim those skills at!\u003c/p\u003e\n\n\u003cp\u003eToward the end of this section, you'll review some of the more complex concepts you've learned about SQL queries. Then you'll test your knowledge of relational databases with a short quiz. Finally, you'll end with a lab that features real world interview questions pertaining to SQL and relational databases from major companies such as Facebook and Google!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you got a quick overview of what SQL is and saw an actual SQL query! Remember that there are multiple SQL dialects all with particular differences, but the overall language is generally fairly similar and interchangeable. You also learned that knowledge of SQL is important for job interviews since data retrieval is a foundational part of the data science process. \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-sql-introduction-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-sql-introduction-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-sql-introduction-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"sql-and-relational-databases-introduction"},{"id":142307,"title":"Selecting Data","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-selecting-data\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-selecting-data/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g9d886ed0045c7a49dd9f67d603eca31c"},{"id":142308,"title":"Selecting Data - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-selecting-data-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-selecting-data-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g517e91c3249f107c7480bfaf610b3a93"},{"id":142309,"title":"Filtering and Ordering","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-and-ordering\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-and-ordering/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gbc538c3ad480efa29cdcf410a20bbf21"},{"id":142310,"title":"Filtering and Ordering - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-and-ordering-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-and-ordering-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g829af24e5b4afcd7e1bbd055c3ee9100"},{"id":142311,"title":"Grouping Data with SQL","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-grouping-data-with-sql\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-grouping-data-with-sql/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g5eea590fb25d935ddf79634e2b31ef1f"},{"id":142312,"title":"Grouping Data with SQL - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-grouping-data-with-sql-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-grouping-data-with-sql-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g1bcd18c22270fd5a208d13f9f6b7e9cb"},{"id":142313,"title":"Join Statements","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-join-statements\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-join-statements/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g204234e870b8d097eb2c6ecb679b2a2a"},{"id":142314,"title":"Join Statements - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-join-statements-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-join-statements-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gd2969303297a1804d513e1b27a7c4866"},{"id":142315,"title":"One-to-Many and Many-to-Many Joins","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-one-to-many-and-many-to-many-joins\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-one-to-many-and-many-to-many-joins/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g735cf38bf7ca794ea87c678b1bd81edc"},{"id":142316,"title":"One-to-Many and Many-to-Many Joins - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-one-to-many-and-many-to-many-joins-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-one-to-many-and-many-to-many-joins-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gb2ba107c8396f8f6b22a5a336c839ffc"},{"id":142317,"title":"SQL Subqueries","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-subqueries\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-subqueries/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g0aa052ab3eef82bb329a2f33934cd13a"},{"id":142318,"title":"SQL Subqueries - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-subqueries-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-subqueries-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g930debc77ae32fafd0d6d9a1b6397b68"},{"id":142319,"title":"Using SQL with Pandas","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-sql-with-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-sql-with-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gd463ccb07777383e6c0ec2121e2f1a09"},{"id":142320,"title":"Using SQL with Pandas - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-sql-with-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-sql-with-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gf2b453be3ccd1ca015621b747ee2f6c5"},{"id":142321,"title":"SQL Database Data Types","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-database-data-types\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-database-data-types/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll cover the importance of specifying data types, and the different types of data you can store in a SQLite database.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe how data types operate within databases and explain why they are necessary\u003c/li\u003e\n\u003cli\u003eCompare the 4 different types of data you can store in a SQLite database\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy Do Data Types Matter?\u003c/h2\u003e\n\n\u003cp\u003eYou've seen that when you create a table, you need to include a name for it as well as define at least one column. You define columns in a \u003ccode\u003eCREATE\u003c/code\u003e statement by including a name and a data type to let SQLite know the kind of data you will be storing there. The practice of explicitly declaring a type is known as \"typing.\" \u003c/p\u003e\n\n\u003cp\u003eWhy is it important that you use typing in our database? Simply put, typing allows us to exercise some level of control over our data. Typing not only informs our database of the kind of data you plan to store in a column but it also restricts it. For instance, look at the age column below in our cats table. What do you mean by age? What if you had this:\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003ename\u003c/th\u003e\n\u003cth\u003ebreed\u003c/th\u003e\n\u003cth\u003eage\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eMaru\u003c/td\u003e\n\u003ctd\u003eScottish Fold\u003c/td\u003e\n\u003ctd\u003e3\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eHannah\u003c/td\u003e\n\u003ctd\u003eTabby\u003c/td\u003e\n\u003ctd\u003etwo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eLil' Bub\u003c/td\u003e\n\u003ctd\u003eAmerican Shorthair\u003c/td\u003e\n\u003ctd\u003e5.5\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eDid you intend age to be represented as a whole-number, a word, or a decimal? If you were asked to add up the ages of all the cats you could simply convert the 'two' to 2 in your head, but your database can't do that. It doesn't have that ability because the logic involved in converting a word into a number would be dense and inefficient. What about different languages? What about different spellings? Capitalization, typos, or different hyphenation conventions? These are just some reasons this might start to get crazy. In other words, because databases are designed to store large amounts of data, they are very concerned with storing, accessing, and acting upon that data as efficiently and normally as possible.\u003c/p\u003e\n\n\u003cp\u003eTyping gives us the ability to perform all kinds of operations with predictable results. For instance, the ability to perform math operations like \u003ccode\u003eSUM\u003c/code\u003e - i.e. summing integers - doesn't just depend on everything being an integer of some sort but would also expect it. If you tried, for example,  to \u003ccode\u003eSUM\u003c/code\u003e all of the cats in the above table, SQLite would actually attempt to convert, or cast, their type to something it can \u003ccode\u003eSUM\u003c/code\u003e. It would try to convert anything it can to an \u003ccode\u003eINTEGER\u003c/code\u003e and ignore alpha characters. This can lead to real problems. Without typing, our data might get complicated and messy, and it would be difficult to ask the database questions about large sets of data.\u003c/p\u003e\n\n\u003cp\u003eSimply put, it's important to adhere strictly to only storing data that fits with the data type you have given to a particular column.\u003c/p\u003e\n\n\u003ch2\u003eData types\u003c/h2\u003e\n\n\u003cp\u003eDifferent database systems also have different data types available, which are important and useful to know whenever you are dealing with those systems. SQLite is a good starting point to learn about data types because it only has four basic categories of data types; they are:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"SQL\"\u003eTEXT\nINTEGER\nREAL\nBLOB\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eLet's explore each category in more detail.\u003c/p\u003e\n\n\u003ch3\u003eTEXT\u003c/h3\u003e\n\n\u003cp\u003eAny alphanumeric characters which you want to represent as plain text. The body of this paragraph is text. Your name is text. Your email address is a piece of text. Your height, weight, and age, however, are probably not.\u003c/p\u003e\n\n\u003ch3\u003eINTEGER\u003c/h3\u003e\n\n\u003cp\u003eAnything you want to represent as a whole number. If it's a number and contains no letter or special characters or decimal points then you should store it as an integer. If you use it to perform math or create a comparison between two different rows in our database, then you definitely want to store it as an integer. If it's just a number, it's generally not a bad idea to store it as an integer. You might never add two house address numbers together, but you might want to sort them numerically. For example in the preceding case, you might want to get the biggest number and not the longest piece of text.\u003c/p\u003e\n\n\u003ch3\u003eREAL\u003c/h3\u003e\n\n\u003cp\u003eAnything that's a plain old decimal like 1.3 or 2.25. SQLite will store decimals up to 15 characters long. You can store 1.2345678912345 or 1234.5678912345, but 1.23456789123456789 would only store 1.2345678912345. In other database systems this is called 'double precision.'\u003c/p\u003e\n\n\u003cp\u003eWith these three types in hand, you are going to be able to work our way through the next several topics, and this whole typing concept is going to quickly become second nature for you.\u003c/p\u003e\n\n\u003ch3\u003eBLOB\u003c/h3\u003e\n\n\u003cp\u003eYou may encounter the \u003ccode\u003eBLOB\u003c/code\u003e data type while you're Googling or doing any further reading on SQLite. For now, you will not use \u003ccode\u003eBLOB\u003c/code\u003e. It is generally used for holding binary data.\u003c/p\u003e\n\n\u003ch2\u003eBonus: Note on SQLite\u003c/h2\u003e\n\n\u003cp\u003eTo increase its compatibility with other database engines (E.G. mySQL or PostgreSQL), SQLite allows the programmer to use other common data types outside of the four mentioned above. This is why you are referring to \u003ccode\u003eTEXT INTEGER REAL BLOB\u003c/code\u003e as data type \"categories\". All other common data types are lumped into one of the four existing data types recognized by SQLite. \u003c/p\u003e\n\n\u003cp\u003eFor example, \u003ccode\u003eINT\u003c/code\u003e is a common data type used outside of SQLite. SQLite won't complain if you define a column as an \u003ccode\u003eINT\u003c/code\u003e data type. It will simply lump it into the \u003ccode\u003eINTEGER\u003c/code\u003e category and store it as such.\u003c/p\u003e\n\n\u003cp\u003eTo accommodate this, SQLite has a pretty complicated system of categorizing data types that involves \u003ccode\u003eStorage Classes\u003c/code\u003e, \u003ccode\u003eType Affinities\u003c/code\u003e, and \u003ccode\u003eDatatypes\u003c/code\u003e. For a deeper dive, check out the \n\u003ca href=\"http://www.sqlite.org/datatype3.html\"\u003eSQLite3 Documentation on Datatypes\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eGreat! Now that you've finished this lesson you know why it is important to specify data types, and you know about the different types of data you can store in a SQLite database.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-sql-database-data-types\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-sql-database-data-types\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-sql-database-data-types/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"sql-database-data-types-2"},{"id":142322,"title":"Database Admin 101","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-database-admin-101\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-database-admin-101/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g859e9643ebc220619f0bcfd24d3c722c"},{"id":142323,"title":"Database Admin 101 - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-database-admin-101-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-database-admin-101-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g9f201cd0ab977366947eb6bb2852525b"},{"id":142324,"title":"More Practice with SQL Queries - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-sql-queries-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-sql-queries-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"ga70c38460e6152d1062a65888bda9a04"},{"id":142325,"title":"SQL Interview Questions - Quiz","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"gd41d8cd98f00b204e9800998ecf8427e","questionCount":6,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":6.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cp\u003eThis quiz contains questions on topics you can expect to see in an interview pertaining to SQL and Relational Databases. Some of them are multiple choice, while some are short answer. For these short answer questions, double click on the Jupyter Notebook and type your answer below the line.\u003c/p\u003e\n\u003ch2\u003e\u003ca id=\"user-content-question-1\" class=\"anchor\" href=\"https://github.com/learn-co-curriculum/dsc-sql-interview-questions-quiz#question-1\" aria-hidden=\"true\"\u003e\u003c/a\u003e\u003c/h2\u003e","exportId":"g700812abdd7b5476399d5f8895e0246f"},{"id":142326,"title":"SQL Interview Questions - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-interview-questions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-interview-questions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g242b6117a78751871d15da228534efa1"},{"id":142327,"title":"SQL and Relational Databases - Recap","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-recap-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-recap-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this section, you learned how to construct different \u003ccode\u003eSELECT\u003c/code\u003e queries in SQL. You then got some extra practice with constructing advanced queries and applied this knowledge to some real-world job interview questions!\u003c/p\u003e\n\u003ch2\u003eSELECT\u003c/h2\u003e\n\u003cp\u003eThe first thing you saw with SQL is how to select data from tables. You saw how to connect to a database and query basic data from a table using column names or the wildcard parameter \u003ccode\u003e*\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003eFilters\u003c/h2\u003e\n\u003cp\u003eAfter looking at basic \u003ccode\u003eSELECT\u003c/code\u003e statements, you then saw how to filter your selections using the \u003ccode\u003eWHERE\u003c/code\u003e clause.\u003c/p\u003e\n\u003ch2\u003eOrdering\u003c/h2\u003e\n\u003cp\u003eAlong with filtering, you also saw how to order your query selections. To do this, you use the \u003ccode\u003eORDER BY\u003c/code\u003e clause. Remember that the default behavior there is to return results in ascending order. You can verbosely specify this with the \u003ccode\u003eASC\u003c/code\u003e keyword, or modify the behavior to sort in descending order with the \u003ccode\u003eDESC\u003c/code\u003e keyword.\u003c/p\u003e\n\u003ch2\u003eGrouping\u003c/h2\u003e\n\u003cp\u003eNext up, you saw how to create aggregates with your data. This involved using the \u003ccode\u003eGROUP BY\u003c/code\u003e statement. You saw that you can both explicitly state the column names that you wish to group by or that you can use aliases for the columns using numbers such as 1,2,3. You also got to investigate some aggregate functions such as \u003ccode\u003eCOUNT()\u003c/code\u003e, \u003ccode\u003eMAX()\u003c/code\u003e, \u003ccode\u003eMIN()\u003c/code\u003e, and \u003ccode\u003eAVG()\u003c/code\u003e. Finally, you also saw that you can filter based on the results of aggregate functions using the \u003ccode\u003eHAVING\u003c/code\u003e clause.\u003c/p\u003e\n\u003ch2\u003eJoins\u003c/h2\u003e\n\u003cp\u003eAfter taking a look at more complex queries for a single table, you started to investigate how you could combine data from multiple tables. You did this using the \u003ccode\u003eJOIN\u003c/code\u003e clause. Remember that you can specify the links between tables with the \u003ccode\u003eUSING()\u003c/code\u003e clause if the column name is identical between the tables or the \u003ccode\u003eON\u003c/code\u003e clause if you must specify the link more manually. You also saw how to alias table names during your joins.\u003c/p\u003e\n\u003ch2\u003eSubqueries\u003c/h2\u003e\n\u003cp\u003eWith some of the more complicated join and aggregate scenarios that began to arise, you also saw how to use subqueries to break down complex queries into parts. You also saw how you could potentially create aggregates of aggregates using subqueries.\u003c/p\u003e\n\u003ch2\u003eDatabase Administration\u003c/h2\u003e\n\u003cp\u003eYou saw how to create databases, tables, and subsequently populate those containers with data. You also saw how to delete or modify information. Database administration is a complex topic that has a lot more considerations including user permissions and improving query execution time, but this was a solid introduction to get you up and running.\u003c/p\u003e\n\u003ch2\u003eQueries and Technical Questions in Interviews\u003c/h2\u003e\n\u003cp\u003eYou can expect to run into SQL questions on job interviews. Often times when asked to write a query, you'll be given a hypothetical situation and asked to write a query, without having an ERD diagram or tables to look at. When working through these questions, it's important to clarify your assumptions, and to ask questions to make sure that your assumptions are actually correct! Once you have the information you need, be sure to write clean, well-structured SQL code. Consider capitalizing the SQL keywords, and use semantic variable names for any tables or fields you have to assume exist when writing your queries. This is also a situation where thinking out loud and engaging your interviewer is a great strategy. They're likely trying to evaluate how you would work on a team, just as much as they're trying to evaluate your technical knowledge or your ability to get data from a relational database.\u003c/p\u003e\n\u003ch2\u003eOpen-ended Questions in Interviews\u003c/h2\u003e\n\u003cp\u003eYou may also encounter open-ended SQL questions where there is no single correct solution. When faced with these sorts of interview questions, have an opinion, and be ready to back it up with your rationale! For these sorts of questions, interviewers are often trying to evaluate \u003cem\u003ehow\u003c/em\u003e you approach problems and evaluate your thought process, so helping them understand your thought process is very important!\u003c/p\u003e\n\u003ch2\u003eThe Internet Is Your Friend\u003c/h2\u003e\n\u003cp\u003eAll of the real-world interview questions you worked through in this section came from popular interview sites such as Glassdoor. If you still feel a bit shaky about your ability to answer SQL/relational database questions in an interview, that's okay -- practice makes perfect! Don't be afraid to peruse sites like Glassdoor and others to look for the types of SQL questions you can expect to see during the interview process. Just make sure that when you look at the questions, you try to answer them yourself first before looking at the answers others have posted!\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eCongratulations! You should have a good amount of SQL skills to harness in your data adventures going forward! While you are apt to use other tools such as Pandas to do a lot of your exploratory analysis and data manipulation, databases provide a much more powerful data storage option then flat files like csv or excel workbooks. You also got some experience practicing the type of technical questions you will encounter when interviewing for jobs. The more practice you get, the more comfortable you will be when you're actually interviewing!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-sql-recap-v2-1\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-sql-recap-v2-1\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-sql-recap-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\n\u003c/footer\u003e","exportId":"sql-and-relational-databases-recap"}]},{"id":15173,"name":"Topic 8: Other Database Structures","status":"unlocked","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g082971e04e824763a20e316fda4af079","items":[{"id":142328,"title":"NoSQL Databases - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eBy now, you've dug pretty deep into SQL and relational databases. In this lesson, we'll learn about NoSQL databases, which have become increasingly popular because they can store data that don't fit the traditional \"tabular\" views. \u003c/p\u003e\n\n\u003ch2\u003eNoSQL Databases\u003c/h2\u003e\n\n\u003cp\u003eYou're now familiar with relational databases, how they work, and how to use them to store and retrieve data. However, relational databases and SQL are only part of the picture when it comes to databases -- while their structure and organization is great for tabular data (data that fits in a table), there are plenty of situations where data just doesnt work well as a table. We'll begin this section by exploring some of those situations, and look at some of options out there for databases that don't use a relational format. \u003c/p\u003e\n\n\u003ch2\u003eMongoDB\u003c/h2\u003e\n\n\u003cp\u003eOnce we've gotten the lay of the land, we'll get some hands on experience with one of the most popular NoSQL variants on the market today, MongoDB! We'll start by installing MongoDB on our machine, and then we'll add some data to it, so that we can learn to store data and write queries using MongoDB. By the end of this section, you'll be able to do all the same things in MongoDB as you can in SQLite3!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eGet ready! In addition to querying SQL databases; by the end of this section, you will be able to create, update, and retrieve data from a popular NoSQL database, \u003cstrong\u003eMongoDB\u003c/strong\u003e! \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-nosql-databases-section-intro\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-nosql-databases-section-intro\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"nosql-databases-introduction"},{"id":142329,"title":"NoSQL Databases: Document Stores","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn more about NoSQL databases, and a specific NoSQL category, \u003cem\u003eDocument Stores\u003c/em\u003e. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:     \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe why NoSQL is useful\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDescribe situations when one would use NoSQL databases\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eList different NoSQL databases \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy NoSQL?\u003c/h2\u003e\n\n\u003cp\u003eRelational databases are a cornerstone of a modern technology. They're reliable, dependable, and they seem to be pretty much everywhere. Since their invention at IBM by Edgar Codd in 1970, they've rapidly grown to be used all over the place. Their creation allowed companies to track, store, and analyze data in ways that simply couldn't be done before. For the majority of situations, they're a great choice. However, as technology has progressed into the era of internet and smartphones, we've run into many different sorts of data that aren't a natural fit for a relational format. Let's examine a few of these situations, and see why NoSQL might be a better choice. \u003c/p\u003e\n\n\u003cp\u003eLet's assume that we need to store chat logs between customer service and customers through a web interface. These chats could be very short, or very long -- some chats may only be 2 or 3 messages, while others may conceivably be in the hundreds or thousands. For each message in the chat, we want to store metadata associated with the message, so that we can know things like which party sent the message, the time it was sent, the time the other party read the message, etc. This is a great use case for a NoSQL database, because it would be a very poor fit for a relational database. For starters, each chat can be any size, meaning that we can't just clearly define a table that links which messages belong to which chat. If every chat had only five messages, we might be able to make it work, with a column for \"message 1\", \"message 2\", and so on -- but we can't, because a chat has no set size, and can always grow larger in the future. A relational database would also waste a lot of space storing redundant information, and getting all the messages in a chat could result in some nasty runtimes for our SQL query if this data was stored in separate tables in something like the third normal format. \u003c/p\u003e\n\n\u003cp\u003eThere are several variants of NoSQL databases. They can be categorized into: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDocument Stores\u003c/li\u003e\n\u003cli\u003eKey-Value Stores\u003c/li\u003e\n\u003cli\u003eColumn Stores\u003c/li\u003e\n\u003cli\u003eGraph Databases\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIn this lesson, we will explore \u003cem\u003eDocument Stores\u003c/em\u003e. \u003c/p\u003e\n\n\u003ch2\u003eDocument Stores\u003c/h2\u003e\n\n\u003cp\u003eA \u003cstrong\u003e\u003cem\u003eDocument Store\u003c/em\u003e\u003c/strong\u003e is a database that stores records as unique documents in the database. These documents can be arbitrarily long, and can even contain other documents inside of them! The chat log example we saw above is a prime use case for a document store. In a document store, we could store each message and its accompanying metadata as a document, and then embed each of those documents in order in a chat document. In this way, we can easily access the data as needed. \u003c/p\u003e\n\n\u003cp\u003eIn these Document Stores, each document contains key-value pairs, with the actual data being stored in as the value. This makes Document Stores incredibly flexible, because each document can be unique. There is no constraint saying each document must have the same keys! This makes it great for working with data where we don't know what shape it will take (as we saw above, with chat logs that can be arbitrarily long or short), or perhaps when we don't know what data will be stored at all. This would be a problem in a relational database, because we would need to know what column the data belongs in before we could store it. With a Document Store, we can just create a key on the fly for the data that matters to us!\u003c/p\u003e\n\n\u003cp\u003eNote that while this flexibility makes it easy for us to store data on the fly, this also makes it harder for us to query data and get exactly what we need. Since each different document can potentially have its own \u003cstrong\u003e\u003cem\u003eSchema\u003c/em\u003e\u003c/strong\u003e, this means that we have to know what we are looking for. This also means that we have to be diligent in our naming conventions, because \u003ccode\u003echatLog\u003c/code\u003e is different than \u003ccode\u003eChatLog\u003c/code\u003e. This means that if we run a query across all documents to get all data with the key \u003ccode\u003echatLog\u003c/code\u003e, we'll completely miss any data where they key is written as \u003ccode\u003eChatLog\u003c/code\u003e!\u003c/p\u003e\n\n\u003ch5\u003ePopular  Document Store Databases: MongoDB and Couchbase\u003c/h5\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1/master/images/mongo-db-logo.png\" height=\"60%\" width=\"60%\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1/master/images/couchbase-logo.png\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned about the various sorts of NoSQL Databases in the market today. We dug into the similarities and differences between them all, and also looked at a few examples where a NoSQL Database is a more natural fit for storing data than a traditional relational database. \u003c/p\u003e\n\n\u003cp\u003eIn this lesson, we looked at examples where a NoSQL database is a more natural fit for storing data than a traditional relational database. We also looked at \u003cem\u003eDocument Stores\u003c/em\u003e, one of the few types of NoSQL databases. \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-nosql-document-stores-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-nosql-document-stores-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"nosql-databases-document-stores"},{"id":142330,"title":"MongoDB","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mongodb\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mongodb/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g5ff195b61acd43200b735ef94bba5e70"},{"id":142331,"title":"MongoDB - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mongodb-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mongodb-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gb019af21d29a6bf7c19927515a79b873"},{"id":142332,"title":"NoSQL Databases - Summary","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-recap-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-recap-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe began this section by comparing and contrasting relational/SQL databases with the NoSQL databases. The four different kinds of NoSQL databases are: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDocument Stores\u003c/li\u003e\n\u003cli\u003eKey-Value Stores\u003c/li\u003e\n\u003cli\u003eColumn Stores\u003c/li\u003e\n\u003cli\u003eGraph Databases\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eMongoDB\u003c/h2\u003e\n\n\u003cp\u003eNext, we explored how to install \u003cstrong\u003e\u003cem\u003eMongoDB\u003c/em\u003e\u003c/strong\u003e and get the \u003cstrong\u003e\u003cem\u003eMongoDB Server\u003c/em\u003e\u003c/strong\u003e up and running. We learned some commands that we could use to interact with mongo right there in the server shell, and then focused on connecting to our MongoDB server with Python. \u003c/p\u003e\n\n\u003cp\u003eYou should remember the following high-level takeaways from MongoDB:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eYou use the \u003ccode\u003epymongo\u003c/code\u003e library and a little boilerplate code to connect to the MongoDB database. \u003c/li\u003e\n\u003cli\u003eIn MongoDB, records are referred to as \u003cstrong\u003e\u003cem\u003eDocuments\u003c/em\u003e\u003c/strong\u003e. \u003c/li\u003e\n\u003cli\u003eWe can create groups of documents called \u003cstrong\u003e\u003cem\u003eCollections\u003c/em\u003e\u003c/strong\u003e. \u003c/li\u003e\n\u003cli\u003eRecords are inserted by passing in our data as Python dictionaries. \n\n\u003cul\u003e\n\u003cli\u003eWe can insert a single record with our collection object's \u003ccode\u003e.insert_one()\u003c/code\u003e method. \u003c/li\u003e\n\u003cli\u003eWe can insert many records by creating a list of dictionaries and passing the entire list to the collection object's \u003ccode\u003e.insert_many()\u003c/code\u003e method. \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWe can write queries by using the collection object's \u003ccode\u003e.find()\u003c/code\u003e method. \u003c/li\u003e\n\u003cli\u003eWe can \u003cstrong\u003e\u003cem\u003efilter\u003c/em\u003e\u003c/strong\u003e our queries by passing in the key-value pairs to filter by. \u003c/li\u003e\n\u003cli\u003eWe can also use logic on our filters by making use of \u003cstrong\u003e\u003cem\u003emodifiers\u003c/em\u003e\u003c/strong\u003e. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eCongrats! You are now a (No)SQL wizard! It doesn't matter whether the data you want is stored in a SQL or a NoSQL database, you can access it with ease. \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-nosql-databases-section-recap-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-nosql-databases-section-recap-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-recap-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"nosql-databases-summary"}]},{"id":15174,"name":"Topic 9: JSON and APIs","status":"unlocked","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"ga68e4cda6acb72519a5cb521c310c7c8","items":[{"id":142333,"title":"JSON and APIs - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-apis-intro-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-apis-intro-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you’ll learn about an additional data type: JSON (which stands for JavaScript Object Notation), as well as APIs (Application Programming Interfaces).  \u003c/p\u003e\n\n\u003cp\u003eJSON is the new standard data format for the web. An older data format that is still used on the web is XML, or Extensible Markup Language, which you’ll have a chance to learn more about in the Appendix. APIs are one of the many ways you’ll access data as a data scientist.\u003c/p\u003e\n\n\u003ch2\u003eWorking with JSON files\u003c/h2\u003e\n\n\u003cp\u003eA substantial part of the job of a professional data scientist is to find and access data. You've spent a bunch of time looking at how to pull information from relational databases, but there is lots of information you might need to work with that is either not in a relational database, or that is not exposed to you via a relational database. \u003c/p\u003e\n\n\u003cp\u003eFor example, you might work with a third party website that has a lot of geographical data (perhaps points of interest near state highways). Within their company, they may well store the data within a relational database, but you might have to access it using an API (an Application Programming Interface - a way your computer can talk to their computer to go get some information!). Over the next couple of sections, we'll be looking at accessing data through APIs and enough HTML and CSS to get started with web scraping (downloading information automatically from websites). In this section, you'll look at a key data storage format, JSON, that you may well come across when retrieving data from other web applications or from inside your company.\u003c/p\u003e\n\n\u003ch3\u003eJSON\u003c/h3\u003e\n\n\u003cp\u003eYou'll start off this section with a brief introduction to JSON so you know what this file format looks like. You'll then get some hands-on practice loading and parsing data from JSON files into Python.\u003c/p\u003e\n\n\u003ch3\u003eJSON Schemas\u003c/h3\u003e\n\n\u003cp\u003eOnce you've learned how to import data that has been stored in the JSON format, you'll look at JSON schemas - a way to describe the expected structure of a given JSON file.\u003c/p\u003e\n\n\u003ch3\u003eExploring JSON Schemas\u003c/h3\u003e\n\n\u003cp\u003eFinally, you'll get a lot more practice working with JSON schemas, exploring unknown schemas, accessing and manipulating data inside a JSON file and then converting JSON to alternate data formats such as \u003ccode\u003epandas DataFrames\u003c/code\u003e. This lab will be a great chance for you to practice your Python programming skills and get comfortable with importing and transforming JSON data - something you may well have to do on a regular basis as a professional data scientist.\u003c/p\u003e\n\n\u003ch2\u003eAPIs\u003c/h2\u003e\n\n\u003cp\u003eOne of the many ways you'll find yourself accessing data as a professional data scientist is via APIs (Application Programming Interfaces). Typically, you'll send a request and get some data back, often in JSON or XML format. In this section, you'll get some hands-on experience retrieving and working with data provided by a range of different APIs.\u003c/p\u003e\n\n\u003ch3\u003eIntroduction to APIs\u003c/h3\u003e\n\n\u003cp\u003eIn this section, we'll provide a conceptual introduction to various kinds of APIs and some of the reasons that businesses create them. \u003c/p\u003e\n\n\u003ch3\u003eThe Client Server Model\u003c/h3\u003e\n\n\u003cp\u003eWe then look at the basic model of \"clients\" and \"servers\" to provide a framework for thinking about how your \"client\" retrieves information from an API \"server\". \u003c/p\u003e\n\n\u003ch3\u003eThe Request/Response Cycle\u003c/h3\u003e\n\n\u003cp\u003eNext, we'll look at the fundamental mechanism by which web-based APIs are typically accessed - sending an HTTP request and then processing the response provided by the server. We'll also get a little experience working with HTTP requests using the Python \u003ccode\u003e.get()\u003c/code\u003e method within the \u003ccode\u003erequests\u003c/code\u003e package. We also get some hands-on experience retrieving information from NASA using \u003ca href=\"http://open-notify.org/\"\u003eOpen Notify\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003eAPIs and OAuth\u003c/h3\u003e\n\n\u003cp\u003eUsually, access to a given API is limited to avoid abuse. One of the most common mechanisms for identifying your API requests to make sure they fit within acceptable usage guidelines is OAuth - Open Authorization - a standard for authorizing clients across web requests. In this section, we'll provide an overview of what OAuth is and how it works by looking at how it is implemented by Dropbox. \u003c/p\u003e\n\n\u003ch3\u003eWorking with the Yelp API\u003c/h3\u003e\n\n\u003cp\u003eNext, we'll get some practice working with a real API, retrieving information from the Yelp API. \u003c/p\u003e\n\n\u003ch3\u003eCreating interactive maps with Folium\u003c/h3\u003e\n\n\u003cp\u003eWe wrap up the section by creating interactive maps with Folium. In the Appendix, we include a Lab where you can build a Geographic Information System using Folium and data obtained from the Yelp API to display it on an interactive map.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWhether it’s from an API or a NoSQL store, it's quite possible that some of the data you find yourself working with will be stored using JSON. In this section, you'll build the confidence to be able to import and transform such data.\u003c/p\u003e\n\n\u003cp\u003eAlso, many companies provide access to their data via an API, so being able to connect to and work with data provided via an API is a critical skill as a professional data scientist!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-json-apis-intro-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-json-apis-intro-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-json-apis-intro-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"json-and-apis-introduction"},{"id":142334,"title":"JSON","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gb9dcbabfd20ba11d2b9000fef6797854"},{"id":142335,"title":"JSON - Lab","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-lab-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-lab-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g2c0f4457f6c84f82938c90d6ee6637ef"},{"id":142336,"title":"Working with Known JSON Schemas","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-working-with-known-json-schemas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-working-with-known-json-schemas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g6d7fb1a92d68f6ded5bdd4a30992033b"},{"id":142337,"title":"Working with Known JSON Schemas - Lab","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-working-with-known-json-schemas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-working-with-known-json-schemas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"ga1a3cefeccd56ad4712f2b0f5fbc814e"},{"id":142338,"title":"Exploring and Transforming JSON Schemas","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-exploring-and-transforming-json-schemas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-exploring-and-transforming-json-schemas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g7c6aaf80f734171ae48225475fabd0a6"},{"id":142339,"title":"Exploring and Transforming JSON Schemas - Lab","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-exploring-and-transforming-json-schemas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-exploring-and-transforming-json-schemas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gd43172b494a4306e95982135ebab5d05"},{"id":142340,"title":"Introduction to APIs","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-apis\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-apis/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eAPIs\u003c/em\u003e\u003c/strong\u003e (short for \u003cstrong\u003e\u003cem\u003eApplication Programming Interfaces\u003c/em\u003e\u003c/strong\u003e) are an important aspect of the modern internet. APIs are what allows everything on the internet to play nicely with each other and work together. In this lesson, we'll learn all about what APIs are, what they are used for, and how they work. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to : \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain what an API is\u003c/li\u003e\n\u003cli\u003eList use cases for different types of APIs\u003c/li\u003e\n\u003cli\u003eSummarize why companies build APIs\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eApplication Programming Interface (API)\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAPI stands for \u003cstrong\u003eApplication Programming Interface\u003c/strong\u003e. \u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAn API is a communication protocol between 2 software systems. It describes the mechanism through which if one system \u003cstrong\u003erequests\u003c/strong\u003e some information using a predefined format, a remote system \u003cstrong\u003eresponds\u003c/strong\u003e with an outcome that gets sent back to the first system. \u003c/p\u003e\n\n\u003cp\u003eAPIs are a way of allowing 2 applications to interact with each other. This is an incredibly common task in modern web-based programs. For instance, if you've ever connected your facebook profile to another service such as Spotify or Instagram, this is done through APIs. An API represents a way for 2 pieces of software to interact with one another. Under the hood, the actual request and response is done as an \u003cstrong\u003e\u003cem\u003eHTTP Request\u003c/em\u003e\u003c/strong\u003e. The following diagram shows the \u003cstrong\u003e\u003cem\u003eHTTP Request/Response Cycle\u003c/em\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introduction-to-apis/master/images/new_client-server-illustration.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAPIs are a way of standardizing interactions with software. From the provider's standpoint, it makes sure that everyone will interact with their software in a way that they are expecting. From the user's standpoint, it provides easy instructions and methods for working with 3rd party software, which opens up a ton of useful benefits by allowing us to get data from other sources, or add functionality by incorporating services from 3rd party software!\u003c/p\u003e\n\n\u003ch3\u003eAn Example\u003c/h3\u003e\n\n\u003cp\u003ePokemon Go has been one of the most popular smartphone games, which requires a large ecosystem with complete information of routes and roads across the globe. Developers of the Pokemon could not have possibly coded such a complete world map. Instead, they used Google maps API and built their app on top of it. The following image shows the complete architecture that allows players of pokemon go to play a game which, in turn, responds by making geographical information related API calls to google maps.\u003cbr\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introduction-to-apis/master/images/new_api4.png\" width=\"750\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eWhat is an API made of ?\u003c/h3\u003e\n\n\u003cp\u003eAPIs are very common in the tech world, which means that are many, many different kinds that you're going to run into. While each API you work with will be unique in some way, there are some common traits you can expect to see overall. An API has three main components as listed below:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eAccess Permissions:\u003c/strong\u003e Is the user allowed to ask for data or services?\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eRequest:\u003c/strong\u003e The service being asked for (e.g., if I give you current location using GPS, tell me the map around that place - as we see in Pokemon Go).  A Request has two main parts:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eMethods:\u003c/strong\u003e Once the access is permitted, what questions can be asked.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eParameters:\u003c/strong\u003e Additional details that can be sent with requests or responses\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eResponse:\u003c/strong\u003e The data or service as a result of the request.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWe'll look more deeply at how to use these components in the upcoming lessons for this section. For now, our goal is to understand that APIs:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eProvide a standardized way of letting us interact with 3rd party software/services\u003c/li\u003e\n\u003cli\u003eConsist of a \u003cstrong\u003e\u003cem\u003eRequest\u003c/em\u003e\u003c/strong\u003e and a \u003cstrong\u003e\u003cem\u003eResponse\u003c/em\u003e\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eCan have special \u003cstrong\u003e\u003cem\u003eAccess Permissions\u003c/em\u003e\u003c/strong\u003e depending on the API and the user making the request. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we looked at an introduction to APIs, their basic understanding and main types of APIs.  In the following lessons, we dig into this in a bit more detail and see how to make API calls in Python. \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-introduction-to-apis\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-introduction-to-apis\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-apis/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"introduction-to-apis"},{"id":142341,"title":"The Client Server Model","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-the-client-server-model\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-the-client-server-model/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll look at the relationship between clients and servers.  The Client/server architecture offers an unlimited number of communication possibilities, and it is what makes the Internet \u003cstrong\u003epossible\u003c/strong\u003e. We'll cover a basic understanding of the client/server model which will later be used for calling an API. It is beyond the scope of this lesson to cover an exhaustive resource for client/server architecture--instead, we'll focus on the primary principles of client/server communication.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eMap the client server model process\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eThe Client Server Model\u003c/h2\u003e\n\n\u003cp\u003eThe client server model of communication technologies is a set of distributed application architecture and network operations that manages the workloads between the providers of a service, called \u003cstrong\u003eservers\u003c/strong\u003e, and service requester, called \u003cstrong\u003eclients\u003c/strong\u003e. \u003c/p\u003e\n\n\u003cp\u003eAlthough the client server model can be used by programs within an individual computer, we'll focus on the aspect that deals with networked environments. In this case, the client set up a connection to the server over a local area network (LAN), a wide-area network (WAN) such as the Internet. Have you ever played Xbox Live or used the PlayStation Network? Your Xbox One is the client, and when it logs into the network, it contacts the Xbox Live servers to retrieve gaming resources like updates, video, and game demos.\u003c/p\u003e\n\n\u003cp\u003eA typical multi-layered client server architecture that most of us use in everyday life can be shown as below. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/images/new_cs3.png\" width=\"400\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eWhat is a Client?\u003c/h3\u003e\n\n\u003cp\u003eA client is a computer hardware device or software that requests a service made available by a server. The server is often (but not always) located on a separate physical computer.\u003c/p\u003e\n\n\u003ch3\u003eWhat is a Server?\u003c/h3\u003e\n\n\u003cp\u003eA server is a physical computer dedicated to run services to serve the needs of clients. Depending on the service that is running, it could be a file server, database server, home media server, print server, email server or a \u003cstrong\u003eweb server\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch2\u003eClient/Server Model on the Web\u003c/h2\u003e\n\n\u003cp\u003eThe idea of a Client and Server communicating over a network is what makes viewing websites  and interacting with Web applications (like Gmail, Facebook, LinkedIn) possible. This model is a way to describe the give-and-take relationship between the client and server in a Web application and governs how information passes between computers. \u003c/p\u003e\n\n\u003cp\u003eLet's see what a basic web application looks like that takes in a request from a web client and serves accordingly. \u003c/p\u003e\n\n\u003ch2\u003eWeb Applications\u003c/h2\u003e\n\n\u003cp\u003eA Web application (Web app) is an application program that is stored on a remote server and delivered over the Internet through a browser interface. Web services are Web apps by definition and many, although not all, websites contain Web apps. Any website component that performs some function for the user qualifies as a Web app. Google’s search engine is a web app, yet its root concept is hardly different from a phone directory that enables you to search for names or numbers. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/images/new_apps.png\" width=\"400\"\u003e\u003c/p\u003e\n\n\u003cp\u003eMost web apps actually use a browser interface for interaction, i.e. end users request access and request information/service from these applications through a modern web browser interface. There are hundreds of ways to build and configure a Web application but most of them follow the same basic structure: a web client, a web server, and a database.\u003c/p\u003e\n\n\u003ch3\u003eThe Web client\u003c/h3\u003e\n\n\u003cp\u003eThe client is what the end user interacts with. \"Client-side\" code is actually responsible for most of what a user actually sees. For requesting some information as a web page, the client side may be responsible for: includes:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e Defining the structure of the Web page \u003c/li\u003e\n\u003cli\u003e Setting the look and feel of the Web page \u003c/li\u003e\n\u003cli\u003e Implementing a mechanism for responding to user interactions (clicking buttons, entering text, etc.)\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eMost of these tasks are managed by HTML/CSS/JavaScript-like technologies to structure the information, style of the page and provide interactive objects for navigation and focus. \n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/images/new_clientserver.png\" width=\"400\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eThe Web Server\u003c/h3\u003e\n\n\u003cp\u003eA web server in a Web application is what listens to requests coming in from the clients. When you set up an HTTP (HyperText Transfer Protocol - Language of the internet) server, we set it up to listen to a port number. A port number is always associated with the IP address of a computer. You can think of ports as separate channels on a computer that we can use to perform different tasks: one port could be surfing \u003ca href=\"http://www.facebook.com\"\u003ewww.facebook.com\u003c/a\u003e while another fetches your email. This is possible because each of the applications (the Web browser and the email client) use different port numbers.\u003c/p\u003e\n\n\u003cp\u003eOnce you've set up an HTTP server to listen to a specific port, the server waits for client requests coming to that specific port. After authenticating the client, the server performs any actions stated by the request and sends any requested data via an HTTP response.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/./images/new_server.png\" width=\"800\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eThe Database\u003c/h3\u003e\n\n\u003cp\u003eDatabases are the foundations of Web architecture. An SQL/NoSQL or a similar type of database is a place to store information so that it can easily be accessed, managed, and updated. If you're building a social media site, for example, you might use a database to store information about your users, posts, comments, etc. When a visitor requests a page, the data inserted into the page comes from the site's database, allowing real-time user interactions with sites like Facebook or apps like Gmail.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/images/new_CSModes.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn the example image above, we can see the above-mentioned setup in action. A browser sends a request to a web server by calling its domain i.e. \u003ca href=\"http://www.google.com\"\u003ewww.google.com\u003c/a\u003e. Based on who the requester is, the server collects necessary information for an SQL database. This information is wrapped as HTML code and sent back to the client. The web browser reads the structuring and styling information embedded within HTML and displays the page to the user accordingly. \u003c/p\u003e\n\n\u003cp\u003eThere is a lot of details on client/server architectures and how they manifest themselves on the Internet. We'll focus a bit more on the ideas highlighted in this section by setting up a client and making requests in Python. These skills will help us request data from the servers for our analytical experiments. here are some extra resources for you if you want to dig deeper into the client server model and how it is set up for many different architectures. \u003c/p\u003e\n\n\u003ch2\u003eFurther Reading\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.lifewire.com/introduction-to-client-server-networks-817420\"\u003eIntroduction to Client Server Networks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.researchgate.net/publication/271295146_Client-Server_Model\"\u003eClient Server Model\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://spin.atomicobject.com/2015/04/06/web-app-client-side-server-side/\"\u003eWeb Application Architecture\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we looked at the basics of the client server model and focused on how this model is implemented for web-based applications. We looked at the role of web clients, web servers, and databases that carry client information. In the following lessons, we'll see how to implement these ideas using Python! \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-the-client-server-model\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-the-client-server-model\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-the-client-server-model/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"the-client-server-model"},{"id":142342,"title":"HTTP Request/Response Cycle - Codealong","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-http-request-response-codealong\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-http-request-response-codealong/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g07b03f843ec99ac407c018628e3d296c"},{"id":142343,"title":"HTTP Request/Response Cycle - Lab","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-http-request-response-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-http-request-response-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g6d2895e57121e3ddd19fb8fcbb935cc0"},{"id":142344,"title":"OAuth - Open Authorization","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-oauth-open-authorization\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-oauth-open-authorization/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003ePerhaps the most common thread among all APIs available on the web is the need to \u003cstrong\u003e\u003cem\u003eauthenticate\u003c/em\u003e\u003c/strong\u003e yourself to prove you are who you say are. This is a major security point for web APIs, and it's no surprise that a standard protocol has evolved to help make authenticating users simple and safe. This authentication protocol is called \u003cstrong\u003e\u003cem\u003eOAuth\u003c/em\u003e\u003c/strong\u003e, and it provides a simple, easy integration for multi-user applications, such as web APIs, so that they can add authentication capabilities to their API in a simple, streamlined way. From our side, this makes life easy because it standardizes the authentication process so that we don't have to worry about many different authentication protocols for every different service. In this lesson, we'll look into OAuth, learn a little about how it works, and explore the benefits OAuth offers. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the role OAuth plays when working with a 3rd party API\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhat is OAuth?\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eOAuth stands for Open Authorization.\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eOAuth\u003c/em\u003e\u003c/strong\u003e is an open-source protocol created to allow the creators of APIs and other online services to easily let them share private data or assets with users. One of the biggest challenges of building multi-user applications is making sure that you only give people access to the data and functionality they're supposed to have. OAuth provides a framework for allowing authenticated access, but without the risk of having to share the original login credentials such as a password.  The OAuth protocol was created in 2010 and was the brainchild of major tech companies such as Google and Twitter. It's now the most popular open standard for user authentication, is used by almost all of the major players in the tech world, such as Netflix, Amazon, Facebook, and more!\u003c/p\u003e\n\n\u003ch3\u003eThe Steps of OAuth\u003c/h3\u003e\n\n\u003cp\u003ePrior to using OAuth, we must also register our application with the authorizer and get our \u003cstrong\u003ecredentials\u003c/strong\u003e to use during the process. We need to set up some information about the application, like the app's name or website, and most importantly, \u003cstrong\u003ea redirect URI\u003c/strong\u003e. The authorizer later uses this to contact the requesting app and tell them that the user said yes. \u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA URI (Uniform Resource Identifier) is a string that refers to a resource. The most common are URLs, which identify the resource by giving its location on the Web.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAfter registration, The first step is the \u003cstrong\u003eauthorization\u003c/strong\u003e. Here, we send our users to the authorization server to ask for some permissions with our scope (permissions) that we would like to have. The user can see everything being requested on his behalf and confirm that they would like to grant our application access for those permissions.\u003c/p\u003e\n\n\u003cp\u003eThe second step is the \u003cstrong\u003eredirect\u003c/strong\u003e. Redirect URIs are a critical part of the OAuth flow. After a user successfully authorizes their application, the authorization server then redirects the user back to the app with an \u003cstrong\u003eauthorization code\u003c/strong\u003e in the URL. Because the redirect URL will contain sensitive information, it is critical that the service doesn’t redirect the user to arbitrary locations. The authorization code is used by our application in the final act of getting the access token. \u003c/p\u003e\n\n\u003cp\u003eThe final step is \u003cstrong\u003eacquisition\u003c/strong\u003e. This is where we finally receive our \u003cstrong\u003eaccess token\u003c/strong\u003e from the service provider so we can process API requests for our user. We use the authorization code we received in the redirect to our redirect url and our own application secret (which is acquired during initial registration) in order to get our user’s access token. The access token can then be used to make API calls on behalf of our user.\u003c/p\u003e\n\n\u003cp\u003eThis architecture is summarized in the image below:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-oauth-open-authorization/master/images/new_oa3.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe following example shows a scenario where you may want to access a user's Dropbox account for storing photo/media as a part of the service you provide. \u003c/p\u003e\n\n\u003ch2\u003eOAuth with DropBox for Single-Sign-On (SSO)\u003c/h2\u003e\n\n\u003cp\u003eIf you've ever used your Facebook or Google account to log in to a 3rd party website or app, then you've used OAuth--OAuth is what makes this sort of \u003cstrong\u003e\u003cem\u003eSingle-Sign-On\u003c/em\u003e\u003c/strong\u003e or \u003cstrong\u003e\u003cem\u003eSSO\u003c/em\u003e\u003c/strong\u003e ability possible. To get a feel for how OAuth makes this possible, let's look at a real-world example--giving Dropbox access to the photos app on your phone or computer!\u003c/p\u003e\n\n\u003ch3\u003eRegistering with OAuth and Using SDKs\u003c/h3\u003e\n\n\u003cp\u003eBefore an application can be used with OAuth, that application must first be \u003cem\u003eregistered\u003c/em\u003e with OAuth. This is a process handled by the team creating the Application itself, and not something we need to worry about as users. For instance, in order for the Photo Gallery app on our Macbook to have access to Dropbox, the team behind this software at Apple will have taken the time to register their app, provide the name of it, set the permissions it will need, and other things like that. The good news is that in most cases, we don't need to write the actual code that allows our application to interface with the service we're connecting to--major companies usually create \u003cstrong\u003e\u003cem\u003eSoftware Development Kits\u003c/em\u003e\u003c/strong\u003e or \u003cstrong\u003e\u003cem\u003eSDKs\u003c/em\u003e\u003c/strong\u003e that we can drop into our application and use as a library to add functionality like SSO with our Facebook account or the ability to access files in our Dropbox account. \u003c/p\u003e\n\n\u003ch3\u003eThe OAuth Process\u003c/h3\u003e\n\n\u003cp\u003eIn order for our app to access our users' Dropbox accounts, the following steps need to happen:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eA user must authenticate with Dropbox, verifying their identity. \u003c/li\u003e\n\u003cli\u003eThe user must explicitly give app permission to access their Dropbox (you've probably seen these sorts of popups before when connecting apps to one another on your phone).\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eOne quick technical note: Dropbox (and most other online services) actually use \u003cstrong\u003eOAuth 2\u003c/strong\u003e specifications. \u003ca href=\"https://oauth.net/2/\"\u003eDetails on OAuth2 can be viewed at the official website\u003c/a\u003e. In practice, most people just call it OAuth for short, but there is technically a difference between OAuth and OAuth 2 in terms of how they work and what they can do. \u003c/p\u003e\n\n\u003cp\u003eOnce the user has completed signing in and verifying permissions, the OAuth process returns an \u003cstrong\u003e\u003cem\u003eAccess Token\u003c/em\u003e\u003c/strong\u003e to our application. \u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eAn access token is a special string generated by authorizer that we need to send with \neach subsequent API request to uniquely identify both the app and the  user.\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eYou can think of an access token as a secret code that identifies our HTTP requests as coming from the actual user that has signed in and authenticated themselves. \u003c/p\u003e\n\n\u003cp\u003eFor the remainder of this lesson, we'll borrow some example graphics and explanations from Dropbox's amazing \u003ca href=\"https://www.dropbox.com/developers/reference/oauth-guide\"\u003eOAuth Guide\u003c/a\u003e, which provides a detailed explanation of exactly how OAuth works with Dropbox. We're only interested in the broad strokes of this as an example of how it all works, but if you have time, take a look at the full guide--it's quite informative and very easy to understand! \u003c/p\u003e\n\n\u003cp\u003eHave a look at an example scenario for an Image/gallery app that wants to access its users' Dropbox accounts for accessing or storing new images.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-oauth-open-authorization/master/images/oa1.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe key benefit of this approach is that our app doesn't need to store or transmit the user's Dropbox password. The user will be redirected to Dropbox to authorize our app to access their Dropbox data. After the user has approved our app, they'll be sent back to the app with an authorization code. At this point, our app will exchange the authorization code for an access token which can be used to make subsequent requests to the Dropbox API for downloading/uploading contents, etc. OAuth also allows the user to authorize only a limited set of permissions and the user may choose to stop access at any time. This makes OAuth a safer and more secure form of API authorization for end users.\u003c/p\u003e\n\n\u003ch2\u003eDropbox access for web apps\u003c/h2\u003e\n\n\u003cp\u003eIf you've used SSO features before or connected apps to other apps on your smartphone, then you're probably familiar with the overall workflow of how OAuth takes users through the process of authenticating. \u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eThe application redirects the user to a page to sign in to the account they're using, such as redirecting to the Facebook login page when you click \"Login with Facebook\" in a 3rd party app or game. \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe User signs in, and explicitly provides permissions to the application or game to connect to their account--in our example, this would mean giving the Photo Gallery app on our Macbook explicit permission to access our Dropbox account. \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe user is given an access code and redirected back to the original application. The application then signs in, and exchanges the access code for a more permanent \u003cstrong\u003e\u003cem\u003eAccess Token\u003c/em\u003e\u003c/strong\u003e that it can store for all subsequent connections to the service that it has authenticated with--this is the reason why our 3rd party apps can stay signed in and connected with things like our Facebook or Dropbox accounts, so that we don't have to reauthenticate every time we sign into the app!\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eNote that this request to exchange the authorization code for an access token takes place behind-the-scenes with a call to the /token API endpoint and is not visible to your end users. This setup is shown in the image below, which comes from the Dropbox OAuth Guide linked above.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-oauth-open-authorization/master/images/oa2.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eThe Benefits of Using OAuth\u003c/h2\u003e\n\n\u003cp\u003eNow that we understand how OAuth works, let's think about why it's useful.  Before OAuth, authentication meant \u003cstrong\u003e\u003cem\u003eDirect Authentication\u003c/em\u003e\u003c/strong\u003e through an HTTP request, where the user is prompted for a username and password. This sort of Basic Authentication is still used in plenty of places, as a primitive kind of API authentication for server-side applications: instead of sending a username and password to the server with each request, the user sends an API key ID and secret. Before OAuth, sites prompted users to enter their username and password directly into a form and sites would log into the user account.\u003c/p\u003e\n\n\u003cp\u003eWhat makes OAuth so special and so effective is that it is a \u003cstrong\u003e\u003cem\u003eDelegated\u003c/em\u003e\u003c/strong\u003e authorization framework for RESTful APIs.  This means that it allows apps to obtain limited access (scopes) to a user’s data without giving away a user’s password--think about every HTTP request an app makes when it needs information from a connected Facebook account. It would be a major security risk if each of these HTTP requests still had to contain a username and password to verify that the HTTP request should have access to a certain account. By using an OAuth access token,  it allows us to decouple authentication (proving we are who we say we are) and authorization (getting permissions for all we need to do). \u003c/p\u003e\n\n\u003ch2\u003eFurther reading\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://oauth.net/2/\"\u003eOAuth 2.0\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://medium.freecodecamp.org/how-to-dance-the-oauth-a-step-by-step-lesson-fd2364d89742\"\u003eHow to dance the OAuth: a step-by-step lesson\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://medium.com/square-corner-blog/oauth-wherefore-art-thou-b7034098a0fd\"\u003eOAuth, wherefore art thou?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we looked at the OAuth process for gaining access to user-owned resources. We saw how we authorize our apps to access resources with a high level of confidentiality and security that OAuth offers. We looked at an example of how this might work with the Dropbox API and also some extra reading to see more examples of this process. Next, we'll put this into practice by seeing how this process works with the Yelp API.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-oauth-open-authorization\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-oauth-open-authorization\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-oauth-open-authorization/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"oauth-open-authorization"},{"id":142345,"title":"Using the Yelp API - Codealong","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-yelp-api-codealong\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-yelp-api-codealong/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gd5fd604ed10b0ec7ef33d209b8c18c68"},{"id":142346,"title":"Reading API Documentation","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-reading-api-documentation\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-reading-api-documentation/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g99f4ce206832333a575602a74f1935b8"},{"id":142347,"title":"Folium - Codealong","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-folium-codealong\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-folium-codealong/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g401abd48efe56d8428980d4fd057de6d"},{"id":142348,"title":"JSON and APIs - Recap","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-apis-recap-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-apis-recap-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you learned about the JSON file format, how to parse and navigate JSON files using the \u003ccode\u003ejson\u003c/code\u003e Python module. You also learned about the HTTP request/response cycle and using APIs. APIs are critical to software development, and they can be powerful tools for gathering data for data scientists.\u003c/p\u003e\n\n\u003cp\u003eBefore JSON files were widely adopted, XML files were used. You'll have a chance to learn about XML files in the Appendix for this section.\u003c/p\u003e\n\n\u003ch2\u003eKey Takeaways\u003c/h2\u003e\n\n\u003cp\u003eIn this section, we dug into a key format for storing and transferring data between applications - the JSON file format. We also covered APIs, which can provide access to a wide range of data that you might need as a data scientist.\u003c/p\u003e\n\n\u003cp\u003eKey takeaways include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eJSON (JavaScript Object Notation) is a widely adopted format for storing and accessing data. It requires slightly less typing than XML to represent the same information so it has become increasingly popular over the last 10-15 years. \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe JSON standard library in Python, \u003ccode\u003ejson\u003c/code\u003e, is used for interacting with JSON data: \u003ca href=\"https://docs.python.org/3.6/library/json.html\"\u003ehttps://docs.python.org/3.6/library/json.html\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eWhile there are many other kinds of APIs, as a data scientist, you'll typically be working with web APIs. \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe \u003ccode\u003erequests\u003c/code\u003e library in Python is a great starting point for making HTTP requests to APIs. \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe two most common HTTP methods you'll use when accessing APIs are GET (to retrieve information) and POST (to send information). \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eTypically, you'll need to authenticate in some manner to gain access to most APIs - one common method for doing so is using OAuth. \u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-json-apis-recap-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-json-apis-recap-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-json-apis-recap-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"json-and-apis-recap"}]},{"id":15175,"name":"Topic 10: HTML, CSS and Web Scraping","status":"unlocked","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g60371e5357cb1d38ca3dfe3e42359b69","items":[{"id":142349,"title":"HTML, CSS and Web Scraping - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-intro-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-intro-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll begin to investigate content from the web. You'll start by learning a bit of HTML and CSS, the foundations for the web, and from there you'll take a look at how to scrape information from the web in order to systematically create and build datasets that may not be otherwise available to you.\u003c/p\u003e\n\n\u003ch2\u003eHTML, CSS and Web Scraping\u003c/h2\u003e\n\n\u003cp\u003eWhile many companies provide access to information via APIs, sometimes you have to scrape the information that you need for your analysis from web pages designed to be read by people. \u003c/p\u003e\n\n\u003ch3\u003eHTML\u003c/h3\u003e\n\n\u003cp\u003eHTML stands for HyperText Markup Language - the \"language of the web\". You'll start by learning HTML syntax and practice exploring HTML documents. After that, you'll look into the process for handling new HTML elements that you might not have encountered before.\u003c/p\u003e\n\n\u003ch3\u003eCSS\u003c/h3\u003e\n\n\u003cp\u003eCSS or Cascading Style Sheets is how you make web pages look snazzy. You'll see more about how proper web development workflows separate content from presentation.\u003c/p\u003e\n\n\u003ch3\u003eWeb Scraping\u003c/h3\u003e\n\n\u003cp\u003eFinally, you'll practice using Beautiful Soup - a package for scraping websites.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eYou will often find that the information you want to retrieve isn't available via an API. When that's the case, it's incredibly important to be proficient with web scraping so that you can retrieve the information you need for your analysis.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-html-css-scraping-intro-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-html-css-scraping-intro-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-intro-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"html-css-and-web-scraping-introduction"},{"id":142350,"title":"HTML Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-introduction\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-introduction/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eHTML, or HyperText Markup Language, is a markup language that describes the\nstructure and semantic meaning of web pages. Web browsers, such as Mozilla\nFirefox, Internet Explorer, and Google Chrome interpret the HTML code and use\nit to render output. Unlike Python, JavaScript and other programming languages,\nmarkup languages like HTML don't have any logic behind them. Instead, they\nsimply surround the content to convey structure and meaning.\u003c/p\u003e\n\n\u003cp\u003eEvery web page you've ever visited is structured using HTML code. Being able to\nread and understand an HTML document is an incredibly useful tool in a\ndata scientist's toolbox.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain what HTML is and why it's important in the context of web development\u003c/li\u003e\n\u003cli\u003eCompare and contrast HTML tags\u003c/li\u003e\n\u003cli\u003eCreate an HTML document with appropriate tags\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eHTML Syntax\u003c/h2\u003e\n\n\u003cp\u003eHTML makes use of \u003cstrong\u003etags\u003c/strong\u003e which are interpreted by web browsers to affect how content is displayed. The \u003ccode\u003ep\u003c/code\u003e tag to define a paragraph is shown below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;p\u0026gt;Hello World\u0026lt;/p\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eElements, like the \u003ccode\u003ep\u003c/code\u003e tags above, won't be displayed in the browser. Technologists might say that\nthe tags \"affect how the content is rendered by the browser.\" \u003c/p\u003e\n\n\u003cp\u003eYou can also alter any number of attributes inside of the opening tags. For\nexample, the \u003ccode\u003ea\u003c/code\u003e element, which is used for links, has an \u003ccode\u003ehref\u003c/code\u003e attribute to\nspecify the destination address of the link. If you wanted to link to\n\u003ca href=\"http://www.flatironschool.com\"\u003ewww.flatironschool.com\u003c/a\u003e, you could do so as follows:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;a href=\"http://www.flatironschool.com\"\u0026gt;Flatiron School\u0026lt;/a\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis would render as:\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://www.flatironschool.com\"\u003eFlatiron School\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can also nest elements inside of each other. To have a link displayed as a\nseparate paragraph, we could nest an \u003ccode\u003ea\u003c/code\u003e element inside of a \u003ccode\u003ep\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;p\u0026gt;This \u0026lt;a href=\"http://www.google.com\"\u0026gt;link\u0026lt;/a\u0026gt; will be a part of a separate paragraph.\u0026lt;/p\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eBasic HTML Document Structure\u003c/h2\u003e\n\n\u003cp\u003eAll HTML documents begin with a \"doctype declaration\" tag, which tells the web\nbrowser which version of HTML to use. HTML is a language that is currently\nevolving — just like English. When you open a novel such as \"Romeo and Juliet,\" your\nexpectation is that the \"doctype\" is \"Elizabethan English.\" In the same way\n\"Elizabethan English\" has changed to a more modern form, HTML 1.0 was\n\u003cem\u003eessentially\u003c/em\u003e the same as modern HTML5 but had some tags that are no longer used\nand was lacking some tags often used today.\u003c/p\u003e\n\n\u003cp\u003eSince it's not wrapping any content, the doctype declaration doesn't require a\nclosing tag. To use HTML5, the current up-to-date version, you can simply\ndeclare \u003ccode\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNext, you add an opening and closing \u003ccode\u003ehtml\u003c/code\u003e tag. This tells the web browser to\ninterpret everything inside the tags as HTML code.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\n\u0026lt;html\u0026gt;\n\n\n\u0026lt;/html\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eEvery HTML page is made up of two primary sections: a \u003ccode\u003ehead\u003c/code\u003e and a \u003ccode\u003ebody\u003c/code\u003e. The\n\u003ccode\u003ehead\u003c/code\u003e element contains metadata about the HTML document and other information\nfor the browser, while the \u003ccode\u003ebody\u003c/code\u003e element contains the actual content.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\n\u0026lt;html\u0026gt;\n    \u0026lt;head\u0026gt;\n        \u0026lt;!-- metadata about the HTML document as a whole --\u0026gt;\n\n    \u0026lt;/head\u0026gt;\n\n    \u0026lt;body\u0026gt;\n        \u0026lt;!-- content of our page will be here! --\u0026gt;\n\n    \u0026lt;/body\u0026gt;\n\u0026lt;/html\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eComments\u003c/h2\u003e\n\n\u003cp\u003eLet's also take a brief moment to recognize how to add comments into an HTML\ndocument.  These won't get rendered to the browser at all: they're just helpful\nnotes for the author.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;!-- NYC Pizza is world-famous, cheap, and loved by both vermin and human-like! --\u0026gt;\n\u0026lt;p\u0026gt;Top 5 Pizza Places in NYC\u0026lt;/p\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eCommon HTML Elements\u003c/h2\u003e\n\n\u003cp\u003eYou've already looked at some common HTML elements, such as \u003ccode\u003ea\u003c/code\u003e and \u003ccode\u003ep\u003c/code\u003e. Let's\ntake a look at some more HTML elements.\u003c/p\u003e\n\n\u003ch2\u003eHeaders\u003c/h2\u003e\n\n\u003cp\u003eHTML gives us access to different header elements, ranging from \u003ccode\u003eh1\u003c/code\u003e to \u003ccode\u003eh6\u003c/code\u003e,\nwith \u003ccode\u003eh1\u003c/code\u003e being the largest and \u003ccode\u003eh6\u003c/code\u003e being the smallest.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;h1\u0026gt;Dogs!\u0026lt;/h1\u0026gt;\n\u0026lt;h3\u0026gt;Why Dogs are Great\u0026lt;/h3\u0026gt;\n\n\u0026lt;h6\u0026gt;Different Breeds\u0026lt;/h6\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn addition to changing how the text is displayed, search engines use headers\nto help determine what a web page is about. Remember when\nyou provide \u003cem\u003esemantic\u003c/em\u003e markup, machines can infer the \"main points\" of a page. A\nwell structured article will generally have its principal arguments bracketed\nby low-number header tags -- this very document does exactly that!\u003c/p\u003e\n\n\u003ch2\u003eImages\u003c/h2\u003e\n\n\u003cp\u003eYou can embed images on our web pages using the \u003ccode\u003eimg\u003c/code\u003e element. The \u003ccode\u003eimg\u003c/code\u003e element\ndoesn't have a closing tag. The \u003ccode\u003esrc\u003c/code\u003e attribute tells the browser where to find\nthe image. The \u003ccode\u003ealt\u003c/code\u003e attribute will be displayed if an image can't be loaded,\nand also describes the image to search engines.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003ealt\u003c/code\u003e tag presents a moment to talk about an important principle behind \u003ca href=\"https://webfoundation.org/about/vision/history-of-the-web/\"\u003eTim\nBerners-Lee's vision for the Web\u003c/a\u003e: it is \u003cem\u003einclusive\u003c/em\u003e. If you're using assistive\ntechnologies because you have a sight impairment, it's helpful to know what's\nbeing displayed. If you're in a remote community where internet access is\nexpensive, you might choose to disable images and only pay to download those\nwhich you \u003cem\u003eabsolutely need\u003c/em\u003e. So while an \u003ccode\u003eimg\u003c/code\u003e will inject an image and \"work,\"\nhonoring the Web's vision for openness and inclusivity requires that you provide\nthe \u003ccode\u003ealt\u003c/code\u003e tag as well.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e\u0026lt;img src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-html-introduction/master/URL_TO_IMAGE\" alt=\"Picture of a Dog\"\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2\u003eLists\u003c/h2\u003e\n\n\u003cp\u003eSome other useful HTML elements are lists. You can make bulleted, or unordered\nlists, using opening and closing \u003ccode\u003eul\u003c/code\u003e tags. Inside, you can nest a \u003ccode\u003eli\u003c/code\u003e, or\n\"list item\" element for each item on our list.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;h5\u0026gt;My Favorite Things in No Particular Order\u0026lt;/h5\u0026gt;\n\u0026lt;ul\u0026gt;\n    \u0026lt;li\u0026gt;Coffee\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Vinyl Records\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Pickling\u0026lt;/li\u0026gt;\n\u0026lt;/ul\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis would render as:\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch5\u003eMy Favorite Things in No Particular Order\u003c/h5\u003e\n\n\u003cul\u003e\n    \u003cli\u003eCoffee\u003c/li\u003e\n    \u003cli\u003eVinyl Records\u003c/li\u003e\n    \u003cli\u003ePickling\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eYou can also make a numbered, or ordered list, using an \u003ccode\u003eol\u003c/code\u003e tag.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;h5\u0026gt;Top 5 Pizza Places in NYC\u0026lt;/h5\u0026gt;\n\u0026lt;ol\u0026gt;\n    \u0026lt;li\u0026gt;DiFara Pizza\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Lucali's\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Sal and Carmine's\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Juliana's\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Joe's\u0026lt;/li\u0026gt;\n\u0026lt;/ol\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWould render as:\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch5\u003eTop 5 Pizza Places in NYC\u003c/h5\u003e\n\n\u003col\u003e\n    \u003cli\u003eDiFara Pizza\u003c/li\u003e\n    \u003cli\u003eLucali's\u003c/li\u003e\n    \u003cli\u003eSal and Carmine's\u003c/li\u003e\n    \u003cli\u003eJuliana's\u003c/li\u003e\n    \u003cli\u003eJoe's\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003chr\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWelcome to the world of the web! In this lesson, you learned about HTML, why it's important in web development, and how web pages are structured. You also compared and contrasted a few common HTML tags as well as saw how tags can be used to construct HTML documents.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-html-introduction\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-html-introduction\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-html-introduction/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"html-introduction"},{"id":142351,"title":"Researching HTML Elements","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-researching-html-elements\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-researching-html-elements/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWhen writing HTML you might encounter tags that are new to you. When searching for technical help, you have to be careful about which sources you trust. This is a skill you will build over time but you'll get an overview of some good practices here.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse search engines as resources to find information\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eCompare multiple resources to find the best source\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eUse Search Engines as Resources to Find Information\u003c/h2\u003e\n\n\u003cp\u003eLet's say in your research, you come across an unfamiliar HTML element like\n\u003ccode\u003e\u0026lt;samp\u0026gt;\u003c/code\u003e. You can google \u003ccode\u003esamp html element,\u003c/code\u003e and you will find an endless list\nof results to choose from. Sometimes resources can be outdated, biased, or\ninaccurate. It's important to filter through the results to find the best one.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/web-development/html-element-search.png\" width=\"850\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eObserve And Identify Relevant Information\u003c/h2\u003e\n\n\u003cp\u003eYour instinct might be to open the first result. You should be pickier.\nSometimes the result has \"gamed\" the search engine and unfairly influenced the ranking.\nIt's recommended that you open the top \u003cstrong\u003efive\u003c/strong\u003e results and review them critically.\u003c/p\u003e\n\n\u003cp\u003eIt's also advisable to trust sites that are affiliated with building or\ndefining the technologies more than blogs or other resources. In the HTML\nworld, the Mozilla Developer Network (MDN) is an extremely trustworthy site.\nIn fact, it's likely the best HTML and CSS documentation source on the\ninternet.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/web-development/samp-mdn-page.png\" width=\"850\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eCompare Multiple Resources To Find The Best Source\u003c/h2\u003e\n\n\u003cp\u003eIf you go back to the search results, you'll see that the first result, in this\ncase, is \u003ccode\u003eW3schools\u003c/code\u003e. A site, like W3schools, for example, can be used as an\nadditional resource for garnering understanding. It even includes interactive\nexamples, creating a sandbox environment for experimentation.\u003c/p\u003e\n\n\u003cp\u003eIn this case, between MDN and W3schools, you should get a good sense of how to\nuse the \u003ccode\u003e\u0026lt;samp\u0026gt;\u003c/code\u003e element.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eThe web is a constantly evolving entity. As we build more ambitious products or\nlearn from our collective needs and mistakes, the industry will continually\nupdate the HTML specifications.\u003c/p\u003e\n\n\u003cp\u003eResearching referencing documentation\ncan be scary at first, but it's a primary skill for data scientists. Don't be afraid to\npractice technical searches. It's a \u003cem\u003eskill\u003c/em\u003e that you will get better at with practice.\u003c/p\u003e\n\n\u003cp\u003eMost importantly, don't feel like \u003cem\u003enot knowing everything by heart\u003c/em\u003e means you can't\nbe a data scientist. The greatest data scientists we know are constantly admitting what they\ndon't know, finding the latest news, using the answer they found and moving on.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-researching-html-elements\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-researching-html-elements\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-researching-html-elements/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"researching-html-elements"},{"id":142352,"title":"Separating Content and Presentation","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-separating-content-and-presentation\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-separating-content-and-presentation/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou now know what HTML is and have explored a properly-formatted HTML document. That said, if you look at the HTML pages thus far, you can't help but notice that they look a little plain. To make them more attractive (and responsive), you can use Cascading Style Sheets or CSS!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIdentify the separation of content and presentation\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eExplain the role of CSS\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIdentify the Separation of Content and Presentation\u003c/h2\u003e\n\n\u003cp\u003eHTML lets you mark-up your content with semantic \u003cem\u003estructure\u003c/em\u003e. It forms the skeleton of your web page. It would be great to be able to say, \"Browser, when you see a \u003ccode\u003ep\u003c/code\u003e tag with \u003ccode\u003eid\u003c/code\u003e of \u003ccode\u003emy-name\u003c/code\u003e, make the first letter be huge!\" Or, to get your readers' attention, you might say, \"Browser, if you see \u003cem\u003eany\u003c/em\u003e tag with a \u003ccode\u003eclass\u003c/code\u003e of \u003ccode\u003ewarning\u003c/code\u003e surround it with a red box!\" HTML authors believe that \u003cem\u003ecreating\u003c/em\u003e marked-up documents and \u003cem\u003estyling\u003c/em\u003e marked-up documents are entirely separate tasks. They see a difference between writing \u003cem\u003econtent\u003c/em\u003e (the data within the HTML document) and specifying \u003cem\u003epresentation\u003c/em\u003e, the rules for displaying the rendered elements.\u003c/p\u003e\n\n\u003ch2\u003eExplain the Role of CSS\u003c/h2\u003e\n\n\u003cp\u003eCSS, or \"Cascading Style Sheets,\" tells you how to write rules that define how browsers will present HTML. Rules in CSS won't look like HTML and they usually live in a file apart from our HTML file.\u003c/p\u003e\n\n\u003cp\u003eCSS handles all of the ways you want to customize your content's look and feel from margins and colors, to column-based layout!\u003c/p\u003e\n\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cssguidelin.es/#the-separation-of-concerns\"\u003eCSS Guidelines: The Separation of Concerns\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.csszengarden.com/\"\u003eCSS Zen Garden\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWeb developers separate the content of our HTML pages from their presentation, which they style with CSS. By keeping the two separate, you not only utilize the best tools for each job, but you can change code for one without disturbing the code for the other.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-separating-content-and-presentation\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-separating-content-and-presentation\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-separating-content-and-presentation/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"separating-content-and-presentation"},{"id":142353,"title":"Intro to CSS","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-intro-to-css\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-intro-to-css/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eBrowsers combine the content (HTML) and presentation (CSS) layers to\ndisplay web pages.  CSS is the language for \u003cem\u003estyling\u003c/em\u003e web pages.\u003c/p\u003e\n\n\u003cp\u003eCSS instructions live apart from the HTML elements and have a different\nlook and feel (\"syntax\"). CSS directives give web pages their specific look and\nfeel.  If you have ever been impressed by how a website can be displayed on a\ndesktop browser while the same content looks great on a mobile device, you have\nCSS to thank for it!\u003c/p\u003e\n\n\u003cp\u003eOne of the most amazing displays of the power of CSS is the\n\u003ca href=\"http://www.csszengarden.com/\"\u003eCSS Zen Garden\u003c/a\u003e where people take the \u003cem\u003eexact\nsame\u003c/em\u003e HTML page and use CSS to create \u003cem\u003ewildly\u003c/em\u003e different pages. Take a look!\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-intro-to-css/canvas/images/zengarden1.png\" alt=\"CSS Zen Garden 1\" title=\"A long-scrolling single-page CSS Zen Garden design\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-intro-to-css/canvas/images/zengarden2.png\" alt=\"CSS Zen Garden 2\" title=\"An animated CSS, full-screen browser single-page style Zen Garden design\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-intro-to-css/canvas/images/zengarden3.png\" alt=\"CSS Zen Garden 3\" title=\"Blog-like CSS Zen Garden designs\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAll of the differences you see are due to CSS!\nAstounding, right!?\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eList the components of CSS\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDeclare CSS properties and values\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eRecognize The Differences Between HTML And CSS\u003c/h2\u003e\n\n\u003cp\u003eHTML and CSS play two different roles. When you write HTML, it's important to focus on structure, hierarchy, and meaning — the \"marking-up\" of content. Questions in the mind of an HTML author are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIs it best to list these members' names with numbers or bullets?\u003c/li\u003e\n\u003cli\u003eDoes this menu belong in the navigation in the header?\u003c/li\u003e\n\u003cli\u003eShould this additional reference be an aside or a separate section?\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThese questions deal with structure, hierarchy, and meaning, which are concerns of the content layer (HTML).\u003c/p\u003e\n\n\u003cp\u003eWhen defining the presentation layer (CSS), here are the questions to ask\nyourself:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDo I want the header menu to be stationary or do I want it to scroll with the\nbrowser window?\u003c/li\u003e\n\u003cli\u003eHow do I want the content to display inside of a container? For example,\ndoes it fill the whole area, edge-to-edge? Is there white space around the content and/or the container?\u003c/li\u003e\n\u003cli\u003eHow large should an \u003ccode\u003eH1\u003c/code\u003e be relative to an \u003ccode\u003eH2\u003c/code\u003e? What about an \u003ccode\u003eH3\u003c/code\u003e?\u003c/li\u003e\n\u003cli\u003eWhat properties should links have? Underline or no underline?\nWhich color for the normal state versus the hover state? Should the visited link state be different?\u003c/li\u003e\n\u003cli\u003eHow should the content appear when on a desktop machine versus a\nmobile device?\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAs you ask yourself these questions, your focus is on the \u003cem\u003eaesthetic\u003c/em\u003e quality\nof the page. For each bit of \u003cem\u003econtent\u003c/em\u003e, we can define a \u003cstrong\u003epresentation rule\u003c/strong\u003e\nthat will change the way the HTML is displayed.\u003c/p\u003e\n\n\u003ch2\u003eList the Components of CSS\u003c/h2\u003e\n\n\u003cp\u003eFor each \u003cstrong\u003epresentation rule\u003c/strong\u003e, there are 3 things to keep in mind:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat is the specific HTML we want to style?\u003c/li\u003e\n\u003cli\u003eWhat are the qualities we want to modify (e.g. the properties of text\nin a paragraph)?\u003c/li\u003e\n\u003cli\u003e\n\u003cem\u003eHow\u003c/em\u003e do we want to modify the qualities of the element (e.g. font\nfamily, font color, font size, line height, letter spacing, etc.)?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eOnce you've decided what to modify and how we can start writing CSS rules.\u003c/p\u003e\n\n\u003cp\u003eCSS \u003cstrong\u003eselectors\u003c/strong\u003e are a way of declaring which HTML elements you wish to style.\nSelectors can appear a few different ways:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe type of HTML element(\u003ccode\u003eh1\u003c/code\u003e, \u003ccode\u003ep\u003c/code\u003e, \u003ccode\u003ediv\u003c/code\u003e, etc.)\u003c/li\u003e\n\u003cli\u003eThe value of an element's \u003ccode\u003eid\u003c/code\u003e or \u003ccode\u003eclass\u003c/code\u003e (\u003ccode\u003e\u0026lt;p id='idvalue'\u0026gt;\u0026lt;/p\u0026gt;\u003c/code\u003e, \u003ccode\u003e\u0026lt;p class='classname'\u0026gt;\u0026lt;/p\u0026gt;\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003eThe value of an element's attributes (\u003ccode\u003evalue=\"hello\"\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003eThe element's relationship with surrounding elements (a \u003ccode\u003ep\u003c/code\u003e within an element\nwith class of \u003ccode\u003e.infobox\u003c/code\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFor example, if you want the body of the page to have a black background, your\nselector syntax may be \u003ccode\u003ehtml\u003c/code\u003e or \u003ccode\u003ebody\u003c/code\u003e. For anchors, your selector would be\n\u003ccode\u003ea\u003c/code\u003e. A few more examples are listed below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003e/*\nThe CSS comment syntax is text between \"slash-star\" and \"star-slash\"\n*/\n\n/*\nselects all anchor tag elements in the document (e.g. \u0026lt;a href=\"page-link.html\"\u0026gt;Page Link\u0026lt;/a\u0026gt;)\n*/\na\n\n/*\nselects all headers of type h3 in the document (e.g. \u0026lt;h3\u0026gt;Type selectors\u0026lt;/h3\u0026gt;)\n*/\nh3\n\n/*\nselects all paragraph elements in the document (e.g. \u0026lt;p\u0026gt;Type selectors are used\nto...\u0026lt;/p\u0026gt;)\n*/\np\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors\"\u003eType selectors documentation\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe element type \u003ccode\u003eclass\u003c/code\u003e is a commonly used selector. Class selectors are used\nto \u003cstrong\u003eselect all elements that share a given class name\u003c/strong\u003e. The class selector\nsyntax is: \u003ccode\u003e.classname\u003c/code\u003e. Prefix the class name with a '.'(period).\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003e/*\nselect all elements that have the 'important-topic' classname (e.g. \u0026lt;h1 class='important-topic'\u0026gt;\nand \u0026lt;h1 class='important-topic'\u0026gt;)\n*/\n.important-topic\n\n/*\nselect all elements that have the 'welcome-message' classname (e.g. \u0026lt;p class='helpful-hint'\u0026gt;\nand \u0026lt;p class='helpful-hint'\u0026gt;)\n*/\n.helpful-hint\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eYou can also use the \u003ccode\u003eid\u003c/code\u003e selector to style elements. However, \u003cstrong\u003ethere should\nbe only one element with a given id\u003c/strong\u003e in an HTML document. This can make\nstyling with the ID selector ideal for one-off styles. The \u003ccode\u003eid\u003c/code\u003e selector syntax\nis: \u003ccode\u003e#idvalue\u003c/code\u003e. Prefix the id attribute of an element with a \u003ccode\u003e#\u003c/code\u003e (which is\ncalled \"octothorpe,\" \"pound sign\", or \"hashtag\").\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003e/*\nselects the HTML element with the id 'main-header' (e.g. \u0026lt;h1 id='main-header'\u0026gt;)\n*/\n#main-header\n\n/*\nselects the HTML element with the id 'welcome-message' (e.g. \u0026lt;p id='welcome-message'\u0026gt;)\n*/\n#welcome-message\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/ID_selectors\"\u003eid selectors documentation\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003eDeclare CSS Properties and Values\u003c/h2\u003e\n\n\u003cp\u003eEach element has a list of qualities that can be styled.  CSS \"property\" names\nidentify those qualities. For text styling, examples of property names include\ntext \u003ccode\u003ecolor\u003c/code\u003e, \u003ccode\u003etext-align\u003c/code\u003e and \u003ccode\u003eline-height\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eCSS Property Values are directly related to property names. If you are working\nwith the \u003ccode\u003ecolor\u003c/code\u003e property, the value could be a named color such as \u003ccode\u003ered\u003c/code\u003e, or\n\u003ccode\u003e#660000\u003c/code\u003e. Some properties have their values set with words, others with\nnumbers, and some can take both.\u003c/p\u003e\n\n\u003cp\u003eA CSS property name with a CSS property value is a \u003cstrong\u003eCSS declaration\u003c/strong\u003e.\nTo apply a CSS declaration like \u003ccode\u003ecolor: blue\u003c/code\u003e to a specific HTML\nelement, you need to combine your CSS declaration with a CSS selector. The\nassociation between one or more CSS declarations and a CSS selector is called a\n\u003cstrong\u003eCSS declaration block\u003c/strong\u003e. CSS declarations (one or more) that applied to a\nspecific selector are wrapped by curly braces (\u003ccode\u003e{ }\u003c/code\u003e).  Each declaration inside\na declaration block \u003cstrong\u003emust\u003c/strong\u003e be separated by a semi-colon (\u003ccode\u003e;\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eBelow is a sample CSS declaration block.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003eselector {\n  color: blue;\n}\n/*\nThis is a css declaration for a selector\n'color' is a property name and 'blue' is a css property value\n!!!!! CSS declarations must end with a semi-colon (;) !!!!!\n*/\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eHere's a more complete example declaration block.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003e/*\nThe CSS declaration block below:\n* Will apply to all `h1` elements\n* Will change the text color to blue\n* Will set the font family to Georgia\n*/\nh1 {\n  color: blue;\n  font-family: Georgia;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWith the combination of HTML and CSS, you are able to define content, structure, and style for websites. In this lesson, you learned about the components of CSS and how to declare CSS properties and values in declaration blocks. For example, you can use a CSS selector like \u003ccode\u003eh1\u003c/code\u003e or \u003ccode\u003ep\u003c/code\u003e paired with a declaration block to change the display of that element.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-intro-to-css\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-intro-to-css\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-intro-to-css/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"intro-to-css"},{"id":142354,"title":"CSS Code Along","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-css-code-along\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-css-code-along/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIt's time to see some CSS code in action. \u003ca href=\"https://codepen.io/\"\u003eCodepen\u003c/a\u003e is a great tool to easily test HTML and CSS code that you'll see in practice here.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Codepen to preview and modify HTML and CSS files\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eComment and uncomment CSS and HTML\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCode Example HTML Structure\u003c/h2\u003e\n\n\u003cp\u003eThis \u003ca href=\"https://codepen.io/curiositypaths/pen/WddzQM?editors=1100\"\u003ePen\u003c/a\u003e (saved Codepen document) contains an HTML document with the following structure:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body\"\u003e\u003ccode\u003e\u0026lt;body\u0026gt;\u003c/code\u003e\u003c/a\u003e element (root of the html content. In Codepen you will not see a body tag, it's implicitly present and wraps all the HTML content)\u003c/li\u003e\n\u003cli\u003eAn \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article\"\u003e\u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e\u003c/a\u003e tag to define our content as self-contained unit (e.g. blog post, newspaper article)\u003c/li\u003e\n\u003cli\u003eAn \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements\"\u003e\u003ccode\u003e\u0026lt;h1\u0026gt;\u003c/code\u003e\u003c/a\u003e tag to wrap the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e's header text\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p\"\u003e\u003ccode\u003e\u0026lt;p\u0026gt;\u003c/code\u003e\u003c/a\u003e tags to wrap the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e's unstructured text\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul\"\u003e\u003ccode\u003e\u0026lt;ul\u0026gt;\u003c/code\u003e\u003c/a\u003e tags to represent unordered lists\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li\"\u003e\u003ccode\u003e\u0026lt;li\u0026gt;\u003c/code\u003e\u003c/a\u003e tags to wrap each list item\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCode Example CSS Structure\u003c/h2\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://codepen.io/curiositypaths/pen/WddzQM?editors=1100\"\u003ePen\u003c/a\u003e also includes commented-out CSS Code to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eSet the background of the \u003ccode\u003e\u0026lt;body\u0026gt;\u003c/code\u003e element (whole document) to \u003ccode\u003e#00b3e6\u003c/code\u003e (light blue)\u003c/li\u003e\n\u003cli\u003eSets the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e element width to \u003ccode\u003e700px\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eCenters the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e element\u003c/li\u003e\n\u003cli\u003eSets the font family of the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e element to \u003ccode\u003eHelvetica Neue\u003c/code\u003e. Alternative fonts are provided in the event \u003ccode\u003eHelvetica Neue\u003c/code\u003e is not available on your computer\u003c/li\u003e\n\u003cli\u003eSet the background of the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e element to \u003ccode\u003ewhite\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eAdd 30px of white space to the perimeter of the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eSet the \u003ccode\u003efont-size\u003c/code\u003e to \u003ccode\u003e22px\u003c/code\u003e for the element with \u003ccode\u003eid\u003c/code\u003e \u003ccode\u003emain-header\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eSet the \u003ccode\u003efont-style\u003c/code\u003e to \u003ccode\u003eitalic\u003c/code\u003e for elements containing the class \u003ccode\u003eperspective-questions\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCode Along Instructions\u003c/h2\u003e\n\n\u003cp\u003eOpen the \u003ca href=\"https://codepen.io/curiositypaths/pen/WddzQM?editors=1100\"\u003ePen\u003c/a\u003e in a separate browser tab to follow the code along instructions. \u003c/p\u003e\n\n\u003cp\u003eAll the CSS code you need to successfully modify the page is already included but commented out. All you need to do is uncomment all the \u003ccode\u003eCSS declarations\u003c/code\u003e (\u003ccode\u003eproperty-name\u003c/code\u003e:\u003ccode\u003evalue\u003c/code\u003e) one-by-one.\u003c/p\u003e\n\n\u003ch2\u003ePen Screenshot\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-css-code-along/master/images/codepen.jpeg\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eUnstyled HTML Document Screenshot\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-css-code-along/master/images/unstyled-codepen.jpeg\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eStyled HTML Document Screenshot\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-css-code-along/master/images/styled-codepen.jpeg\" width=\"1050\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eCSS Declarations Uncommenting Steps\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-css-code-along/master/images/css-code-codepen.jpg\" width=\"1050\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eAwesome! In this code along you got to preview and practice a standard web development environment and modify CSS code! Specifically, you used Codepen to modify HTML and CSS files. You also learned how commenting/uncommenting works in CSS and HTML!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-css-code-along\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-css-code-along\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-css-code-along/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"css-code-along"},{"id":142355,"title":"My Little Rainbow","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-my-little-rainbow-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-my-little-rainbow-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you're going to make a rainbow with HTML \u003ccode\u003e\u0026lt;div\u0026gt;\u003c/code\u003e elements. Through this process, you'll learn about HTML elements, CSS styling, CSS selectors, how color works in CSS and importing stylesheets.  That might sound like a lot but it isn't.\u003c/p\u003e\n\n\u003cp\u003eBefore you start, here's some basic info about HTML and CSS. Skip to \u003ca href=\"#making-a-rainbow\"\u003eMaking a Rainbow\u003c/a\u003e if you feel comfortable enough with HTML and CSS.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the purpose of IDs in HTML\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eAdd ID elements to HTML tags\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eSelect and style HTML elements with CSS\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eHTML Basics\u003c/h2\u003e\n\n\u003cp\u003eHyper Text Markup Language, or HTML, is a way to demarcate a document into different parts. Each part is \u003cem\u003emarked\u003c/em\u003e by elements (using tags). Each element has its own special connotation that the browser uses to \u003cem\u003erender\u003c/em\u003e the HTML document. Use this \u003ca href=\"https://web.stanford.edu/group/csp/cs21/htmlcheatsheet.pdf\"\u003echeat sheet\u003c/a\u003e on HTML elements for guidance.\u003c/p\u003e\n\n\u003ch2\u003eElements\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eAll begin with \u003ccode\u003e\u0026lt;\u003c/code\u003e and end with \u003ccode\u003e\u0026gt;\u003c/code\u003e, e.g., \u003ccode\u003e\u0026lt;div\u0026gt;\u003c/code\u003e (this last part is a tag).\u003c/li\u003e\n\u003cli\u003eMost have an opening tag such as \u003ccode\u003e\u0026lt;div\u0026gt;\u003c/code\u003e and a closing tag \u003ccode\u003e\u0026lt;/div\u0026gt;\u003c/code\u003e.\n\n\u003cul\u003e\n\u003cli\u003eThe \u003ccode\u003e/\u003c/code\u003e indicates to the browser that that tag is a closing tag.\u003c/li\u003e\n\u003cli\u003eThe element is everything between the tags and the tags themselves.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSome tags are self-closing like the line break element \u003ccode\u003e\u0026lt;br\u0026gt;\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eElements can have IDs and classes to aid the browser in finding specific tags.\n\n\u003cul\u003e\n\u003cli\u003eMust begin with a letter A-Z or a-z.\u003c/li\u003e\n\u003cli\u003eCan be followed by: letters (\u003ccode\u003eA-Za-z\u003c/code\u003e), digits (\u003ccode\u003e0-9\u003c/code\u003e), hyphens (\u003ccode\u003e-\u003c/code\u003e), and underscores (\u003ccode\u003e_\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003eIDs \u003cstrong\u003ecan\u003c/strong\u003e only be used once per page, e.g.: \u003ccode\u003e\u0026lt;div id=\"this-special-div\"\u0026gt;\u0026lt;/div\u0026gt;\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eClasses can be used as many times as you want, e.g.: \u003ccode\u003e\u0026lt;div class=\"a-less-special-div\"\u0026gt;\u0026lt;/div\u0026gt;\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eElements nested inside other elements are called children.\n\n\u003cul\u003e\n\u003cli\u003eChildren inherit attributes from their parents.\u003c/li\u003e\n\u003cli\u003eDon't nest everything. \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eElements next to one another are siblings.\n\n\u003cul\u003e\n\u003cli\u003eSiblings do not inherit from one another but are important for selecting in CSS.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHere is an example of element relations:\n\u003ccode\u003ehtml\n\u0026lt;div\u0026gt;  \u0026lt;!-- the parent element --\u0026gt;\n  \u0026lt;p\u0026gt;\u0026lt;/p\u0026gt;  \u0026lt;!-- the first sibling element/the first child--\u0026gt;\n  \u0026lt;p\u0026gt;\u0026lt;/p\u0026gt;  \u0026lt;!-- the second sibling element/the second child --\u0026gt;\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2\u003eCSS Basics\u003c/h2\u003e\n\n\u003cp\u003eCascading Style Sheets, or CSS, is a language created to style an HTML document by telling the browser how specific elements should look. CSS does this by selecting elements based on their tag, ids, classes, or all of the above. The reason for CSS is the separation of concerns. You want HTML only to be concerned with how it displays and demarcates information, and we let CSS worry about how to make that information look pretty.\u003c/p\u003e\n\n\u003ch2\u003eCSS selectors\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eThey select elements to assign them styles.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e*\u003c/code\u003e (wildcard) selects every element.\u003c/li\u003e\n\u003cli\u003eAn element, such as \u003ccode\u003ediv\u003c/code\u003e, will select all elements of that type.\u003c/li\u003e\n\u003cli\u003eThey select an id like \u003ccode\u003e#some-id\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eClasses are selected like this \u003ccode\u003e.some-class\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eTo select all children elements of a parent do something like this \u003ccode\u003ediv p\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eTo select multiple different elements separate them by commas like this \u003ccode\u003ediv, p, a\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHere's an example of CSS styling:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"CSS\"\u003e* {\n  color: red;  /* color in CSS refers to font color */\n}  /* all elements will have red font */\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eMaking a Rainbow\u003c/h2\u003e\n\n\u003cp\u003eFirst off make sure you have \u003ca href=\"https://github.com/learn-co-curriculum/dsc-my-little-rainbow-lab\"\u003eforked\u003c/a\u003e and cloned this repo. Next, create a new branch, and switch to it; it's \u003ccode\u003egit checkout -b your_solution_branch_name\u003c/code\u003e in case you forgot.\u003c/p\u003e\n\n\u003cp\u003eIn that directory, you'll see three files. \u003ccode\u003eindex.html\u003c/code\u003e, \u003ccode\u003emain.css\u003c/code\u003e, and this \u003ccode\u003eREADME.md\u003c/code\u003e.  Open them in your text editor via your command line.  Also, open \u003ccode\u003eindex.html\u003c/code\u003e in your browser; if everything is working correctly you should see a white page. Good job!\u003c/p\u003e\n\n\u003ch2\u003eMaking the Divs Visible\u003c/h2\u003e\n\n\u003cp\u003eIf you use the inspector or look at the file in your text editor, you'll see that the basic file structure is there.  So why can't we see anything?!?!?  That's because the divs have no styling on them right now.  And that's because we never told the browser to include a CSS file that would apply any styles. \u003c/p\u003e\n\n\u003cp\u003eLet's fix this by adding the stylesheet to the \u003ccode\u003ehead\u003c/code\u003e like so,\n\u003ccode\u003eHTML\n\u0026lt;head\u0026gt;\n... \n  \u0026lt;link rel=\"stylesheet\" type=\"text/css\" href=\"main.css\"\u0026gt;\n...\n\u0026lt;/head\u0026gt;\n\u003c/code\u003e\nThe link is a self-closing tag that will create a relative path with the \u003ccode\u003ehref\u003c/code\u003e attribute.  A relative path means the browser knows that the \u003ccode\u003emain.css\u003c/code\u003e file is in the same place as \u003ccode\u003eindex.html\u003c/code\u003e.  The \u003ccode\u003ehead\u003c/code\u003e is a hidden part of the page that tells the browser where to find any other files it needs to display the page correctly, the \u003ccode\u003etitle\u003c/code\u003e for the tab, and any other possible important information.\u003c/p\u003e\n\n\u003cp\u003eNow if you refresh the \u003ccode\u003eindex.html\u003c/code\u003e page in your browser you should see an ugly black rainbow.  Gerd Jerb!\u003c/p\u003e\n\n\u003cp\u003eOkay so you've got the basic outline because in the \u003ccode\u003emain.css\u003c/code\u003e all the \u003ccode\u003ediv\u003c/code\u003e elements were selected and styled, but the colors are wrong because the default border color is black.  To fix this we need to learn a little bit more about colors, because while we could just set \u003ccode\u003ecolor: red;\u003c/code\u003e we should learn how to make colors without words.  We should just use numbers and not just any set of numbers, but numbers with base pair of 16 rather than base pair of 10 like we use every day.  These numbers are called hexadecimal numbers and we can use them to make colors.\u003c/p\u003e\n\n\u003ch2\u003eSome Stuff You Should Know About Hex Colors (and Web Colors in General).\u003c/h2\u003e\n\n\u003cp\u003eHex colors begin with \u003ccode\u003e#\u003c/code\u003e and are followed by, generally, 6 numbers, but some of these numbers are actually letters.  The lowest single-digit number in hex is 0 and the highest single-digit number is f.  This table might help to visualize what we mean by this.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eDecimal Numbers:      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16\nHexadecimal Numbers:  0, 1, 2, 3, 4, 5, 6, 7, 8, 9,  a,  b,  c,  d,  e,  f, 10\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eHex colors work by creating Red, Green, Blue (RGB) values.  Traditional RGB colors are on a scale of 0 to 255 for each of the three colors in the spectrum.  Hex colors are considered true colors since it can represent ~16 million colors, but your eye can only see 10 million of those.  So \u003ccode\u003e#000000\u003c/code\u003e translates to black since 0 reds, 0 green, 0 blues represents the absence of all colors, and \u003ccode\u003e#ffffff\u003c/code\u003e makes white since 255 reds, 255 greens, and 255 blues is the maximum of each of the colors.  \u003c/p\u003e\n\n\u003cp\u003eHex colors can be shortened to just three numbers when each RGB value is the same for each digit. So \u003ccode\u003e#11dd99\u003c/code\u003e can be written as \u003ccode\u003e#1d9\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eColoring the Rainbow\u003c/h2\u003e\n\n\u003cp\u003eTo get roygbiv onto our rainbow we'll need seven hex colors.\nRed: \u003ccode\u003e#f00\u003c/code\u003e; Orange: \u003ccode\u003e#ffa500\u003c/code\u003e; Yellow: \u003ccode\u003e#ff0\u003c/code\u003e; Green: \u003ccode\u003e#00bc3f\u003c/code\u003e; Blue: \u003ccode\u003e#06f\u003c/code\u003e; Indigo: \u003ccode\u003e#8a2be2\u003c/code\u003e; Violet: \u003ccode\u003e#d300c9\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eWith those colors, all we have to do next is select each div individually.  That is a perfect use for ids since they're meant to style one specific element only.  So that means we'll need to add an id for each div, so a logical name for each div would be the color that they have to be.  It could be something random, but good names make for semantic code. So let's give the outermost div the id red. We'll do this like so.\n\u003ccode\u003ehtml\n\u0026lt;div id=\"red\"\u0026gt;\n  ...\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd to give that id some CSS attributes we'll go into \u003ccode\u003emain.css\u003c/code\u003e, select the id, and mark its color as red like this.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e#red { /* this selects any elements with the red id */\n  border-top-color: #f00;\n}\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eSo to make sure the rainbow isn't so monochromatic you now need to repeat the above steps with the final six colors of the rainbow, and when you do you should have something like \u003ca href=\"http://i0.kym-cdn.com/photos/images/original/000/118/087/2468904593_6a7c692ab6.jpg\"\u003ethis\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWell done! In this lab, you independently modified HTML and CSS files in order to update a webpage. Specifically, you got some experience understanding and working with HTML IDs. You also used CSS to style HTML elements.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-my-little-rainbow-lab\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-my-little-rainbow-lab\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-my-little-rainbow-lab/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"my-little-rainbow"},{"id":142356,"title":"An Introduction to Web Scraping and Beautiful Soup","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-with-beautiful-soup\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-with-beautiful-soup/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g651d51a7eab1c59e4de369853e92aa5b"},{"id":142357,"title":"Web Scraping in Practice","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-in-practice\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-in-practice/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g9db9808ad152d529d1e4aee20fdb5e4c"},{"id":142358,"title":"Web Scraping - Lab","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g180801c59cfa6ead638e9d80d4765356"},{"id":142359,"title":"Scraping Images","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-scraping-images\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-scraping-images/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g47c1566bb77ecebd9102746e482a0f33"},{"id":142360,"title":"Scraping Concerts - Lab","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-scraping-concerts-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-scraping-concerts-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g8ebe2e754bd9198649c97c04e3c251ed"},{"id":142361,"title":"HTML, CSS and Web Scraping -  Recap","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-recap-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-recap-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you learned a lot about web pages and how to exploit their structure for your own web scraping purposes. Take this opportunity to briefly review some of the key takeaways from the section.\u003c/p\u003e\n\n\u003ch2\u003eHTML\u003c/h2\u003e\n\n\u003cp\u003eTo start this section, you investigated the basic structure of an HTML page and saw both the nested structure as well as some of the basic tags that you later leveraged for web scraping. This included \u003ccode\u003ea\u003c/code\u003e tags for links and \u003ccode\u003ediv\u003c/code\u003e tags which act as general containers for other HTML code blocks.\u003c/p\u003e\n\n\u003cp\u003eIf you are interested in taking a deeper dive into the world of HTML, check out the additional HTML lessons in the Appendix which cover more advanced topics. \u003c/p\u003e\n\n\u003ch2\u003eCSS\u003c/h2\u003e\n\n\u003cp\u003eAfter taking an initial look at HTML, you then saw the role CSS plays in styling a web page. You learned that HTML deals with content while CSS deals with style. There is certainly more you could learn regarding CSS but an important take away is that CSS selectors can also be used while web scraping. For example, you can select a tag with \u003ccode\u003eid\u003c/code\u003e or \u003ccode\u003eclass\u003c/code\u003e selector.\u003c/p\u003e\n\n\u003ch2\u003eBeautiful Soup\u003c/h2\u003e\n\n\u003cp\u003eAfter an initial exploration into web development, you then returned to Python and used the requests and Beautiful Soup packages in order to extract data from the web. This was also a great chance for you to practice your data wrangling skills as you often will have to navigate nested data structures and clean messy data, removing spaces, using regular expressions and converting data types. \u003c/p\u003e\n\n\u003ch2\u003ePrecautions\u003c/h2\u003e\n\n\u003cp\u003eRemember to practice caution when scraping websites. Surfing the web at superhuman speeds will get you banned from many domains and may violate the terms \u0026amp; conditions of many websites that require you to login. As such, there are a few considerations you should take along your way.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAre there terms and conditions for using the website?\u003c/li\u003e\n\u003cli\u003eTest your scraping bot on in small samples to debug before scaling to hundreds, thousands or millions of requests.\u003c/li\u003e\n\u003cli\u003eStart thinking about your IP address: getting blacklisted from a website is no fun. Consider using a VPN.\u003c/li\u003e\n\u003cli\u003eSlow your bot down! Add delays along the way with the time package. Specifically, time.sleep(seconds) adds wait time in a program.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eOther Scraping Tools\u003c/h2\u003e\n\n\u003cp\u003eWhile Beautiful Soup is a powerful go-to tool for scraping the web, remember that there are other tools such as Selenium and Scrapy that have their own advantages and disadvantages. While Beautiful Soup is apt to be your primary scraping tool, for now, it is worth noting that there are other options should you feel like you need additional resources such as interacting with dynamic javascript-based websites.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eThis was an exciting section delving into the world of web scraping! There's always a plethora of information to be mined from the web so go out there and get scraping!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-html-css-scraping-recap-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-html-css-scraping-recap-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-recap-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"html-css-and-web-scraping-recap-2"}]},{"id":15176,"name":"APPENDIX: Pandas","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"g1a2941a5c9ef258d6b0b19721c9976c9","items":[{"id":142362,"title":"Analyzing Macbeth with Pandas","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-analyzing-macbeth-project-pandas-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-analyzing-macbeth-project-pandas-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gb635039f7ee8dd492ce99900799212f5"}]},{"id":15177,"name":"APPENDIX: Functions","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"gc0c496e2627210e950e8da915ceffaa6","items":[{"id":142363,"title":"Functions Practice: Building a Calculator","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-building-a-calculator\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-building-a-calculator/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g3d6e153560e3074d5aa7eb387bad3d92"}]},{"id":15178,"name":"APPENDIX: No-SQL Databases","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"gf7bd8eb994415d280793a5420d7d4544","items":[{"id":142364,"title":"NoSQL Databases","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn about some of the various kinds of NoSQL databases, and their use cases.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain why NoSQL is useful\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eExplore real-world use cases of NoSQL databases\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy NoSQL?\u003c/h2\u003e\n\n\u003cp\u003eRelational databases are a cornerstone of a modern technology. They're reliable, dependable, and they seem to be pretty much everywhere. Since their invention at IBM by Edgar Codd in 1970, they've rapidly grown to be used all over the place. Their creation allowed companies to track, store, and analyze data in ways that simply couldn't be done before. For the majority of situations, they're a great choice. However, as technology has progressed into the era of internet and smartphones, we've run into many different sorts of data that aren't a natural fit for a relational format. Let's examine a few of these situations, and see why NoSQL might be a better choice. \u003c/p\u003e\n\n\u003cp\u003eLet's assume that we need to store chat logs between customer service and customers through a web interface. These chats could be very short, or very long -- some chats may only be 2 or 3 messages, while others may conceivably be in the hundreds or thousands. For each message in the chat, we want to store metadata associated with the message, so that we can know things like which party sent the message, the time it was sent, the time the other party read the message, etc. This is a great use case for a NoSQL database, because it would be a very poor fit for a relational database. For starters, each chat can be any size, meaning that we can't just clearly define a table that links which messages belong to which chat. If every chat had only five messages, we might be able to make it work, with a column for \"message 1\", \"message 2\", and so on -- but we can't, because a chat has no set size, and can always grow larger in the future. A relational database would also waste a lot of space storing redundant information, and getting all the messages in a chat could result in some nasty runtimes for our SQL query if this data was stored in separate tables in something like the third normal format. \u003c/p\u003e\n\n\u003cp\u003eFor each of the database types below, we'll explore some brief real-world examples of when they're the ideal choice. As with the example above, the common thread that runs among all of them is that they aren't a great fit for a relational database. \u003c/p\u003e\n\n\u003ch2\u003eDocument Stores\u003c/h2\u003e\n\n\u003cp\u003eA \u003cstrong\u003e\u003cem\u003eDocument Store\u003c/em\u003e\u003c/strong\u003e is a database that stores records as unique documents in the database. These documents can be arbitrarily long, and can even contain other documents inside of them! The chat log example we saw above is a prime use case for a document store. In a document store, we could store each message and its accompanying metadata as a document, and then embed each of those documents in order in a chat document. In this way, we can easily access the data as needed. \u003c/p\u003e\n\n\u003cp\u003eIn these Document Stores, each document contains key-value pairs, with the actual data being stored in as the value. This makes Document Stores incredibly flexible, because each document can be unique. There is no constraint saying each document must have the same keys! This makes it great for working with data where we don't know what shape it will take (as we saw above, with chat logs that can be arbitrarily long or short), or perhaps when we don't know what data will be stored at all. This would be a problem in a relational database, because we would need to know what column the data belongs in before we could store it. With a Document Store, we can just create a key on the fly for the data that matters to us!\u003c/p\u003e\n\n\u003cp\u003eNote that while this flexibility makes it easy for us to store data on the fly, this also makes it harder for us to query data and get exactly what we need. Since each different document can potentially have its own \u003cstrong\u003e\u003cem\u003eSchema\u003c/em\u003e\u003c/strong\u003e, this means that we have to know what we are looking for. This also means that we have to be diligent in our naming conventions, because \u003ccode\u003echatLog\u003c/code\u003e is different than \u003ccode\u003eChatLog\u003c/code\u003e. This means that if we run a query across all documents to get all data with the key \u003ccode\u003echatLog\u003c/code\u003e, we'll completely miss any data where they key is written as \u003ccode\u003eChatLog\u003c/code\u003e!\u003c/p\u003e\n\n\u003ch5\u003ePopular  Document Store Databases: MongoDB and Couchbase\u003c/h5\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/mongo-db-logo.png\" height=\"60%\" width=\"60%\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/couchbase-logo.png\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eKey-Value Stores and Column Stores\u003c/h2\u003e\n\n\u003cp\u003eAlthough \u003cstrong\u003e\u003cem\u003eKey-Value Stores\u003c/em\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003cem\u003eColumn Stores\u003c/em\u003e\u003c/strong\u003e are two different kinds of databases, they both store their data in ways you're already familiar with, because you've seen them in Python and Pandas!  \u003cstrong\u003e\u003cem\u003eKey-Value Stores\u003c/em\u003e\u003c/strong\u003e work exactly like they sound -- just like a Python dictionary! They are powered by a hash table under the hood, and to access data, you just pass in the unique key for the value that you want. \u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eColumn Stores\u003c/em\u003e\u003c/strong\u003e work a bit more like how pandas stores data under the hood. Recall that in pandas, a DataFrame is stored as a collection of \u003ccode\u003eSeries\u003c/code\u003e objects, with each column getting it's own series. The same general principle is at work for Column Stores -- each column is stored separately, allowing for very fast reads when querying data. \u003c/p\u003e\n\n\u003ch5\u003ePopular Key-Value Store Database: Amazon DynamoDB\u003c/h5\u003e\n\n\u003ch5\u003ePopular Column Store Database: Google BigTable\u003c/h5\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/bigtable.png\" height=\"60%\" width=\"60%\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/dynamodb.png\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eGraph Databases\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eGraph Databases\u003c/em\u003e\u003c/strong\u003e are based on the idea of the kind of graphs you might have seen in higher-level math classes -- the kind that are made up of \u003cstrong\u003e\u003cem\u003eNodes\u003c/em\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003cem\u003eEdges\u003c/em\u003e\u003c/strong\u003e. These sorts of databases excel at storing data where there are multiple associations between the entities stored in the database. The most obvious use case here is social media. Think for a second about what it would take to represent all of your friends on Facebook or Twitter in a relational database. This would be a pretty gargantuan data engineering task! However, with Graph Databases, it's quite easy. In a graph database, every user is a node, and each connection between you and one of the nodes representing one of your Facebook friends is an edge. In each node, we can store an arbitrary amount of metadata, which allows us to store things like user information. These sorts of databases really shine when you need to ask questions about the connections between users or objects in a database. For instance, what if we wanted to determine who the greatest influencers are among the Data Science community on Facebook? Even thinking about how you might approach this problem in a relational database is a surefire way to get a headache, but this sort of query is quite easy in a Graph Database -- one approach might be to examine all the Nodes with a metadata tag listing their job as \"Data Scientist\", and then examine who has the most shared connections among this community. \u003c/p\u003e\n\n\u003ch5\u003ePopular Graph Databases: Neo4J and OrientDB\u003c/h5\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/neo4j-logo.png\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/orientdb-logo.png\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eRDDs and Big Data\u003c/h2\u003e\n\n\u003cp\u003eThe Term \"RDD\" is short for \u003cstrong\u003e\u003cem\u003eResilient Distributed Dataset\u003c/em\u003e\u003c/strong\u003e, and it's the backbone behind all the fuss surrounding \"Big Data\". The most popular platforms that support RDDs are Hadoop and Spark, which are related to one another. Spark is built on top of Hadoop and allows users a cleaner, faster way of dealing with distributed datasets. A \u003cem\u003eResilient Distributed Dataset\u003c/em\u003e is a collection of an arbitrary number of server clusters that share a full dataset distributed between them. With multiple servers comes multiple opportunities for things like server failures, and our dataset is no good if we have no guarantee that part of our dataset might be missing when we go to query for it. Relational databases are stored on a single server, which means that when the server is down, there's no doing anything until it comes back up. However, what if our Hadoop cluster contains 100 servers, and 2 are down when we write our query?  Without a way of making sure our RDD is \u003cstrong\u003e\u003cem\u003eFault Tolerant\u003c/em\u003e\u003c/strong\u003e, we could get incorrect information back because we think we've queried the entire dataset, but don't realize that two servers weren't up to contribute their data to the query. The way that RDDs like Hadoop and Spark deal with this is by chopping the data into different labeled blocks, and then storing multiple different backups of each block across all the different server clusters. For example, let's say that we've divided our dataset into blocks labeled, A, B, and C. Server 1 will host block A, but will also contain a backup of block B, and a backup of Block C, in that order. Server 2 will host Block B, but will contain backups of Block B and Block C, while Server 3 will host C first and contain backups of A and B. When things are working smoothly, Server 1 will run the query passed only on block A, Server 2 on Block B, etc. If Server B goes down, then our query will run on Blocks A and C because of Servers 1 and 3 first, and then the backup will kick in and Server 1 will then run the query on Block B. \u003c/p\u003e\n\n\u003cp\u003eIf you've never worked with RDDs before, this probably sounds slow and unnecessarily redundant. On small or normal-sized datasets, you're absolutely right. However, in this day and age, there has been a massive explosion in the amount of data created and stored every day. When working with truly \u003cem\u003eBig Data\u003c/em\u003e, the distributed architecture provides massive speedups to query times by distributing the workload across multiple servers. \u003c/p\u003e\n\n\u003cp\u003eAs an example, let's pretend that you're a Data Scientist for a major retailer that sells everything under the sun at discount prices -- we'll call this company WallMart. At the end of every day, your boss wants to know the total number of sales in each department. If your data was stored in a relational database, this would mean executing a query on a single, truly massive relational database, which can only work as fast as its processor allows. Each query would have to go through trillions of rows to find what it needs, aggregate the sales for each category, and then return the answer. Running this query on a traditional relational database would likely take days, or even weeks! \u003c/p\u003e\n\n\u003cp\u003eHowever, this would be a very different story with an RDD like Hadoop or Spark. Instead of running this on a single machine, we can just put a small server in each store location to keep track of all that store's data and transactions. When we need to run a query, our distributed system will ask each store's server to get the total number of sales for each department \u003cem\u003esimultaneously\u003c/em\u003e. For a single store, this is a much smaller query, so it will run quite quickly. Then, once we have the totals for each department from each store, we can just combine them together into grand totals for each, getting us the answer we needed in seconds instead of days! The idea of having each server run some query or function at the same time, and then combining the results is based on the idea of \u003cstrong\u003e\u003cem\u003eMapReduce\u003c/em\u003e\u003c/strong\u003e, which is the secret sauce behind RDDs. When we ask each server to run the function or query at the same time, this is the \"Map\" step. When we combine the results from each server into a single aggregate, this is the \"Reduce\" step. \u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/hadoop.png\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/spark.png\" height=\"10%\" width=\"10%\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned about the various sorts of NoSQL Databases in the market today. We dug into the similarities and differences between them all, and also looked at a few examples where a NoSQL Database is a more natural fit for storing data than a traditional relational database. \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-nosql-databases\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-nosql-databases\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"nosql-databases"},{"id":142365,"title":"NoSQL Databases - Quiz","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"gd41d8cd98f00b204e9800998ecf8427e","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"","exportId":"g61d59a3fd776ba17a8e919888067e79e"}]},{"id":15179,"name":"APPENDIX: XML","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"g2645710a08ace6e2288d2e2c72a63c3e","items":[{"id":142366,"title":"XML","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-xml-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-xml-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g7108ac7cf72ef11ca61c7370b34a047f"},{"id":142367,"title":"XML - Lab","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-xml-lab-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-xml-lab-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g63db0a41b1f88c8fd664fba98a0d5795"}]},{"id":15180,"name":"APPENDIX: More HTML and Scraping","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"g7b4585188ab8af1c159aeb91df69da29","items":[{"id":142368,"title":"HTML5 Semantic Elements","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/html5-semantic-elements-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/html5-semantic-elements-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou've seen several HTML tags such as \u003ccode\u003ehead\u003c/code\u003e, \u003ccode\u003ebody\u003c/code\u003e, \u003ccode\u003etitle\u003c/code\u003e, and \u003ccode\u003ep\u003c/code\u003e which help organize the various sections of a webpage. The arbitrary container element to organize other pieces of HTML is a \u003ccode\u003ediv\u003c/code\u003e. While flexible and versatile, too many \u003ccode\u003ediv\u003c/code\u003e tags make an HTML document look cluttered and confusing. Even when you identify or classify them with specific names, it's a lot to keep track of. It would be clearer for both developers and browsers to use more descriptive HTML elements to arrange content. That's where semantic elements come in. They allow you to say, \"this isn't \u003cem\u003ejust\u003c/em\u003e a division of text, it's a \u003cem\u003eheader\u003c/em\u003e.\" In this lesson, you'll learn more about these \u003cem\u003esemantic\u003c/em\u003e elements.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the historical reasoning behind semantic elements\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDemonstrate HTML5 semantic element use\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eExplain the Historical Reasoning Behind Semantic Elements\u003c/h2\u003e\n\n\u003cp\u003eWhen developers first began defining containers to structure HTML, they had only\none generic element available to them: the \u003ccode\u003ediv\u003c/code\u003e. Creating complex page layouts\nthen required dozens of \u003ccode\u003ediv\u003c/code\u003e elements that were often difficult to organize or\nlocate within the code. HTML authors needed a way to distinguish one \u003ccode\u003ediv\u003c/code\u003e from another,\nwhich led to \u003ccode\u003eid\u003c/code\u003e and \u003ccode\u003eclass\u003c/code\u003e attributes on elements being misused in an attempt\nto communicate what the \u003ccode\u003ediv\u003c/code\u003e was doing. For example, a document usually has\nonly one header, so it seemed sensible to write \u003ccode\u003ediv id=\"header\"\u003c/code\u003e as a way to\nsay something stronger than, \"this is a text division.\" Developers wanted to\nsay, \"this is a special division of introduction,\" but lacked the specific language\nto express it. They wanted those sections to have a \u003cem\u003esemantic meaning\u003c/em\u003e (more on that later). But the\nHTML language simply didn't have the ability to meet this need.\u003c/p\u003e\n\n\u003cp\u003eNevertheless, many HTML authors\nthought that this was a good idea and an informal standard sprang up around\nadding \u003ccode\u003eid\u003c/code\u003e attributes on elements to express their \"semantic meaning.\"\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;div id=\"header\"\u0026gt;\n  \u0026lt;div class=\"wrapper\"\u0026gt;...\u0026lt;/div\u0026gt;\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWhen the W3C (the organization that oversees the specifications for HTML and\nCSS) started writing the specification for HTML5 they wanted to create new\nelements that would eliminate the need to label so many \u003ccode\u003ediv\u003c/code\u003e elements. The\ngoals were to make the code more readable for developers and more descriptive\nfor browsers. It turned out that many developers were already using the same\nnames to label their elements, such as \u003ccode\u003eid=\"header\"\u003c/code\u003e, \u003ccode\u003eid=\"footer\"\u003c/code\u003e, \u003ccode\u003eid=\"nav\"\u003c/code\u003e,\n\u003ccode\u003eclass=\"article\"\u003c/code\u003e, etc. So HTML5 provided semantic elements that explicitly\ndescribed those functions for developers to use instead.\u003c/p\u003e\n\n\u003cp\u003eWe once used to have to identify a \u003ccode\u003ediv\u003c/code\u003e as our header section.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;div id=\"header\"\u0026gt;...\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNow we use the \u003ccode\u003eheader\u003c/code\u003e element.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;header\u0026gt;\u0026lt;/header\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWhy do we call these \u003cem\u003esemantic\u003c/em\u003e elements? Semantic elements are elements that\nwe use when the content within the element all has the same related \u003cem\u003emeaning\u003c/em\u003e.\nIn our \u003ccode\u003eheader\u003c/code\u003e example above, all the content we would put within the \u003ccode\u003eheader\u003c/code\u003e\nelement would relate to introductory content, such as titles or navigation.\u003c/p\u003e\n\n\u003ch2\u003eDemonstrate HTML5 Semantic Element Use\u003c/h2\u003e\n\n\u003cp\u003eLet's take a layout that uses \u003ccode\u003ediv\u003c/code\u003e elements and convert it to use semantic\nelements instead. This is the markup we begin with:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;div class=\"wrapper\"\u0026gt;\n  \u0026lt;div id=\"header\"\u0026gt;\n     \u0026lt;div id=\"nav\"\u0026gt;...\u0026lt;/div\u0026gt;\n  \u0026lt;/div\u0026gt;\n  \u0026lt;div id=\"main\"\u0026gt;\n    \u0026lt;div id=\"music\"\u0026gt;\n      \u0026lt;div id=\"rock\"\u0026gt;...\u0026lt;/div\u0026gt;\n      \u0026lt;div id=\"jazz\"\u0026gt;...\u0026lt;/div\u0026gt;\n    \u0026lt;/div\u0026gt;\n  \u0026lt;/div\u0026gt;\n  \u0026lt;div id=\"aside\"\u0026gt;...\u0026lt;/div\u0026gt;\n  \u0026lt;div id=\"footer\"\u0026gt;...\u0026lt;/div\u0026gt;\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNow we'll replace each instance of a \u003ccode\u003ediv\u003c/code\u003e with a semantic element that matches\nthe type of content we want it to contain.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;div class=\"wrapper\"\u0026gt;\n  \u0026lt;header\u0026gt;\n     \u0026lt;nav\u0026gt;...\u0026lt;/nav\u0026gt;\n  \u0026lt;/header\u0026gt;\n  \u0026lt;main\u0026gt;\n    \u0026lt;section id=\"music\"\u0026gt;\n      \u0026lt;article id=\"rock\"\u0026gt;...\u0026lt;/article\u0026gt;\n      \u0026lt;article id=\"jazz\"\u0026gt;...\u0026lt;/article\u0026gt;\n    \u0026lt;/section\u0026gt;\n  \u0026lt;/main\u0026gt;\n  \u0026lt;aside\u0026gt;...\u0026lt;/aside\u0026gt;\n  \u0026lt;footer\u0026gt;...\u0026lt;/footer\u0026gt;\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNotice that in cases where the content within the element is not semantically\nrelated or we have the need to create a generic box such as the \u003ccode\u003ewrapper\u003c/code\u003e, we\ncan still use \u003ccode\u003ediv\u003c/code\u003e elements as we please. As a developer, keep in mind that\nwhile these elements are intended for certain content, there are no hard rules\nabout how to configure them. You should feel comfortable configuring them in any\nway that makes the most sense to you and best suits your layout needs.\u003c/p\u003e\n\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.google.com/presentation/d/1tl0aB0EUOhLMi1Xr19UCAUTCY20FRqEDv-oDGg2cTkg/edit?usp=sharing\"\u003ePresentation Slides\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/embed/V28xLFEYaSQ\"\u003eHTML5 Semantic Elements Lecture Video\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://diveintohtml5.info/semantics.html#new-elements\"\u003eDive into HTML5 - Semantic Elements\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\"\u003eMDN - HTML - Element Reference\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIf the content within an element is all semantically related, it is best\npractice to use the appropriate HTML5 semantic element if one applies. This\ncleans up our code and makes it more readable for developers and more\ndescriptive to browsers. There are a variety of semantic elements you can use to\nstructure your content, and you can also still use \u003ccode\u003ediv\u003c/code\u003e elements to create\ngeneric boxes or grouping elements as needed.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"html5-semantic-elements-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"html5-semantic-elements-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/html5-semantic-elements-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"html5-semantic-elements-2"}]},{"id":15181,"name":"APPENDIX: More APIs","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"g132e00914e51c7061d7d229b36b270d1","items":[{"id":142371,"title":"Yelp API - Lab","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-yelp-api-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-yelp-api-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gb9549d7b1a0cdb3527c7518cab78c9c7"}]},{"id":15184,"name":"🏆 Milestones","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"g21268c8740bc90643c929b7235f766ee","items":[{"id":142379,"title":"Phase 1 Project","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a file upload","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-phase-1-project\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-phase-1-project\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-phase-1-project/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eYou've made it all the way through the first phase of this course - take a minute to celebrate your awesomeness!\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-phase-1-project/master/awesome.gif\" alt=\"awesome\"\u003e\u003c/p\u003e\n\u003cp\u003eNow you will put your new skills to use with a large end-of-Phase project! This project should take 20 to 30 hours to complete.\u003c/p\u003e\n\u003ch2\u003eProject Overview\u003c/h2\u003e\n\u003cp\u003eFor this project, you will use exploratory data analysis to generate insights for a business stakeholder.\u003c/p\u003e\n\u003ch3\u003eBusiness Problem\u003c/h3\u003e\n\u003cp\u003eMicrosoft sees all the big companies creating original video content and they want to get in on the fun. They have decided to create a new movie studio, but they don’t know anything about creating movies. You are charged with exploring what types of films are currently doing the best at the box office. You must then translate those findings into actionable insights that the head of Microsoft's new movie studio can use to help decide what type of films to create.\u003c/p\u003e\n\u003ch3\u003eThe Data\u003c/h3\u003e\n\u003cp\u003eIn the folder \u003ccode\u003ezippedData\u003c/code\u003e are movie datasets from:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.boxofficemojo.com/\"\u003eBox Office Mojo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.imdb.com/\"\u003eIMDB\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.rottentomatoes.com/\"\u003eRotten Tomatoes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.themoviedb.org/\"\u003eTheMovieDB\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.the-numbers.com/\"\u003eThe Numbers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIt is up to you to decide what data from this to use and how to use it. If you want to make this more challenging, you can scrape websites or make API calls to get additional data. If you are feeling overwhelmed or behind (e.g. struggled with the Phase 1 Code Challenge), we recommend you use only the following data files:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eimdb.title.basics\u003c/li\u003e\n\u003cli\u003eimdb.title.ratings\u003c/li\u003e\n\u003cli\u003ebom.movie_gross\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\u003cp\u003eThere are three deliverables for this project:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA \u003cstrong\u003eGitHub repository\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eA \u003cstrong\u003eJupyter Notebook\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eA \u003cstrong\u003enon-technical presentation\u003c/strong\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eReview the \"Project Submission \u0026amp; Review\" page in the \"Milestones Instructions\" topic for instructions on creating and submitting your deliverables. Refer to the rubric associated with this assignment for specifications describing high-quality deliverables.\u003c/p\u003e\n\u003ch3\u003eKey Points\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eYour analysis should yield three concrete business recommendations.\u003c/strong\u003e The ultimate purpose of exploratory analysis is not just to learn about the data, but to help an organization perform better. Explicitly relate your findings to business needs by recommending actions that you think the business (Microsoft) should take.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eCommunicating about your work well is extremely important.\u003c/strong\u003e Your ability to provide value to an organization - or to land a job there - is directly reliant on your ability to communicate with them about what you have done and why it is valuable. Create a storyline your audience (the head of Microsoft's new movie studio) can follow by walking them through the steps of your process, highlighting the most important points and skipping over the rest.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eUse plenty of visualizations.\u003c/strong\u003e Visualizations are invaluable for exploring your data and making your findings accessible to a non-technical audience. Spotlight visuals in your presentation, but only ones that relate directly to your recommendations. Simple visuals are usually best (e.g. bar charts and line graphs), and don't forget to format them well (e.g. labels, titles).\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eGetting Started\u003c/h2\u003e\n\u003cp\u003ePlease start by reviewing this assignment, the rubric at the bottom of it, and the \"Project Submission \u0026amp; Review\" page. If you have any questions, please ask your instructor ASAP.\u003c/p\u003e\n\u003cp\u003eNext, we recommend you check out \u003ca href=\"https://github.com/learn-co-curriculum/dsc-project-template\"\u003ethe Phase 1 Project Templates and Examples repo\u003c/a\u003e and use the MVP template for your project.\u003c/p\u003e\n\u003cp\u003eAlternatively, you can fork \u003ca href=\"https://github.com/learn-co-curriculum/dsc-phase-1-project\"\u003ethe Phase 1 Project Repository\u003c/a\u003e, clone it locally, and work in the \u003ccode\u003estudent.ipynb\u003c/code\u003e file. Make sure to also add and commit a PDF of your presentation to your repository with a file name of \u003ccode\u003epresentation.pdf\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003eProject Submission and Review\u003c/h2\u003e\n\u003cp\u003eReview the \"Project Submission \u0026amp; Review\" page in the \"Milestones Instructions\" topic to learn how to submit your project and how it will be reviewed. Your project must pass review for you to progress to the next Phase.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eThis project will give you a valuable opportunity to develop your data science skills using real-world data. The end-of-phase projects are a critical part of the program because they give you a chance to bring together all the skills you've learned, apply them to realistic projects for a business stakeholder, practice communication skills, and get feedback to help you improve. You've got this!\u003c/p\u003e","exportId":"gab20bd24660d821a3ce2deadf5bdae9e"},{"id":142380,"title":"Phase 1 Project - GitHub Repository URL","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cp\u003e\u003cspan\u003ePlease put the URL to your Phase 1 Project GitHub Repository here.\u0026nbsp;\u003c/span\u003e\u003c/p\u003e","exportId":"gfbd3769bb4906491f9ea1d00927ff811"},{"id":142378,"title":"Phase 1 Project Templates and Examples","type":"ExternalUrl","indent":1,"locked":false,"requirement":null,"completed":false,"content":"https://github.com/learn-co-curriculum/dsc-project-template"},{"id":142567,"title":"Phase 1 Project Checklist and Guidance","type":"ExternalUrl","indent":1,"locked":false,"requirement":null,"completed":false,"content":"https://docs.google.com/document/d/1ZFN9zle3-18Mtq2doEjMr3aUx2wCVySlQXzWuZiv_EY/edit?usp=sharing"},{"id":142377,"title":"Project Submission \u0026 Review (Online)","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-project-submissions-online\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-submissions-online\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-submissions-online/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this lesson, we review the requirements, submission, and review process for the Phase Projects.\u003c/p\u003e  \u003ch2\u003eObjectives\u003c/h2\u003e  \u003cp\u003eYou will be able to:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eCreate project deliverables that meet Flatiron School requirements\u003c/li\u003e \u003cli\u003eSubmit your project deliverables in Canvas\u003c/li\u003e \u003cli\u003ePrepare for your project review\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eSchedule Your Review ASAP\u003c/h2\u003e  \u003cp\u003e\u003cstrong\u003eReach out to an instructor immediately via Slack to let them know you've started your project and schedule your project review.\u003c/strong\u003e If you're not sure who to schedule with, please ask in your cohort channel in Slack.\u003c/p\u003e  \u003ch2\u003eCreate Your Project Deliverables\u003c/h2\u003e  \u003cp\u003eComplete the deliverables for your project, guided by the rubric at the bottom of the main project assignment. Keep in mind that the audience for these deliverables is not only your teacher, but also potential employers. Employers will look at your project deliverables to evaluate multiple skills, including coding, modeling, communication, and domain knowledge. You will want to polish these as much as you can, both during the course and afterwards.\u003c/p\u003e  \u003ch3\u003eGitHub Repository\u003c/h3\u003e  \u003cp\u003eYour GitHub repository is the public-facing version of your project that your instructors and potential employers will see - make it as accessible as you can. At a minimum, it should contain all your project files and a README.md file that summarizes your project and helps visitors navigate the repository.\u003c/p\u003e  \u003ch3\u003eJupyter Notebook\u003c/h3\u003e  \u003cp\u003eYour Jupyter Notebook is the primary source of information about your analysis. At a minimum, it should contain or import all of the code used in your project and walk the reader through your project from start to finish. You may choose to use multiple Jupyter Notebooks in your project, but you should have one that provides a full project overview as a point of entry for visitors.\u003c/p\u003e  \u003ch3\u003eNon-Technical Presentation\u003c/h3\u003e  \u003cp\u003eYour non-technical presentation is your opportunity to communicate clearly and concisely about your project and it's real-world relevance. The target audience should be people with limited technical knowledge who may be interested in leveraging your project. We recommend using Google Slides, PowerPoint or Keynote to create your presentation slides. You will then record yourself delivering the presentation.\u003c/p\u003e  \u003ch2\u003eSubmit Your Project\u003c/h2\u003e  \u003cp\u003eTo submit your project in Canvas, you will create and upload PDF versions of three project deliverables, then upload a recording of your video presentation. You will also submit the URL to your GitHub repository in a separate assignment.\u003c/p\u003e  \u003ch3\u003ePresentation Slides PDF Creation\u003c/h3\u003e  \u003col\u003e \u003cli\u003eExport your presentation as a PDF from the program in which you created it.\u003c/li\u003e \u003cli\u003eGive it a short descriptive file name (e.g. \u003ccode\u003epresentation.pdf\u003c/code\u003e).\u003c/li\u003e \u003cli\u003ePlace a copy of the PDF in your GitHub repository.\u003c/li\u003e \u003c/ol\u003e  \u003ch3\u003eGitHub Repository PDF Creation\u003c/h3\u003e  \u003col\u003e \u003cli\u003eNavigate to the root directory of your project repository on GitHub, using your browser (we recommend Google Chrome).\u003c/li\u003e \u003cli\u003eSave the webpage as a PDF using the browser's Print functionality (\u003ca href=\"https://www.wikihow.com/Save-a-Web-Page-as-a-PDF-in-Google-Chrome\"\u003eGoogle Chrome Save to PDF instructions\u003c/a\u003e)\u003c/li\u003e \u003cli\u003eGive it a short descriptive file name (e.g. \u003ccode\u003egithub.pdf\u003c/code\u003e).\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-project-submissions-online/master/repo_pdf.gif\" alt=\"Repository PDF Creation\"\u003e\u003c/p\u003e  \u003ch3\u003eJupyter Notebook PDF Creation\u003c/h3\u003e  \u003col\u003e \u003cli\u003eOpen your Notebook in your browser (we recommend Google Chrome).\u003c/li\u003e \u003cli\u003e\n\u003cstrong\u003eRun the Notebook from start to finish\u003c/strong\u003e so that your output is visible.\u003c/li\u003e \u003cli\u003eSave the page as a PDF using the browser's Print functionality (\u003ca href=\"https://www.wikihow.com/Save-a-Web-Page-as-a-PDF-in-Google-Chrome\"\u003eGoogle Chrome Save to PDF instructions\u003c/a\u003e)\u003c/li\u003e \u003cli\u003eGive it a short descriptive file name (e.g. \u003ccode\u003enotebook.pdf\u003c/code\u003e).\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003eIf you have difficulty creating a PDF version of your notebook, you can use \u003ca href=\"https://htmtopdf.herokuapp.com/ipynbviewer/\"\u003ethis tool\u003c/a\u003e instead. Set the ‘Results Format’ to “HTML + PDF”. Then click ‘View and Convert’. Once it’s done, you should see links to .html and .pdf versions above the ‘View and Convert’ button.\u003c/p\u003e  \u003ch3\u003ePDF Submission in Canvas\u003c/h3\u003e  \u003cp\u003eYou will need to submit all three PDF files as a single submission:\u003c/p\u003e  \u003col\u003e \u003cli\u003eClick \"Submit Assignment\" at the top of the \"Phase X Project\" assignment in the \"Milestones\" topic.\u003c/li\u003e \u003cli\u003eIn the \"File Upload\" box, click \"Choose File\" button to upload a single file.\u003c/li\u003e \u003cli\u003eClick the \"Add Another File\" link to upload an additional file.\u003c/li\u003e \u003cli\u003eRepeat Step 3 to upload one more file. After this is done, all three files should be uploaded.\u003c/li\u003e \u003cli\u003eHit the blue \"Submit Assignment\" button.\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-project-submissions-online/master/project_3pdf_submission.gif\" alt=\"Project PDF Submission\"\u003e\u003c/p\u003e  \u003ch3\u003ePresentation Recording and Submission\u003c/h3\u003e  \u003cp\u003eAfter you've submitted the PDF files for the project assignment, you will upload a recording of your presentation as a media comment on your submission:\u003c/p\u003e  \u003col\u003e \u003cli\u003eRecord your live presentation to a video file on your computer. We recommend using Zoom to record your live presentation to a local video file (\u003ca href=\"https://support.zoom.us/hc/en-us/articles/201362473-Local-recording\"\u003einstructions here\u003c/a\u003e). Video files must be under 500 MB and formatted as 3GP, ASF, AVI, FLV, M4V, MOV, MP4, MPEG, QT, or WMV.\u003c/li\u003e \u003cli\u003eClick \"Submission Details\" on the top right of the \"Phase X Project\" assignment in the \"Milestones\" topic.\u003c/li\u003e \u003cli\u003eClick \"Media Comment\" beneath the \"Add a Comment\" box on the right of the page.\u003c/li\u003e \u003cli\u003eClick \"Upload Media\" and \"Select Video File\" to upload your file.\u003c/li\u003e \u003cli\u003eThe thumbnail for your video will appear as a blue rectangle while Zoom processes your file - return to this page later to confirm that your recording uploaded successfully.\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-project-submissions-online/master/video_recording_submission.gif\" alt=\"Video Recording Submission\"\u003e\u003c/p\u003e  \u003ch3\u003eURL Submission in Canvas\u003c/h3\u003e  \u003cp\u003eThere is an additional Canvas assignment where you will just enter the URL for your project's GitHub repository. This is located in the \"Milestones\" topic in this course as \"Phase X Project - GitHub Repository URL.\"\u003c/p\u003e  \u003ch2\u003ePrepare For Project Review\u003c/h2\u003e  \u003cp\u003eProject reviews are focused on preparing you for technical interviews. Treat project reviews as if they were technical interviews, in both attitude and technical presentation \u003cem\u003e(sometimes technical interviews will feel arbitrary or unfair - if you want to get the job, commenting on that is seldom a good choice)\u003c/em\u003e.\u003c/p\u003e  \u003cp\u003eThe project review is comprised of a 45 minute 1:1 session with one of the instructors. During your project review, be prepared to:\u003c/p\u003e  \u003ch3\u003e1. Deliver your PDF presentation to a non-technical stakeholder.\u003c/h3\u003e  \u003cp\u003eIn this phase of the review (~10 mins) your instructor will play the part of a non-technical stakeholder that you are presenting your findings to. The presentation  should not exceed 5 minutes, giving the \"stakeholder\" 5 minutes to ask questions.\u003c/p\u003e  \u003cp\u003eIn the first half of the presentation (2-3 mins), you should summarize your methodology in a way that will be comprehensible to someone with no background in data science and that will increase their confidence in you and your findings. In the second half (the remaining 2-3 mins) you should summarize your findings and be ready to answer a couple of non-technical questions from the audience. The questions might relate to technical topics (sampling bias, confidence, etc) but will be asked in a non-technical way and need to be answered in a way that does not assume a background in statistics or machine learning. You can assume a smart, business stakeholder, with a non-quantitative college degree.\u003c/p\u003e  \u003ch3\u003e2. Go through the Jupyter Notebook, answering questions about how you made certain decisions. Be ready to explain things like:\u003c/h3\u003e \u003cpre\u003e\u003ccode\u003e* \"How did you pick the question(s) that you did?\"\u003cbr\u003e* \"Why are these questions important from a business perspective?\"\u003cbr\u003e* \"How did you decide on the data cleaning options you performed?\"\u003cbr\u003e* \"Why did you choose a given method or library?\"\u003cbr\u003e* \"Why did you select those visualizations and what did you learn from each of them?\"\u003cbr\u003e* \"Why did you pick those features as predictors?\"\u003cbr\u003e* \"How would you interpret the results?\"\u003cbr\u003e* \"How confident are you in the predictive quality of the results?\"\u003cbr\u003e* \"What are some of the things that could cause the results to be wrong?\" \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eThink of the first phase of the review (~30 mins) as a technical boss reviewing your work and asking questions about it before green-lighting you to present to the business team. You should practice using the appropriate technical vocabulary to explain yourself. Don't be surprised if the instructor jumps around or sometimes cuts you off - there is a lot of ground to cover, so that may happen.\u003c/p\u003e  \u003cp\u003eIf any requirements are missing or if significant gaps in understanding are uncovered, be prepared to do one or all of the following: * Perform additional data cleanup, visualization, feature selection, modeling and/or model validation * Submit an improved version * Meet again for another Project Review\u003c/p\u003e  \u003cp\u003eWhat won't happen: * You won't be yelled at, belittled, or scolded * You won't be put on the spot without support * There's nothing you can do to instantly fail or blow it\u003c/p\u003e  \u003ch2\u003eGrading\u003c/h2\u003e  \u003cp\u003eYour teacher will use the rubric at the bottom of the main project assignment to grade your project. In order to pass, you must properly submit your project and score \"Accomplished\" or \"Exemplary\" on nearly all rubric elements. You will receive a score of P (Pass) or NP (No Pass) - you must pass in order to move to the next phase with your cohort. Your teacher will grade your submission sometime after your review.\u003c/p\u003e  \u003ch2\u003eConclusion\u003c/h2\u003e  \u003cp\u003eThank you for your hard work on this project - you're going to do great! Remember that future employers will also look at your projects when deciding whether to hire you, so having complete, polished projects will help you tremendously not only to pass this assignment, but also to get the job you want after you graduate.\u003c/p\u003e  \u003cp\u003eIf you have any questions about the project submission or review process, don't hesitate to ask your teacher.\u003c/p\u003e","exportId":"project-submission-and-review-online"},{"id":142376,"title":"Blogging Overview","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-blogging-overview\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-blogging-overview\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-blogging-overview/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this lesson, we discuss how to write good blog posts that meet Flatiron School's requirements.\u003c/p\u003e  \u003ch2\u003eObjectives\u003c/h2\u003e  \u003cp\u003eThis lesson covers...\u003c/p\u003e  \u003cul\u003e \u003cli\u003eWhy blogging is valuable\u003c/li\u003e \u003cli\u003eTopics to blog about\u003c/li\u003e \u003cli\u003eWhat makes for a good blog post\u003c/li\u003e \u003cli\u003eHow to start your blog\u003c/li\u003e \u003cli\u003eFlatiron School blog requirements \u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eWhy Should I Blog?\u003c/h2\u003e  \u003cp\u003eBlogging has many benefits:\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003cstrong\u003eDevelop your written communication skills.\u003c/strong\u003e Your writing ability will be critical to your success when completing job applications and presenting your work to colleagues. Blogging is great practice for identifying and clearly communicating the most important points of any subject.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cstrong\u003eDemonstrate your talent to employers.\u003c/strong\u003e Potential employers will review your blog to determine whether to offer you an interview or a job. Some students have even been invited to interview or exempted from technical interviews based on their blogs.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cstrong\u003eStrengthen your knowledge.\u003c/strong\u003e Blogging helps you explore new topics, deepen your understanding, and crystallize what you've learned.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cstrong\u003eHelp your peers and the broader community.\u003c/strong\u003e Have you ever Googled a question you had and found the answer on a blog? Writing blog posts helps others who are following in your footsteps!\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eWhat Should I Blog About?\u003c/h2\u003e  \u003cp\u003eHere are some blog topic ideas:\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003cp\u003eWhy did you decide to learn data science?\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eDescribe how a DS technique works, when you might use it, and its strengths/weaknesses.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eSummarize an End of Phase Project by explaining your problem, the dataset, your methodology, and your results.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eDive into something that you want to learn more about, maybe because you find it challenging or it wasn't covered in the course.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eWrite a tutorial to help aspiring data scientists to implement a tool or method.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eFind an interesting data science paper and summarize why it is important. This can be a new paper from the past few months, or you can refer to \u003ca href=\"https://docs.google.com/spreadsheets/d/1UYmAT13AAknrOatzLeeAsN4tS7ENjn2fpJNGzOZ67rQ/edit?usp=sharing\"\u003ethis spreadsheet\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eWhat Does A Good Blog Post Look Like?\u003c/h2\u003e  \u003cp\u003eWe recommend you take a look at our \u003ca href=\"https://drive.google.com/drive/folders/1UBiRCRLzVP5CHU3PJNwoMZAe3ajUBm2a?usp=sharing\"\u003eblog templates\u003c/a\u003e and \u003ca href=\"https://docs.google.com/document/d/1eqL8Dsj7dH7s_MRnf_4-3kCiSz72POHTfb-sBRN5Zhs/edit?usp=sharing\"\u003eexamples\u003c/a\u003e to get an idea for what makes a blog post good.\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003cp\u003eStrike a balance between providing a meaningful investigation of your topic and being concise. Constrain the scope so it will be interesting and digestible in about 1000-3000 words (this is not a firm limit).\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\n\u003cp\u003eUse clear and consistent formatting to make your content accessible and professional-looking.\u003c/p\u003e  \u003cul\u003e \u003cli\u003eWhen presenting code, use code snippets instead of screenshots.\u003c/li\u003e \u003cli\u003eMake URLs into hyperlinks that are easy for readers to click into.\u003c/li\u003e \u003cli\u003eUse headings to provide structure and flow to your post.\u003c/li\u003e \u003c/ul\u003e\n\u003c/li\u003e \u003cli\u003e\u003cp\u003eCite and link to resources you used to write your post.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eHow Do I Start My Blog?\u003c/h2\u003e  \u003cp\u003eIf you already have a professional blog that you'd like to use for your data science content, you can add your posts to that. Otherwise, you will need to start a new blog. If you have a personal blog, you should avoid using it for this purpose so that you can continue using it for personal content without worrying about how it might be perceived by potential employers.\u003c/p\u003e  \u003cp\u003eThere are multiple blogging platforms to choose from that make it easy to start a blog, here are some of our favorites:\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003ca href=\"https://www.blogger.com/\"\u003eBlogger\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"https://dev.to/\"\u003edev.to\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"https://pages.github.com/\"\u003eGitHub Pages\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"https://medium.com/\"\u003eMedium\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"https://wordpress.com/\"\u003eWordpress\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eDifferent platforms have different pros and cons, so do a little research to decide what is best for you.\u003c/p\u003e  \u003ch2\u003eBlog Requirements\u003c/h2\u003e  \u003cp\u003eTo succeed in your career transition and graduate from Flatiron School, you must complete the following activities. These requirements are designed to give you the best opportunity to deepen your knowledge, practice communication skills, and showcase yourself to potential employers.\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003cp\u003eSet up a publicly accessible blog \u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003ePublish at least four blog posts on it, including \u003cstrong\u003eone per Phase for Phases 1-4\u003c/strong\u003e\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\n\u003cp\u003eSubmit URLs to your posts \u003cstrong\u003eby the end of each Phase\u003c/strong\u003e in the Blog Post assignments\u003c/p\u003e  \u003cul\u003e \u003cli\u003eThese assignments are located in the Milestones topics of the Phase 1-4 Canvas courses\u003c/li\u003e \u003c/ul\u003e\n\u003c/li\u003e \u003cli\u003e\n\u003cp\u003eWrite blog posts that...\u003c/p\u003e  \u003cul\u003e \u003cli\u003eDiscuss data science topics\u003c/li\u003e \u003cli\u003eAre composed primarily of original material you wrote\u003c/li\u003e \u003cli\u003eInclude proper attribution\u003c/li\u003e \u003cli\u003eHave high-quality content and formatting\u003c/li\u003e \u003cli\u003eAre something you would proudly show to a potential employer\u003c/li\u003e \u003c/ul\u003e\n\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eAfter you submit your blog posts, your teacher will grade them as Complete or Incomplete. Your blogs must all be submitted on time and receive Complete grades in order to continue through your program.\u003c/p\u003e  \u003cp\u003e✨Have fun and happy blogging!✨\u003c/p\u003e","exportId":"blogging-overview"},{"id":142382,"title":"Phase 1 Blog Post","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cp\u003e\u003cspan\u003ePlease put the URL to your Phase 1 Blog Post here. \u003c/span\u003e\u003cspan\u003eRefer to the \u003c/span\u003e\u003ca title=\"Blogging Overview\" href=\"pages/blogging-overview\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/blogging-overview\" data-api-returntype=\"Page\"\u003eBlogging Overview\u003c/a\u003e\u003cspan\u003e to learn about how to write good blog posts that\u003c/span\u003e\u003cspan style=\"font-family: inherit; font-size: 1rem;\"\u003e meet Flatiron School’s requirements.\u003c/span\u003e\u003c/p\u003e","exportId":"gbbcf2e788c36e5a83c9fd1a7e0407d5c"}]}],"pages":[{"exportId":"pandas-groupby","title":"Pandas Groupby","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-groupby\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-groupby/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll learn how to use the \u003ccode\u003e.groupby()\u003c/code\u003e method in Pandas to summarize datasets.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse groupby methods to aggregate different groups in a dataframe\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eUsing \u003ccode\u003e.groupby()\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003eConsider an example of the titanic DataFrame:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-pandas-groupby/master/images/titanic_1.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eDuring the Exploratory Data Analysis phase, one of the most common tasks you'll want to do is split the dataset into subgroups and compare them to see if you can notice any trends.  For instance, you may want to group the passengers together by gender or age. You can do this by using the \u003ccode\u003e.groupby()\u003c/code\u003e method built-in to pandas DataFrames. \u003c/p\u003e\n\n\u003cp\u003eTo group passengers by gender, you would type:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.groupby('Sex')\n\ndf.groupby(df['Sex'])\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that this alone will not display a result -- although you have split the dataset into groups, you don't have a meaningful way to display information until you chain an \u003cstrong\u003e\u003cem\u003eAggregation Function\u003c/em\u003e\u003c/strong\u003e onto the groupby.  This allows you to compute summary statistics!\u003c/p\u003e\n\n\u003cp\u003eYou can quickly use an aggregation function by chaining the call to the end of the \u003ccode\u003e.groupby()\u003c/code\u003e method.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.groupby('Sex').sum()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe code above returns displays the following DataFrame:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-pandas-groupby/master/images/titanic_2.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can use aggregation functions to quickly help us compare subsets of our data.  For example, the aggregate statistics displayed above allow you to quickly notice that there were more female survivors overall than male survivors.\u003c/p\u003e\n\n\u003ch2\u003eAggregation functions\u003c/h2\u003e\n\n\u003cp\u003eThere are many built-in aggregate methods provided for you in the \u003ccode\u003epandas\u003c/code\u003e package, and you can even write and apply your own. Some of the most common aggregate methods you may want to use are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003e.min()\u003c/code\u003e: returns the minimum value for each column by group\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.max()\u003c/code\u003e: returns the maximum value for each column by group\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.mean()\u003c/code\u003e: returns the average value for each column by group\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.median()\u003c/code\u003e: returns the median value for each column by group\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.count()\u003c/code\u003e: returns the count of each column by group\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eYou can also see a list of all of the built-in aggregation methods by creating a grouped object and then using tab completion to inspect the available methods:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003egrouped_df = df.groupby('Sex')\ngrouped_df.\u0026lt;TAB\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis will display the following output:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eIn [26]: grouped_df.\u0026lt;TAB\u0026gt;\ngb.agg        gb.boxplot    gb.cummin     gb.describe   gb.filter     gb.get_group  gb.height     gb.last       gb.median     gb.ngroups    gb.plot       gb.rank       gb.std        gb.transform\ngb.aggregate  gb.count      gb.cumprod    gb.dtype      gb.first      gb.groups     gb.hist       gb.max        gb.min        gb.nth        gb.prod       gb.resample   gb.sum        gb.var\ngb.apply      gb.cummax     gb.cumsum     gb.fillna     gb.gender     gb.head       gb.indices    gb.mean       gb.name       gb.ohlc       gb.quantile   gb.size       gb.tail       gb.weight\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis is a comprehensive list of all built-in methods available to grouped objects. Note that some are aggregation methods, while others, such as \u003ccode\u003egb.fillna()\u003c/code\u003e, allow us to fill missing values to individual groups independently.  \u003c/p\u003e\n\n\u003ch2\u003eMultiple groups\u003c/h2\u003e\n\n\u003cp\u003eYou can also split data into multiple different levels of groups by passing in an array containing the name of every column you want to group by -- for instance, by every combination of both \u003ccode\u003eSex\u003c/code\u003e and \u003ccode\u003ePclass\u003c/code\u003e.    \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.groupby(['Sex', 'Pclass']).mean()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe code above would return the following DataFrame:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-pandas-groupby/master/images/titanic_3.png\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eSelecting information from grouped objects\u003c/h2\u003e\n\n\u003cp\u003eSince the resulting object returned is a DataFrame, you can also slice a selection of columns you're interested in from the DataFrame returned. \u003c/p\u003e\n\n\u003cp\u003eThe example below demonstrates the syntax for returning the mean of the \u003ccode\u003eSurvived\u003c/code\u003e class for every combination of \u003ccode\u003eSex\u003c/code\u003e and \u003ccode\u003ePclass\u003c/code\u003e:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.groupby(['Sex', 'Pclass'])['Survived'].mean()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe code above returns the following DataFrame:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-pandas-groupby/master/images/titanic_4.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe above example slices by column, but you can also slice by index. Take a look:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003egrouped = df.groupby(['Sex', 'Pclass'])['Survived'].mean()\nprint(grouped['female'])\n\nprint(grouped['female'][1])\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that you need to provide only the value \u003ccode\u003efemale\u003c/code\u003e as the index, and are returned all the groups where the passenger is female, regardless of the \u003ccode\u003ePclass\u003c/code\u003e value. The second example shows the results for female passengers with a 1st-class ticket. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you learned about how to split a DataFrame into subgroups using the \u003ccode\u003e.groupby()\u003c/code\u003e method. You also learned to generate aggregate views of these groups by applying built-in methods to a groupby object.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-pandas-groupby\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-pandas-groupby\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-pandas-groupby/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"html-introduction","title":"HTML Introduction","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-introduction\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-introduction/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eHTML, or HyperText Markup Language, is a markup language that describes the\nstructure and semantic meaning of web pages. Web browsers, such as Mozilla\nFirefox, Internet Explorer, and Google Chrome interpret the HTML code and use\nit to render output. Unlike Python, JavaScript and other programming languages,\nmarkup languages like HTML don't have any logic behind them. Instead, they\nsimply surround the content to convey structure and meaning.\u003c/p\u003e\n\n\u003cp\u003eEvery web page you've ever visited is structured using HTML code. Being able to\nread and understand an HTML document is an incredibly useful tool in a\ndata scientist's toolbox.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain what HTML is and why it's important in the context of web development\u003c/li\u003e\n\u003cli\u003eCompare and contrast HTML tags\u003c/li\u003e\n\u003cli\u003eCreate an HTML document with appropriate tags\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eHTML Syntax\u003c/h2\u003e\n\n\u003cp\u003eHTML makes use of \u003cstrong\u003etags\u003c/strong\u003e which are interpreted by web browsers to affect how content is displayed. The \u003ccode\u003ep\u003c/code\u003e tag to define a paragraph is shown below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;p\u0026gt;Hello World\u0026lt;/p\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eElements, like the \u003ccode\u003ep\u003c/code\u003e tags above, won't be displayed in the browser. Technologists might say that\nthe tags \"affect how the content is rendered by the browser.\" \u003c/p\u003e\n\n\u003cp\u003eYou can also alter any number of attributes inside of the opening tags. For\nexample, the \u003ccode\u003ea\u003c/code\u003e element, which is used for links, has an \u003ccode\u003ehref\u003c/code\u003e attribute to\nspecify the destination address of the link. If you wanted to link to\n\u003ca href=\"http://www.flatironschool.com\"\u003ewww.flatironschool.com\u003c/a\u003e, you could do so as follows:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;a href=\"http://www.flatironschool.com\"\u0026gt;Flatiron School\u0026lt;/a\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis would render as:\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://www.flatironschool.com\"\u003eFlatiron School\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can also nest elements inside of each other. To have a link displayed as a\nseparate paragraph, we could nest an \u003ccode\u003ea\u003c/code\u003e element inside of a \u003ccode\u003ep\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;p\u0026gt;This \u0026lt;a href=\"http://www.google.com\"\u0026gt;link\u0026lt;/a\u0026gt; will be a part of a separate paragraph.\u0026lt;/p\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eBasic HTML Document Structure\u003c/h2\u003e\n\n\u003cp\u003eAll HTML documents begin with a \"doctype declaration\" tag, which tells the web\nbrowser which version of HTML to use. HTML is a language that is currently\nevolving — just like English. When you open a novel such as \"Romeo and Juliet,\" your\nexpectation is that the \"doctype\" is \"Elizabethan English.\" In the same way\n\"Elizabethan English\" has changed to a more modern form, HTML 1.0 was\n\u003cem\u003eessentially\u003c/em\u003e the same as modern HTML5 but had some tags that are no longer used\nand was lacking some tags often used today.\u003c/p\u003e\n\n\u003cp\u003eSince it's not wrapping any content, the doctype declaration doesn't require a\nclosing tag. To use HTML5, the current up-to-date version, you can simply\ndeclare \u003ccode\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNext, you add an opening and closing \u003ccode\u003ehtml\u003c/code\u003e tag. This tells the web browser to\ninterpret everything inside the tags as HTML code.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\n\u0026lt;html\u0026gt;\n\n\n\u0026lt;/html\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eEvery HTML page is made up of two primary sections: a \u003ccode\u003ehead\u003c/code\u003e and a \u003ccode\u003ebody\u003c/code\u003e. The\n\u003ccode\u003ehead\u003c/code\u003e element contains metadata about the HTML document and other information\nfor the browser, while the \u003ccode\u003ebody\u003c/code\u003e element contains the actual content.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\n\u0026lt;html\u0026gt;\n    \u0026lt;head\u0026gt;\n        \u0026lt;!-- metadata about the HTML document as a whole --\u0026gt;\n\n    \u0026lt;/head\u0026gt;\n\n    \u0026lt;body\u0026gt;\n        \u0026lt;!-- content of our page will be here! --\u0026gt;\n\n    \u0026lt;/body\u0026gt;\n\u0026lt;/html\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eComments\u003c/h2\u003e\n\n\u003cp\u003eLet's also take a brief moment to recognize how to add comments into an HTML\ndocument.  These won't get rendered to the browser at all: they're just helpful\nnotes for the author.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;!-- NYC Pizza is world-famous, cheap, and loved by both vermin and human-like! --\u0026gt;\n\u0026lt;p\u0026gt;Top 5 Pizza Places in NYC\u0026lt;/p\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eCommon HTML Elements\u003c/h2\u003e\n\n\u003cp\u003eYou've already looked at some common HTML elements, such as \u003ccode\u003ea\u003c/code\u003e and \u003ccode\u003ep\u003c/code\u003e. Let's\ntake a look at some more HTML elements.\u003c/p\u003e\n\n\u003ch2\u003eHeaders\u003c/h2\u003e\n\n\u003cp\u003eHTML gives us access to different header elements, ranging from \u003ccode\u003eh1\u003c/code\u003e to \u003ccode\u003eh6\u003c/code\u003e,\nwith \u003ccode\u003eh1\u003c/code\u003e being the largest and \u003ccode\u003eh6\u003c/code\u003e being the smallest.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;h1\u0026gt;Dogs!\u0026lt;/h1\u0026gt;\n\u0026lt;h3\u0026gt;Why Dogs are Great\u0026lt;/h3\u0026gt;\n\n\u0026lt;h6\u0026gt;Different Breeds\u0026lt;/h6\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn addition to changing how the text is displayed, search engines use headers\nto help determine what a web page is about. Remember when\nyou provide \u003cem\u003esemantic\u003c/em\u003e markup, machines can infer the \"main points\" of a page. A\nwell structured article will generally have its principal arguments bracketed\nby low-number header tags -- this very document does exactly that!\u003c/p\u003e\n\n\u003ch2\u003eImages\u003c/h2\u003e\n\n\u003cp\u003eYou can embed images on our web pages using the \u003ccode\u003eimg\u003c/code\u003e element. The \u003ccode\u003eimg\u003c/code\u003e element\ndoesn't have a closing tag. The \u003ccode\u003esrc\u003c/code\u003e attribute tells the browser where to find\nthe image. The \u003ccode\u003ealt\u003c/code\u003e attribute will be displayed if an image can't be loaded,\nand also describes the image to search engines.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003ealt\u003c/code\u003e tag presents a moment to talk about an important principle behind \u003ca href=\"https://webfoundation.org/about/vision/history-of-the-web/\"\u003eTim\nBerners-Lee's vision for the Web\u003c/a\u003e: it is \u003cem\u003einclusive\u003c/em\u003e. If you're using assistive\ntechnologies because you have a sight impairment, it's helpful to know what's\nbeing displayed. If you're in a remote community where internet access is\nexpensive, you might choose to disable images and only pay to download those\nwhich you \u003cem\u003eabsolutely need\u003c/em\u003e. So while an \u003ccode\u003eimg\u003c/code\u003e will inject an image and \"work,\"\nhonoring the Web's vision for openness and inclusivity requires that you provide\nthe \u003ccode\u003ealt\u003c/code\u003e tag as well.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e\u0026lt;img src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-html-introduction/master/URL_TO_IMAGE\" alt=\"Picture of a Dog\"\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2\u003eLists\u003c/h2\u003e\n\n\u003cp\u003eSome other useful HTML elements are lists. You can make bulleted, or unordered\nlists, using opening and closing \u003ccode\u003eul\u003c/code\u003e tags. Inside, you can nest a \u003ccode\u003eli\u003c/code\u003e, or\n\"list item\" element for each item on our list.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;h5\u0026gt;My Favorite Things in No Particular Order\u0026lt;/h5\u0026gt;\n\u0026lt;ul\u0026gt;\n    \u0026lt;li\u0026gt;Coffee\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Vinyl Records\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Pickling\u0026lt;/li\u0026gt;\n\u0026lt;/ul\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis would render as:\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch5\u003eMy Favorite Things in No Particular Order\u003c/h5\u003e\n\n\u003cul\u003e\n    \u003cli\u003eCoffee\u003c/li\u003e\n    \u003cli\u003eVinyl Records\u003c/li\u003e\n    \u003cli\u003ePickling\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eYou can also make a numbered, or ordered list, using an \u003ccode\u003eol\u003c/code\u003e tag.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;h5\u0026gt;Top 5 Pizza Places in NYC\u0026lt;/h5\u0026gt;\n\u0026lt;ol\u0026gt;\n    \u0026lt;li\u0026gt;DiFara Pizza\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Lucali's\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Sal and Carmine's\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Juliana's\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Joe's\u0026lt;/li\u0026gt;\n\u0026lt;/ol\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWould render as:\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch5\u003eTop 5 Pizza Places in NYC\u003c/h5\u003e\n\n\u003col\u003e\n    \u003cli\u003eDiFara Pizza\u003c/li\u003e\n    \u003cli\u003eLucali's\u003c/li\u003e\n    \u003cli\u003eSal and Carmine's\u003c/li\u003e\n    \u003cli\u003eJuliana's\u003c/li\u003e\n    \u003cli\u003eJoe's\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003chr\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWelcome to the world of the web! In this lesson, you learned about HTML, why it's important in web development, and how web pages are structured. You also compared and contrasted a few common HTML tags as well as saw how tags can be used to construct HTML documents.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-html-introduction\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-html-introduction\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-html-introduction/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"git-resources","title":"Git Resources","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-resources\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-resources/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've gotten a solid introduction to git, it's time to give you a resource trove! Take a look at these resources if you want to learn more. They're optional but great to make note of and come back to.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse resources to expand Git and Markdown skills\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eGit and Markdown Resources\u003c/h2\u003e\n\n\u003ch3\u003eGit Basics\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e(\u003ca href=\"https://gist.github.com/aviflombaum/0d1c335291350a2e4036\"\u003eGist of Git resources\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Getting-Started-A-Short-History-of-Git\"\u003eGetting Started 1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Getting-Started-About-Version-Control\"\u003eGetting Started 2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Basics-Recording-Changes-to-the-Repository\"\u003eGit Basics 1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Basics-Viewing-the-Commit-History\"\u003eViewing The Commit History\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Basics-Working-with-Remotes\"\u003eRemotes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://bloggytoons.com/posts/2013/10/10/git-kitchen-wchef-ramsay\"\u003eGit Kitchen\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Branching-What-a-Branch-Is\"\u003eBranches\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Branching-Basic-Branching-and-Merging\"\u003eMerging\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Branching-Branch-Management\"\u003eBranch Management\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Branching-Branching-Workflows\"\u003eWorkflows\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eAdditional Git Resources\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://rogerdudler.github.io/git-guide/\"\u003eGit Guide\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://pcottle.github.io/learnGitBranching/\"\u003eGit Branching\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://marklodato.github.io/visual-git-guide/index-en.html\"\u003eVisual Git\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.youtube.com/watch?v=3QnD2c4Xovk\u0026amp;feature=plcp\"\u003ePublic Private Key Video\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eMarkdown\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://github.github.com/github-flavored-markdown\"\u003eGitHub Flavored Markdown\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://daringfireball.net/projects/markdown/basics\"\u003eDaring Fireball MD Basics\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://daringfireball.net/projects/markdown/syntax\"\u003eDaring Fireball MD Syntax\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://bywordapp.com/markdown/guide.html\"\u003eByword MultiMarkdown Guide\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4\u003eMarkdown plugins and apps\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/revolunet/sublimetext-markdown-preview\"\u003eSublime MD Preview Plugin\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://mouapp.com/\"\u003eMou MD writer app\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://atom.io\"\u003eAtom text editor\u003c/a\u003e has a markdown preview built in.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eNot a lesson in the traditional sense, but a great list of resources for you now or going forward on git resources! (Also of note, Markdown is the text formating used to display readme's on GitHub, hence the .md extension of README.md.) Cheers!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-git-resources\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-git-resources\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-resources/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"project-submission-and-review-online","title":"Project Submission \u0026 Review (Online)","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-project-submissions-online\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-submissions-online\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-submissions-online/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this lesson, we review the requirements, submission, and review process for the Phase Projects.\u003c/p\u003e  \u003ch2\u003eObjectives\u003c/h2\u003e  \u003cp\u003eYou will be able to:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eCreate project deliverables that meet Flatiron School requirements\u003c/li\u003e \u003cli\u003eSubmit your project deliverables in Canvas\u003c/li\u003e \u003cli\u003ePrepare for your project review\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eSchedule Your Review ASAP\u003c/h2\u003e  \u003cp\u003e\u003cstrong\u003eReach out to an instructor immediately via Slack to let them know you've started your project and schedule your project review.\u003c/strong\u003e If you're not sure who to schedule with, please ask in your cohort channel in Slack.\u003c/p\u003e  \u003ch2\u003eCreate Your Project Deliverables\u003c/h2\u003e  \u003cp\u003eComplete the deliverables for your project, guided by the rubric at the bottom of the main project assignment. Keep in mind that the audience for these deliverables is not only your teacher, but also potential employers. Employers will look at your project deliverables to evaluate multiple skills, including coding, modeling, communication, and domain knowledge. You will want to polish these as much as you can, both during the course and afterwards.\u003c/p\u003e  \u003ch3\u003eGitHub Repository\u003c/h3\u003e  \u003cp\u003eYour GitHub repository is the public-facing version of your project that your instructors and potential employers will see - make it as accessible as you can. At a minimum, it should contain all your project files and a README.md file that summarizes your project and helps visitors navigate the repository.\u003c/p\u003e  \u003ch3\u003eJupyter Notebook\u003c/h3\u003e  \u003cp\u003eYour Jupyter Notebook is the primary source of information about your analysis. At a minimum, it should contain or import all of the code used in your project and walk the reader through your project from start to finish. You may choose to use multiple Jupyter Notebooks in your project, but you should have one that provides a full project overview as a point of entry for visitors.\u003c/p\u003e  \u003ch3\u003eNon-Technical Presentation\u003c/h3\u003e  \u003cp\u003eYour non-technical presentation is your opportunity to communicate clearly and concisely about your project and it's real-world relevance. The target audience should be people with limited technical knowledge who may be interested in leveraging your project. We recommend using Google Slides, PowerPoint or Keynote to create your presentation slides. You will then record yourself delivering the presentation.\u003c/p\u003e  \u003ch2\u003eSubmit Your Project\u003c/h2\u003e  \u003cp\u003eTo submit your project in Canvas, you will create and upload PDF versions of three project deliverables, then upload a recording of your video presentation. You will also submit the URL to your GitHub repository in a separate assignment.\u003c/p\u003e  \u003ch3\u003ePresentation Slides PDF Creation\u003c/h3\u003e  \u003col\u003e \u003cli\u003eExport your presentation as a PDF from the program in which you created it.\u003c/li\u003e \u003cli\u003eGive it a short descriptive file name (e.g. \u003ccode\u003epresentation.pdf\u003c/code\u003e).\u003c/li\u003e \u003cli\u003ePlace a copy of the PDF in your GitHub repository.\u003c/li\u003e \u003c/ol\u003e  \u003ch3\u003eGitHub Repository PDF Creation\u003c/h3\u003e  \u003col\u003e \u003cli\u003eNavigate to the root directory of your project repository on GitHub, using your browser (we recommend Google Chrome).\u003c/li\u003e \u003cli\u003eSave the webpage as a PDF using the browser's Print functionality (\u003ca href=\"https://www.wikihow.com/Save-a-Web-Page-as-a-PDF-in-Google-Chrome\"\u003eGoogle Chrome Save to PDF instructions\u003c/a\u003e)\u003c/li\u003e \u003cli\u003eGive it a short descriptive file name (e.g. \u003ccode\u003egithub.pdf\u003c/code\u003e).\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-project-submissions-online/master/repo_pdf.gif\" alt=\"Repository PDF Creation\"\u003e\u003c/p\u003e  \u003ch3\u003eJupyter Notebook PDF Creation\u003c/h3\u003e  \u003col\u003e \u003cli\u003eOpen your Notebook in your browser (we recommend Google Chrome).\u003c/li\u003e \u003cli\u003e\n\u003cstrong\u003eRun the Notebook from start to finish\u003c/strong\u003e so that your output is visible.\u003c/li\u003e \u003cli\u003eSave the page as a PDF using the browser's Print functionality (\u003ca href=\"https://www.wikihow.com/Save-a-Web-Page-as-a-PDF-in-Google-Chrome\"\u003eGoogle Chrome Save to PDF instructions\u003c/a\u003e)\u003c/li\u003e \u003cli\u003eGive it a short descriptive file name (e.g. \u003ccode\u003enotebook.pdf\u003c/code\u003e).\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003eIf you have difficulty creating a PDF version of your notebook, you can use \u003ca href=\"https://htmtopdf.herokuapp.com/ipynbviewer/\"\u003ethis tool\u003c/a\u003e instead. Set the ‘Results Format’ to “HTML + PDF”. Then click ‘View and Convert’. Once it’s done, you should see links to .html and .pdf versions above the ‘View and Convert’ button.\u003c/p\u003e  \u003ch3\u003ePDF Submission in Canvas\u003c/h3\u003e  \u003cp\u003eYou will need to submit all three PDF files as a single submission:\u003c/p\u003e  \u003col\u003e \u003cli\u003eClick \"Submit Assignment\" at the top of the \"Phase X Project\" assignment in the \"Milestones\" topic.\u003c/li\u003e \u003cli\u003eIn the \"File Upload\" box, click \"Choose File\" button to upload a single file.\u003c/li\u003e \u003cli\u003eClick the \"Add Another File\" link to upload an additional file.\u003c/li\u003e \u003cli\u003eRepeat Step 3 to upload one more file. After this is done, all three files should be uploaded.\u003c/li\u003e \u003cli\u003eHit the blue \"Submit Assignment\" button.\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-project-submissions-online/master/project_3pdf_submission.gif\" alt=\"Project PDF Submission\"\u003e\u003c/p\u003e  \u003ch3\u003ePresentation Recording and Submission\u003c/h3\u003e  \u003cp\u003eAfter you've submitted the PDF files for the project assignment, you will upload a recording of your presentation as a media comment on your submission:\u003c/p\u003e  \u003col\u003e \u003cli\u003eRecord your live presentation to a video file on your computer. We recommend using Zoom to record your live presentation to a local video file (\u003ca href=\"https://support.zoom.us/hc/en-us/articles/201362473-Local-recording\"\u003einstructions here\u003c/a\u003e). Video files must be under 500 MB and formatted as 3GP, ASF, AVI, FLV, M4V, MOV, MP4, MPEG, QT, or WMV.\u003c/li\u003e \u003cli\u003eClick \"Submission Details\" on the top right of the \"Phase X Project\" assignment in the \"Milestones\" topic.\u003c/li\u003e \u003cli\u003eClick \"Media Comment\" beneath the \"Add a Comment\" box on the right of the page.\u003c/li\u003e \u003cli\u003eClick \"Upload Media\" and \"Select Video File\" to upload your file.\u003c/li\u003e \u003cli\u003eThe thumbnail for your video will appear as a blue rectangle while Zoom processes your file - return to this page later to confirm that your recording uploaded successfully.\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-project-submissions-online/master/video_recording_submission.gif\" alt=\"Video Recording Submission\"\u003e\u003c/p\u003e  \u003ch3\u003eURL Submission in Canvas\u003c/h3\u003e  \u003cp\u003eThere is an additional Canvas assignment where you will just enter the URL for your project's GitHub repository. This is located in the \"Milestones\" topic in this course as \"Phase X Project - GitHub Repository URL.\"\u003c/p\u003e  \u003ch2\u003ePrepare For Project Review\u003c/h2\u003e  \u003cp\u003eProject reviews are focused on preparing you for technical interviews. Treat project reviews as if they were technical interviews, in both attitude and technical presentation \u003cem\u003e(sometimes technical interviews will feel arbitrary or unfair - if you want to get the job, commenting on that is seldom a good choice)\u003c/em\u003e.\u003c/p\u003e  \u003cp\u003eThe project review is comprised of a 45 minute 1:1 session with one of the instructors. During your project review, be prepared to:\u003c/p\u003e  \u003ch3\u003e1. Deliver your PDF presentation to a non-technical stakeholder.\u003c/h3\u003e  \u003cp\u003eIn this phase of the review (~10 mins) your instructor will play the part of a non-technical stakeholder that you are presenting your findings to. The presentation  should not exceed 5 minutes, giving the \"stakeholder\" 5 minutes to ask questions.\u003c/p\u003e  \u003cp\u003eIn the first half of the presentation (2-3 mins), you should summarize your methodology in a way that will be comprehensible to someone with no background in data science and that will increase their confidence in you and your findings. In the second half (the remaining 2-3 mins) you should summarize your findings and be ready to answer a couple of non-technical questions from the audience. The questions might relate to technical topics (sampling bias, confidence, etc) but will be asked in a non-technical way and need to be answered in a way that does not assume a background in statistics or machine learning. You can assume a smart, business stakeholder, with a non-quantitative college degree.\u003c/p\u003e  \u003ch3\u003e2. Go through the Jupyter Notebook, answering questions about how you made certain decisions. Be ready to explain things like:\u003c/h3\u003e \u003cpre\u003e\u003ccode\u003e* \"How did you pick the question(s) that you did?\"\u003cbr\u003e* \"Why are these questions important from a business perspective?\"\u003cbr\u003e* \"How did you decide on the data cleaning options you performed?\"\u003cbr\u003e* \"Why did you choose a given method or library?\"\u003cbr\u003e* \"Why did you select those visualizations and what did you learn from each of them?\"\u003cbr\u003e* \"Why did you pick those features as predictors?\"\u003cbr\u003e* \"How would you interpret the results?\"\u003cbr\u003e* \"How confident are you in the predictive quality of the results?\"\u003cbr\u003e* \"What are some of the things that could cause the results to be wrong?\" \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eThink of the first phase of the review (~30 mins) as a technical boss reviewing your work and asking questions about it before green-lighting you to present to the business team. You should practice using the appropriate technical vocabulary to explain yourself. Don't be surprised if the instructor jumps around or sometimes cuts you off - there is a lot of ground to cover, so that may happen.\u003c/p\u003e  \u003cp\u003eIf any requirements are missing or if significant gaps in understanding are uncovered, be prepared to do one or all of the following: * Perform additional data cleanup, visualization, feature selection, modeling and/or model validation * Submit an improved version * Meet again for another Project Review\u003c/p\u003e  \u003cp\u003eWhat won't happen: * You won't be yelled at, belittled, or scolded * You won't be put on the spot without support * There's nothing you can do to instantly fail or blow it\u003c/p\u003e  \u003ch2\u003eGrading\u003c/h2\u003e  \u003cp\u003eYour teacher will use the rubric at the bottom of the main project assignment to grade your project. In order to pass, you must properly submit your project and score \"Accomplished\" or \"Exemplary\" on nearly all rubric elements. You will receive a score of P (Pass) or NP (No Pass) - you must pass in order to move to the next phase with your cohort. Your teacher will grade your submission sometime after your review.\u003c/p\u003e  \u003ch2\u003eConclusion\u003c/h2\u003e  \u003cp\u003eThank you for your hard work on this project - you're going to do great! Remember that future employers will also look at your projects when deciding whether to hire you, so having complete, polished projects will help you tremendously not only to pass this assignment, but also to get the job you want after you graduate.\u003c/p\u003e  \u003cp\u003eIf you have any questions about the project submission or review process, don't hesitate to ask your teacher.\u003c/p\u003e","frontPage":false},{"exportId":"setting-up-a-professional-data-science-environment-macos-installation","title":"Setting up a Professional Data Science Environment - MacOS Installation","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-science-env-mac-installation\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-mac-installation\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-mac-installation/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eThere are two major pieces we need to install in order to set you up for success as a professional data scientist! In this lesson, we will be installing Git and Anaconda for MacOS.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eInstall Git\u003c/li\u003e\n\u003cli\u003eInstall Anaconda\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003ePlease note - the exact names and versions will change over time.\u003c/p\u003e\n\u003ch2\u003eInstalling Git\u003c/h2\u003e\n\u003cp\u003eIf you are comfortable with the command line and have installed \u003ca href=\"https://brew.sh/\" target=\"_blank\"\u003e homebrew\u003c/a\u003e, you should install Git by running the command \u003ccode\u003ebrew install git\u003c/code\u003e in a terminal window. If you have no idea what that last sentence meant, please disregard and follow the below steps.\u003c/p\u003e\n\u003ch3\u003eOverview\u003c/h3\u003e\n\u003cp\u003ePlease also reference the image screengrabs for more detail below.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eNavigate to Git's download page for MacOS \u003ca href=\"https://git-scm.com/download/mac\" target=\"_blank\"\u003ehere\u003c/a\u003e. Since you are not using homebrew, you should click on the latest version number under the Binary Installer option\n\u003cul\u003e\n\u003cli\u003eThis should take you to another page, where the download of the installer dmg file should begin automatically after a few seconds\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDouble click on the downloaded dmg file to open a small Finder window\u003c/li\u003e\n\u003cli\u003eDouble click on the .pkg file to run it, and click \"Open\" when the pop-up security warning asks if you are sure you want to open it\n\u003cul\u003e\n\u003cli\u003eIf you get a security warning that simply says the file cannot be opened because it is from an unidentified developer, then:\n\u003cul\u003e\n\u003cli\u003eClick on the Apple symbol at the top left of your screen\u003c/li\u003e\n\u003cli\u003eSelect “System Preferences” from the drop-down menu\u003c/li\u003e\n\u003cli\u003eSelect “Security and Privacy”\u003c/li\u003e\n\u003cli\u003eSelect the “General” tag\u003c/li\u003e\n\u003cli\u003eBelow the “Allow apps downloaded from” option, click the \"Open Anyway\" option. You may need to click the lock to make changes, which will prompt you to enter your password\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhen the Installer opens, click \"Continue\" on each screen, then \"Install\"\n\u003cul\u003e\n\u003cli\u003eYou may need to enter your password when prompted\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhen the installation is complete, click the \"Close\" button\n\u003cul\u003e\n\u003cli\u003eIf the installation window asks if you want to move the installer .pkg file to trash, you can click “Move to Trash”\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4\u003eGit Installation Step-by-Step:\u003c/h4\u003e\n\u003cp\u003e\u003ciframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vQtsPSXRa47q3beYt81S9lchOz5ZC5vrqK324GH1GuGGQXSALFfpBSF_VWVcm8GrQNqvGfjxZeohx5I/embed?start=false\u0026amp;loop=false\u0026amp;delayms=3000\" width=\"960\" height=\"569\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003ch3\u003eConfirming Your Git Installation\u003c/h3\u003e\n\u003cp\u003eTo confirm you have installed Git successfully:\u003c/p\u003e\n\u003cp\u003e1. Open a terminal window\u003c/p\u003e\n\u003cul style=\"list-style-type: circle;\"\u003e\n\u003cli\u003eWhen we ask you to use the terminal, we mean the “Terminal” app in the “Utilities” folder within your “Applications” folder - or, find the \"Terminal\" app in your Launchpad (often found in a subdirectory named \"Other\")\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e2. Type \u003ccode\u003egit --version\u003c/code\u003e: It should return the version of git you are running\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003chr\u003e\n\u003ch2\u003eInstalling Anaconda\u003c/h2\u003e\n\u003cp\u003eThe easiest way to get set up with Python and Jupyter Notebook so you can start coding is to install the Anaconda distribution.\u003c/p\u003e\n\u003ch3\u003eOverview:\u003c/h3\u003e\n\u003cp\u003ePlease also reference the image screengrabs for more detail below.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eDownload the latest version of Anaconda \u003ca href=\"https://www.anaconda.com/products/individual\" target=\"_blank\"\u003ehere\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eOpen the pkg file once it has downloaded to open the Anaconda installer\u003c/li\u003e\n\u003cli\u003eClick \"Continue\" to run the package to determine if the software can be installed\u003c/li\u003e\n\u003cli\u003eWhen the Installation window opens, click \"Continue\"\u003c/li\u003e\n\u003cli\u003eRead the Read Me, then click \"Continue\"\u003c/li\u003e\n\u003cli\u003eAccept the license by clicking \"Continue\", then click \"Agree\" in the pop-up window\u003c/li\u003e\n\u003cli\u003eClick \"Install\" to install the software\n\u003cul\u003e\n\u003cli\u003eYou may need to enter your password when prompted\u003c/li\u003e\n\u003cli\u003eYou can ignore any supplementary materials advertised, such as PyCharm\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClick \"Close\" when the installation was completed successfully\n\u003cul\u003e\n\u003cli\u003eIf the installation window asks if you want to move the installer .pkg file to trash, you can click “Move to Trash”\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4\u003eAnaconda Installation Step-by-Step:\u003c/h4\u003e\n\u003cp\u003e\u003ciframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vQ5d1LpSJt8OnoANlTfAHZg8ff4zVS22HPV1_98k8bGRQEotl686kSjzqEi_vjhXudMB4ui9i_wBheJ/embed?start=false\u0026amp;loop=false\u0026amp;delayms=3000\" width=\"960\" height=\"569\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003ch3\u003eConfirming Your Anaconda Installation\u003c/h3\u003e\n\u003cp\u003eTo confirm you have installed Anaconda successfully:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eOpen a terminal window\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eType \u003ccode\u003econda info\u003c/code\u003e: It should return a table of details about your conda installation\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2\u003eConfirmation\u003c/h2\u003e\n\u003cp\u003eThis image shows what it should look like when you confirm both your Git and Anaconda installs (although version numbers and details may change):\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-mac-installation/master/images/mac-confirm-install.png\" width=\"500\"\u003e\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eCongratulations! If you've gotten this far and everything has worked, you have successfully installed Git and Anaconda on your Mac!\u003c/p\u003e","frontPage":false},{"exportId":"the-structure-of-this-course","title":"The Structure of This Course","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-structure-of-this-course\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-structure-of-this-course\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-structure-of-this-course/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson you will learn about how this course is structured in Canvas. Additionally, you will be introduced to Jupyter Notebooks and what they are for the very first time!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand the difference between a Canvas Assignment and Page\u003c/li\u003e\n\u003cli\u003eUnderstand how Pages host Lessons and Assignments host Code Lessons and Labs\u003c/li\u003e\n\u003cli\u003eGet introduced to Jupyter Notebooks\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSetting the Stage\u003c/h2\u003e\n\n\u003cp\u003eThere are two main types of materials in this course: \u003cstrong\u003ePages\u003c/strong\u003e and \u003cstrong\u003eAssignments\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou can recognize a \u003cstrong\u003ePage\u003c/strong\u003e by the following icon:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course/master/images/page.png\" width=\"70\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd an \u003cstrong\u003eAssignment\u003c/strong\u003e by the following icon:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course/master/images/assignment.png\" width=\"70\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ePages\u003c/strong\u003e contain \u003cem\u003eLessons\u003c/em\u003e, and these lessons are mainly about giving you tons of information to absorb. In these lessons you'll be reading text and sometimes watching videos (note that what you're reading now is a Page). There is really not much more about it, all you need to do is to read them in Canvas. Enjoy!\u003c/p\u003e\n\n\u003cp\u003eOften, you'll be required to write code. This is where \u003cstrong\u003eAssignments\u003c/strong\u003e come in. Assignments come in two forms:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cem\u003eCode Lessons\u003c/em\u003e: Code Lessons require you to be able to run code, but you will not be instructed to write code yourself. Code Lessons are very much like Lessons, but there is an interactive component to it as you'll be running some code that was provided for you.\u003c/li\u003e\n\u003cli\u003e\n\u003cem\u003eLabs\u003c/em\u003e: Labs ask you to write code yourself! We provide example solutions for each lab to help you if you get stuck.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eYou can easily tell if an assignment is a \u003cem\u003eCode Lesson\u003c/em\u003e or a \u003cem\u003eLab\u003c/em\u003e from the title and the organization. If the title ends with \"Lab\", it's a lab. Additionally, Labs are indented. In the image below, you see a Code Lesson followed by a Lab.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course/master/images/labs.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNote that there is a third type of content that hasn't been discussed: a \u003cstrong\u003eQuiz\u003c/strong\u003e. Quizzes are less prevalent than Assignments or Pages, but they're important, as they contain questions for you to answer to reinforce your learning!\u003c/p\u003e\n\n\u003cp\u003eThe quiz icon looks like this:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course/master/images/quiz.png\" width=\"70\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eAssignments: Meet IllumiDesk!\u003c/h2\u003e\n\n\u003cp\u003eWith any assignment that you open, this is what you'll see:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course/master/images/illumidesk.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn order to go to the assignment, you need to load the assignment in a new window by clicking on the grey bar:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course/master/images/illumidesk_4.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eClicking on the grey bar will take you into IllumiDesk to work on a \u003cstrong\u003eJupyter Notebook\u003c/strong\u003e, a document-like application that allows you to do live coding!\u003c/p\u003e\n\n\u003cp\u003eThis is what a Jupyter Notebook looks like:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course/master/images/jupyter.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eLab Solutions\u003c/h2\u003e\n\n\u003cp\u003eWe provide solutions for each Lab to help you get unstuck when all else fails. Learning how to persevere and solve coding problems is one of the most important skills you will learn as a data scientist! That said, sometimes it's not worth your time or energy to keep trying to solve a problem, especially if the problem ends up being something minor like a typo. In general, if you're not making any progress with a Lab after 10-20 minutes then you should reach out to peers for help. If that doesn't get you unstuck, \u003cem\u003ethen\u003c/em\u003e look at a solution. Read just enough of the solution to get unstuck, then continue on your own.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eBe careful about when \u0026amp; how you use these!\u003c/strong\u003e You may be tempted to go look at the solution immediately when you don't know what to do or your code isn't working.  You won't always be able to look up a correct solution to problems you encounter during a technical interview or on the job, so don't let yourself fall into the habit.\u003c/p\u003e\n\n\u003cp\u003eTo access a Lab solution, click the GitHub icon to go to the Lab's GitHub repository.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course/master/images/github_lab_repo.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eFrom the GitHub repository, click the branch dropdown to switch to the \u003ccode\u003esolution\u003c/code\u003e branch.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course/master/images/github_branches.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eGreat - enough \u003cem\u003etalking\u003c/em\u003e, let's dive right into your first Jupyter Notebook in the next Assignment!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you learned about how Assignments and Pages are the two main building blocks of the Data Science Program in Canvas, hosting Lessons, Code Lessons and Labs. Next up, we'll explore our first Code Lesson in a Jupyter Notebook!\u003c/p\u003e","frontPage":false},{"exportId":"data-privacy-and-data-ethics","title":"Data Privacy and Data Ethics","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-ethics\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-ethics/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eData ethics and data privacy are integral to any data project. There are obvious cases such as protecting the privacy of individuals health records under HIPAA. There are also many gray areas surrounding what constitutes personally identifiable information (PII) which occur throughout many industries including advertising, finance, and consumer goods. You may have noticed that starting around the summer of 2018, you started receiving privacy policy notices on many websites asking you to accept the use of cookies. This was a result of Europe's GDPR legislation. You are also probably aware of the Cambridge Analytica debacle in the 2016 United States presidential election. As a data practitioner, it is your responsibility to uphold data ethics in a fast-changing environment.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDetermine whether or not a data science procedure meets an ethics standard\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eExamples\u003c/h2\u003e\n\n\u003ch3\u003eData Breaches\u003c/h3\u003e\n\n\u003cp\u003eIf the data you are handling is valuable, then security should be a primary concern. Data breaches are all too common and often, such leaks of sensitive information could have been avoided if businesses and organizations followed standard security protocols. While there are thousands of said cases, two of the biggest breaches which have caught the public's attention include Cambridge Analytica's misuse of Facebook data to influence political elections, and Equifax's leaking of roughly 100 million individuals' social security numbers and credit scores. \u003c/p\u003e\n\n\u003ch3\u003eIdentifying PII\u003c/h3\u003e\n\n\u003cp\u003ePII stands for \u003cstrong\u003epersonally identifiable information\u003c/strong\u003e. While some cases such as one's social security number and medical records are clear examples of PII, other pieces of data may or may not qualify as PII depending on the jurisdiction. In the United States for example, there are two federal regulations: the Health Insurance Portability and Accountability Act (HIPAA), and the Privacy Act of 1974. While in theory these acts aim to protect the use, collection, and maintenance of personal data, the scope of what constitutes PII and the subsequent regulations surrounding handling and using said data is generally antiquated. For example, a user's IP address has been categorized as non-PII by several U.S. courts despite it being a unique identifier to most individual's home internet connection. This was further eroded by the rollback of net neutrality laws by the FCC Chairman Ajit Pai in mid-2018. Aside from federal jurisdiction, several states, most notably California have their own data protection laws to the benefit and protection of users and consumers.\u003c/p\u003e\n\n\u003ch3\u003eGDPR\u003c/h3\u003e\n\n\u003cp\u003eGDPR stands for the \u003cstrong\u003egeneral data protection regulation\u003c/strong\u003e. It was passed on April 14th 2016 by the European Union and went into effect on May 25th 2018. GDPR protects the data rights of all European citizens and is an example of how legislation will have to change and adapt to the online digital era of the 21st century. GDPR has implemented more widespread regulations surrounding what constitutes PII and has set fine structures for up to 4% of a company's revenue.\u003c/p\u003e\n\n\u003ch3\u003eData Best Practices\u003c/h3\u003e\n\n\u003cp\u003eThere are two primary practices that you should follow when dealing with PII and other sensitive data. The first is to encrypt sensitive data. When in doubt, encrypt. Secondly, ask yourself what level of information you really need. Large organizations will always include data cleaning teams which will first scrub sensitive data such as names and addresses before passing said data off to analysts and others to mine. Ultimately, any well-thought strategy will include multiple layers, safeguards, and other measures to ensure data is safe and secure.\u003c/p\u003e\n\n\u003ch3\u003eData Collection Processes\u003c/h3\u003e\n\n\u003cp\u003eWhen collecting data, it is important to ensure you are not gathering it in a manner that will generate bias. For example, if Data Scientists are not careful in the way they phrase questions in surveys, they can generate misleading results. If a poll contained the question \"How poorly has Politician X performed when it comes to the economy\" it adds a negative connotation the question. That phrasing might make people say Politician X performed worse than if they had merely been asked \"How has Politician X performed when it comes to the economy?\" \u003c/p\u003e\n\n\u003cp\u003eIn some cases, choosing which variables to collect and how to define them can also contain bias. You’ll notice that in some of the datasets we use, gender is represented as a binary value and race is referenced in an insensitive manner. This is an artifact of the societal conditions at the time the data was collected. As soon-to-be Data Scientists, it will be your responsibility to ensure that data collection is done in an inclusive manner.\u003c/p\u003e\n\n\u003ch3\u003eAlgorithm Bias\u003c/h3\u003e\n\n\u003cp\u003ePeople often trust algorithms and their output based on measurements such as \"this algorithm has 99.9% accuracy\". However, it should also be noted that while algorithms such as linear regression are mathematically sound and powerful tools, the models are simply reflections of the data that is fed in. For example, logistic regression and other algorithms are used to inform a wide range of decisions including whether to provide someone with a loan, the degree of criminal sentencing, or whether to hire an individual for a job. (Do a quick search online for algorithm bias, or check out some of the articles below.) In all of these scenarios, it is again important to remember that the algorithm is simply reflective of the underlying data itself. If an algorithm is trained on a dataset where African Americans have had disproportionate criminal prosecution, the algorithm will continue to perpetuate these racial injustices. Similarly, algorithms trained on data reflecting a gender pay-gap will also continue to promote this bias. With this, substantial thought and analysis regarding problem set up and the resulting model is incredibly important.\u003c/p\u003e\n\n\u003cp\u003eBelow is a handful of resources providing further information regarding some of the topics discussed here.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.propublica.org/article/machine-bias-risk-assessments-in-criminal-sentencing\"\u003eMachine Bias\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.bloomberg.com/opinion/articles/2018-10-16/amazon-s-gender-biased-algorithm-is-not-alone\"\u003eAmazon’s Gender-Biased Algorithm Is Not Alone\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.bostonglobe.com/business/2017/12/21/the-software-that-runs-our-lives-can-bigoted-and-unfair-but-can-fix/RK4xG4gYxcVNVTIubeC1JI/story.html\"\u003eThe software that runs our lives can be bigoted and unfair. But we can fix it\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.bostonglobe.com/ideas/2017/07/07/why-artificial-intelligence-far-too-human/jvG77QR5xPbpwBL2ApAFAN/story.html\"\u003eWhy artificial intelligence is far too human\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.npr.org/2016/03/14/470427605/can-computers-be-racist-the-human-like-bias-of-algorithms\"\u003eCan Computers Be Racist? The Human-Like Bias Of Algorithms\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eGray Areas and Forward Thinking\u003c/h2\u003e\n\n\u003cp\u003eAside from overtly illegal practices according to current legislation, data privacy and ethics calls into question a myriad of various thought experiments. For example, should IP addresses or cookies be considered PII? How should security camera footage be handled? What about vehicles such as Google street view cars which are capturing video and pictures of public places? Some companies are now even taking pictures of license plates to track car movements. Should they be allowed to maintain massive databases of said information? What regulations should be put on these and other potentially sensitive datasets?  \u003c/p\u003e\n\n\u003cp\u003eAll of these examples question where and when limits should be put on data. Science fiction stories such as 1984, are much more accurate then one might expect. Moreover, injustices and questionable practices still abound. For example, despite public outcry at debacles like Cambridge Analytica, many companies still exist with nearly identical practices such as \u003ca href=\"https://web.archive.org/web/20160305010738/http://applecart.co/\"\u003eApplecart\u003c/a\u003e in New York City, which collects and sells user data to the Republican party, amongst others. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-ethics/master/images/fix-it.png\" width=\"750\"\u003e\u003c/p\u003e\n\n\u003ch2\u003e\u003ca href=\"https://www.eff.org/deeplinks/2019/02/announcing-fix-it-already\"\u003eFix it Already!\u003c/a\u003e\u003c/h2\u003e\n\n\u003cp\u003eIn staying current, you should also identify some news sources to stay up to date on tech trends.\u003cbr\u003e\nOne great resource is the \u003ca href=\"https://www.eff.org/\"\u003eElectronic Frontier Foundation (EFF)\u003c/a\u003e.  \u003c/p\u003e\n\n\u003cp\u003eEFF recently put together an article called Fix it Already, outlining fixable mishaps by technology companies that continue to be ignored. Take a look at the article \u003ca href=\"https://www.eff.org/deeplinks/2019/02/announcing-fix-it-already\"\u003ehere\u003c/a\u003e and get involved to put pressure on these organizations and your representatives to shape up. Here's a quick preview of their list:  \u003c/p\u003e\n\n\u003cp\u003e\u003c/p\u003e\n\u003cli\u003e\u003cspan\u003eAndroid should let users \u003ca href=\"https://fixitalready.eff.org/android\"\u003edeny and revoke apps' Internet permissions\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eApple should let users \u003ca href=\"https://fixitalready.eff.org/apple\"\u003eencrypt their iCloud backups\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eFacebook should \u003ca href=\"https://fixitalready.eff.org/facebook\"\u003eleave your phone number where you put it\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eSlack should give \u003ca href=\"https://fixitalready.eff.org/slack\"\u003efree workspace administrators control over data retention\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eTwitter should \u003ca href=\"https://fixitalready.eff.org/twitter\"\u003eend-to-end encrypt direct messages\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eVenmo should let users \u003ca href=\"https://fixitalready.eff.org/venmo\"\u003ehide their friends lists\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eVerizon should \u003ca href=\"https://fixitalready.eff.org/verizon\"\u003estop pre-installing spyware on its users’ phones\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eWhatsApp should \u003ca href=\"https://fixitalready.eff.org/whatsapp\"\u003eget your consent before you’re added to a group\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eWindows 10 should let users \u003ca href=\"https://fixitalready.eff.org/win10\"\u003ekeep their disk encryption keys to themselves\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\n\u003ch2\u003eDisclaimer\u003c/h2\u003e\n\n\u003cp\u003eAs a final note, it should also be noted that the nature of online data can also include offensive or inappropriate data at times. For example, if acquiring data from an API such as Twitter, there is potential to encounter lewd or offensive material. While many of these services will eventually screen out and remove particularly egregious cases, plenty of trolls still exist.\u003c/p\u003e\n\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\n\u003cp\u003eThere's a multitude of resources to get involved with data privacy and ethics, but here's a few to get you started.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.eff.org/\"\u003eElectronic Frontier Foundation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:32016R0679\u0026amp;from=EN\"\u003eGDPR\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.hhs.gov/hipaa/for-professionals/index.html\"\u003eHIPAA\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://datadetox.myshadow.org/en/home\"\u003eData Detox\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you got a preview of some of the many issues regarding data privacy and ethics. From GDPR to being aware of your own data aura, there's plenty to keep you busy and on your toes regarding this fascinating perspective on the data industry.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-data-ethics\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-data-ethics\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-data-ethics/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"intro-to-css","title":"Intro to CSS","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-intro-to-css\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-intro-to-css/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eBrowsers combine the content (HTML) and presentation (CSS) layers to\ndisplay web pages.  CSS is the language for \u003cem\u003estyling\u003c/em\u003e web pages.\u003c/p\u003e\n\n\u003cp\u003eCSS instructions live apart from the HTML elements and have a different\nlook and feel (\"syntax\"). CSS directives give web pages their specific look and\nfeel.  If you have ever been impressed by how a website can be displayed on a\ndesktop browser while the same content looks great on a mobile device, you have\nCSS to thank for it!\u003c/p\u003e\n\n\u003cp\u003eOne of the most amazing displays of the power of CSS is the\n\u003ca href=\"http://www.csszengarden.com/\"\u003eCSS Zen Garden\u003c/a\u003e where people take the \u003cem\u003eexact\nsame\u003c/em\u003e HTML page and use CSS to create \u003cem\u003ewildly\u003c/em\u003e different pages. Take a look!\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-intro-to-css/canvas/images/zengarden1.png\" alt=\"CSS Zen Garden 1\" title=\"A long-scrolling single-page CSS Zen Garden design\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-intro-to-css/canvas/images/zengarden2.png\" alt=\"CSS Zen Garden 2\" title=\"An animated CSS, full-screen browser single-page style Zen Garden design\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-intro-to-css/canvas/images/zengarden3.png\" alt=\"CSS Zen Garden 3\" title=\"Blog-like CSS Zen Garden designs\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAll of the differences you see are due to CSS!\nAstounding, right!?\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eList the components of CSS\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDeclare CSS properties and values\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eRecognize The Differences Between HTML And CSS\u003c/h2\u003e\n\n\u003cp\u003eHTML and CSS play two different roles. When you write HTML, it's important to focus on structure, hierarchy, and meaning — the \"marking-up\" of content. Questions in the mind of an HTML author are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIs it best to list these members' names with numbers or bullets?\u003c/li\u003e\n\u003cli\u003eDoes this menu belong in the navigation in the header?\u003c/li\u003e\n\u003cli\u003eShould this additional reference be an aside or a separate section?\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThese questions deal with structure, hierarchy, and meaning, which are concerns of the content layer (HTML).\u003c/p\u003e\n\n\u003cp\u003eWhen defining the presentation layer (CSS), here are the questions to ask\nyourself:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDo I want the header menu to be stationary or do I want it to scroll with the\nbrowser window?\u003c/li\u003e\n\u003cli\u003eHow do I want the content to display inside of a container? For example,\ndoes it fill the whole area, edge-to-edge? Is there white space around the content and/or the container?\u003c/li\u003e\n\u003cli\u003eHow large should an \u003ccode\u003eH1\u003c/code\u003e be relative to an \u003ccode\u003eH2\u003c/code\u003e? What about an \u003ccode\u003eH3\u003c/code\u003e?\u003c/li\u003e\n\u003cli\u003eWhat properties should links have? Underline or no underline?\nWhich color for the normal state versus the hover state? Should the visited link state be different?\u003c/li\u003e\n\u003cli\u003eHow should the content appear when on a desktop machine versus a\nmobile device?\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAs you ask yourself these questions, your focus is on the \u003cem\u003eaesthetic\u003c/em\u003e quality\nof the page. For each bit of \u003cem\u003econtent\u003c/em\u003e, we can define a \u003cstrong\u003epresentation rule\u003c/strong\u003e\nthat will change the way the HTML is displayed.\u003c/p\u003e\n\n\u003ch2\u003eList the Components of CSS\u003c/h2\u003e\n\n\u003cp\u003eFor each \u003cstrong\u003epresentation rule\u003c/strong\u003e, there are 3 things to keep in mind:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat is the specific HTML we want to style?\u003c/li\u003e\n\u003cli\u003eWhat are the qualities we want to modify (e.g. the properties of text\nin a paragraph)?\u003c/li\u003e\n\u003cli\u003e\n\u003cem\u003eHow\u003c/em\u003e do we want to modify the qualities of the element (e.g. font\nfamily, font color, font size, line height, letter spacing, etc.)?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eOnce you've decided what to modify and how we can start writing CSS rules.\u003c/p\u003e\n\n\u003cp\u003eCSS \u003cstrong\u003eselectors\u003c/strong\u003e are a way of declaring which HTML elements you wish to style.\nSelectors can appear a few different ways:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe type of HTML element(\u003ccode\u003eh1\u003c/code\u003e, \u003ccode\u003ep\u003c/code\u003e, \u003ccode\u003ediv\u003c/code\u003e, etc.)\u003c/li\u003e\n\u003cli\u003eThe value of an element's \u003ccode\u003eid\u003c/code\u003e or \u003ccode\u003eclass\u003c/code\u003e (\u003ccode\u003e\u0026lt;p id='idvalue'\u0026gt;\u0026lt;/p\u0026gt;\u003c/code\u003e, \u003ccode\u003e\u0026lt;p class='classname'\u0026gt;\u0026lt;/p\u0026gt;\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003eThe value of an element's attributes (\u003ccode\u003evalue=\"hello\"\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003eThe element's relationship with surrounding elements (a \u003ccode\u003ep\u003c/code\u003e within an element\nwith class of \u003ccode\u003e.infobox\u003c/code\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFor example, if you want the body of the page to have a black background, your\nselector syntax may be \u003ccode\u003ehtml\u003c/code\u003e or \u003ccode\u003ebody\u003c/code\u003e. For anchors, your selector would be\n\u003ccode\u003ea\u003c/code\u003e. A few more examples are listed below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003e/*\nThe CSS comment syntax is text between \"slash-star\" and \"star-slash\"\n*/\n\n/*\nselects all anchor tag elements in the document (e.g. \u0026lt;a href=\"page-link.html\"\u0026gt;Page Link\u0026lt;/a\u0026gt;)\n*/\na\n\n/*\nselects all headers of type h3 in the document (e.g. \u0026lt;h3\u0026gt;Type selectors\u0026lt;/h3\u0026gt;)\n*/\nh3\n\n/*\nselects all paragraph elements in the document (e.g. \u0026lt;p\u0026gt;Type selectors are used\nto...\u0026lt;/p\u0026gt;)\n*/\np\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors\"\u003eType selectors documentation\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe element type \u003ccode\u003eclass\u003c/code\u003e is a commonly used selector. Class selectors are used\nto \u003cstrong\u003eselect all elements that share a given class name\u003c/strong\u003e. The class selector\nsyntax is: \u003ccode\u003e.classname\u003c/code\u003e. Prefix the class name with a '.'(period).\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003e/*\nselect all elements that have the 'important-topic' classname (e.g. \u0026lt;h1 class='important-topic'\u0026gt;\nand \u0026lt;h1 class='important-topic'\u0026gt;)\n*/\n.important-topic\n\n/*\nselect all elements that have the 'welcome-message' classname (e.g. \u0026lt;p class='helpful-hint'\u0026gt;\nand \u0026lt;p class='helpful-hint'\u0026gt;)\n*/\n.helpful-hint\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eYou can also use the \u003ccode\u003eid\u003c/code\u003e selector to style elements. However, \u003cstrong\u003ethere should\nbe only one element with a given id\u003c/strong\u003e in an HTML document. This can make\nstyling with the ID selector ideal for one-off styles. The \u003ccode\u003eid\u003c/code\u003e selector syntax\nis: \u003ccode\u003e#idvalue\u003c/code\u003e. Prefix the id attribute of an element with a \u003ccode\u003e#\u003c/code\u003e (which is\ncalled \"octothorpe,\" \"pound sign\", or \"hashtag\").\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003e/*\nselects the HTML element with the id 'main-header' (e.g. \u0026lt;h1 id='main-header'\u0026gt;)\n*/\n#main-header\n\n/*\nselects the HTML element with the id 'welcome-message' (e.g. \u0026lt;p id='welcome-message'\u0026gt;)\n*/\n#welcome-message\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/ID_selectors\"\u003eid selectors documentation\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003eDeclare CSS Properties and Values\u003c/h2\u003e\n\n\u003cp\u003eEach element has a list of qualities that can be styled.  CSS \"property\" names\nidentify those qualities. For text styling, examples of property names include\ntext \u003ccode\u003ecolor\u003c/code\u003e, \u003ccode\u003etext-align\u003c/code\u003e and \u003ccode\u003eline-height\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eCSS Property Values are directly related to property names. If you are working\nwith the \u003ccode\u003ecolor\u003c/code\u003e property, the value could be a named color such as \u003ccode\u003ered\u003c/code\u003e, or\n\u003ccode\u003e#660000\u003c/code\u003e. Some properties have their values set with words, others with\nnumbers, and some can take both.\u003c/p\u003e\n\n\u003cp\u003eA CSS property name with a CSS property value is a \u003cstrong\u003eCSS declaration\u003c/strong\u003e.\nTo apply a CSS declaration like \u003ccode\u003ecolor: blue\u003c/code\u003e to a specific HTML\nelement, you need to combine your CSS declaration with a CSS selector. The\nassociation between one or more CSS declarations and a CSS selector is called a\n\u003cstrong\u003eCSS declaration block\u003c/strong\u003e. CSS declarations (one or more) that applied to a\nspecific selector are wrapped by curly braces (\u003ccode\u003e{ }\u003c/code\u003e).  Each declaration inside\na declaration block \u003cstrong\u003emust\u003c/strong\u003e be separated by a semi-colon (\u003ccode\u003e;\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eBelow is a sample CSS declaration block.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003eselector {\n  color: blue;\n}\n/*\nThis is a css declaration for a selector\n'color' is a property name and 'blue' is a css property value\n!!!!! CSS declarations must end with a semi-colon (;) !!!!!\n*/\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eHere's a more complete example declaration block.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003e/*\nThe CSS declaration block below:\n* Will apply to all `h1` elements\n* Will change the text color to blue\n* Will set the font family to Georgia\n*/\nh1 {\n  color: blue;\n  font-family: Georgia;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWith the combination of HTML and CSS, you are able to define content, structure, and style for websites. In this lesson, you learned about the components of CSS and how to declare CSS properties and values in declaration blocks. For example, you can use a CSS selector like \u003ccode\u003eh1\u003c/code\u003e or \u003ccode\u003ep\u003c/code\u003e paired with a declaration block to change the display of that element.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-intro-to-css\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-intro-to-css\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-intro-to-css/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"the-client-server-model","title":"The Client Server Model","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-the-client-server-model\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-the-client-server-model/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll look at the relationship between clients and servers.  The Client/server architecture offers an unlimited number of communication possibilities, and it is what makes the Internet \u003cstrong\u003epossible\u003c/strong\u003e. We'll cover a basic understanding of the client/server model which will later be used for calling an API. It is beyond the scope of this lesson to cover an exhaustive resource for client/server architecture--instead, we'll focus on the primary principles of client/server communication.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eMap the client server model process\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eThe Client Server Model\u003c/h2\u003e\n\n\u003cp\u003eThe client server model of communication technologies is a set of distributed application architecture and network operations that manages the workloads between the providers of a service, called \u003cstrong\u003eservers\u003c/strong\u003e, and service requester, called \u003cstrong\u003eclients\u003c/strong\u003e. \u003c/p\u003e\n\n\u003cp\u003eAlthough the client server model can be used by programs within an individual computer, we'll focus on the aspect that deals with networked environments. In this case, the client set up a connection to the server over a local area network (LAN), a wide-area network (WAN) such as the Internet. Have you ever played Xbox Live or used the PlayStation Network? Your Xbox One is the client, and when it logs into the network, it contacts the Xbox Live servers to retrieve gaming resources like updates, video, and game demos.\u003c/p\u003e\n\n\u003cp\u003eA typical multi-layered client server architecture that most of us use in everyday life can be shown as below. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/images/new_cs3.png\" width=\"400\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eWhat is a Client?\u003c/h3\u003e\n\n\u003cp\u003eA client is a computer hardware device or software that requests a service made available by a server. The server is often (but not always) located on a separate physical computer.\u003c/p\u003e\n\n\u003ch3\u003eWhat is a Server?\u003c/h3\u003e\n\n\u003cp\u003eA server is a physical computer dedicated to run services to serve the needs of clients. Depending on the service that is running, it could be a file server, database server, home media server, print server, email server or a \u003cstrong\u003eweb server\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch2\u003eClient/Server Model on the Web\u003c/h2\u003e\n\n\u003cp\u003eThe idea of a Client and Server communicating over a network is what makes viewing websites  and interacting with Web applications (like Gmail, Facebook, LinkedIn) possible. This model is a way to describe the give-and-take relationship between the client and server in a Web application and governs how information passes between computers. \u003c/p\u003e\n\n\u003cp\u003eLet's see what a basic web application looks like that takes in a request from a web client and serves accordingly. \u003c/p\u003e\n\n\u003ch2\u003eWeb Applications\u003c/h2\u003e\n\n\u003cp\u003eA Web application (Web app) is an application program that is stored on a remote server and delivered over the Internet through a browser interface. Web services are Web apps by definition and many, although not all, websites contain Web apps. Any website component that performs some function for the user qualifies as a Web app. Google’s search engine is a web app, yet its root concept is hardly different from a phone directory that enables you to search for names or numbers. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/images/new_apps.png\" width=\"400\"\u003e\u003c/p\u003e\n\n\u003cp\u003eMost web apps actually use a browser interface for interaction, i.e. end users request access and request information/service from these applications through a modern web browser interface. There are hundreds of ways to build and configure a Web application but most of them follow the same basic structure: a web client, a web server, and a database.\u003c/p\u003e\n\n\u003ch3\u003eThe Web client\u003c/h3\u003e\n\n\u003cp\u003eThe client is what the end user interacts with. \"Client-side\" code is actually responsible for most of what a user actually sees. For requesting some information as a web page, the client side may be responsible for: includes:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e Defining the structure of the Web page \u003c/li\u003e\n\u003cli\u003e Setting the look and feel of the Web page \u003c/li\u003e\n\u003cli\u003e Implementing a mechanism for responding to user interactions (clicking buttons, entering text, etc.)\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eMost of these tasks are managed by HTML/CSS/JavaScript-like technologies to structure the information, style of the page and provide interactive objects for navigation and focus. \n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/images/new_clientserver.png\" width=\"400\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eThe Web Server\u003c/h3\u003e\n\n\u003cp\u003eA web server in a Web application is what listens to requests coming in from the clients. When you set up an HTTP (HyperText Transfer Protocol - Language of the internet) server, we set it up to listen to a port number. A port number is always associated with the IP address of a computer. You can think of ports as separate channels on a computer that we can use to perform different tasks: one port could be surfing \u003ca href=\"http://www.facebook.com\"\u003ewww.facebook.com\u003c/a\u003e while another fetches your email. This is possible because each of the applications (the Web browser and the email client) use different port numbers.\u003c/p\u003e\n\n\u003cp\u003eOnce you've set up an HTTP server to listen to a specific port, the server waits for client requests coming to that specific port. After authenticating the client, the server performs any actions stated by the request and sends any requested data via an HTTP response.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/./images/new_server.png\" width=\"800\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eThe Database\u003c/h3\u003e\n\n\u003cp\u003eDatabases are the foundations of Web architecture. An SQL/NoSQL or a similar type of database is a place to store information so that it can easily be accessed, managed, and updated. If you're building a social media site, for example, you might use a database to store information about your users, posts, comments, etc. When a visitor requests a page, the data inserted into the page comes from the site's database, allowing real-time user interactions with sites like Facebook or apps like Gmail.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/images/new_CSModes.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn the example image above, we can see the above-mentioned setup in action. A browser sends a request to a web server by calling its domain i.e. \u003ca href=\"http://www.google.com\"\u003ewww.google.com\u003c/a\u003e. Based on who the requester is, the server collects necessary information for an SQL database. This information is wrapped as HTML code and sent back to the client. The web browser reads the structuring and styling information embedded within HTML and displays the page to the user accordingly. \u003c/p\u003e\n\n\u003cp\u003eThere is a lot of details on client/server architectures and how they manifest themselves on the Internet. We'll focus a bit more on the ideas highlighted in this section by setting up a client and making requests in Python. These skills will help us request data from the servers for our analytical experiments. here are some extra resources for you if you want to dig deeper into the client server model and how it is set up for many different architectures. \u003c/p\u003e\n\n\u003ch2\u003eFurther Reading\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.lifewire.com/introduction-to-client-server-networks-817420\"\u003eIntroduction to Client Server Networks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.researchgate.net/publication/271295146_Client-Server_Model\"\u003eClient Server Model\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://spin.atomicobject.com/2015/04/06/web-app-client-side-server-side/\"\u003eWeb Application Architecture\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we looked at the basics of the client server model and focused on how this model is implemented for web-based applications. We looked at the role of web clients, web servers, and databases that carry client information. In the following lessons, we'll see how to implement these ideas using Python! \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-the-client-server-model\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-the-client-server-model\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-the-client-server-model/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"blogging-overview","title":"Blogging Overview","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-blogging-overview\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-blogging-overview\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-blogging-overview/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this lesson, we discuss how to write good blog posts that meet Flatiron School's requirements.\u003c/p\u003e  \u003ch2\u003eObjectives\u003c/h2\u003e  \u003cp\u003eThis lesson covers...\u003c/p\u003e  \u003cul\u003e \u003cli\u003eWhy blogging is valuable\u003c/li\u003e \u003cli\u003eTopics to blog about\u003c/li\u003e \u003cli\u003eWhat makes for a good blog post\u003c/li\u003e \u003cli\u003eHow to start your blog\u003c/li\u003e \u003cli\u003eFlatiron School blog requirements \u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eWhy Should I Blog?\u003c/h2\u003e  \u003cp\u003eBlogging has many benefits:\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003cstrong\u003eDevelop your written communication skills.\u003c/strong\u003e Your writing ability will be critical to your success when completing job applications and presenting your work to colleagues. Blogging is great practice for identifying and clearly communicating the most important points of any subject.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cstrong\u003eDemonstrate your talent to employers.\u003c/strong\u003e Potential employers will review your blog to determine whether to offer you an interview or a job. Some students have even been invited to interview or exempted from technical interviews based on their blogs.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cstrong\u003eStrengthen your knowledge.\u003c/strong\u003e Blogging helps you explore new topics, deepen your understanding, and crystallize what you've learned.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cstrong\u003eHelp your peers and the broader community.\u003c/strong\u003e Have you ever Googled a question you had and found the answer on a blog? Writing blog posts helps others who are following in your footsteps!\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eWhat Should I Blog About?\u003c/h2\u003e  \u003cp\u003eHere are some blog topic ideas:\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003cp\u003eWhy did you decide to learn data science?\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eDescribe how a DS technique works, when you might use it, and its strengths/weaknesses.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eSummarize an End of Phase Project by explaining your problem, the dataset, your methodology, and your results.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eDive into something that you want to learn more about, maybe because you find it challenging or it wasn't covered in the course.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eWrite a tutorial to help aspiring data scientists to implement a tool or method.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eFind an interesting data science paper and summarize why it is important. This can be a new paper from the past few months, or you can refer to \u003ca href=\"https://docs.google.com/spreadsheets/d/1UYmAT13AAknrOatzLeeAsN4tS7ENjn2fpJNGzOZ67rQ/edit?usp=sharing\"\u003ethis spreadsheet\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eWhat Does A Good Blog Post Look Like?\u003c/h2\u003e  \u003cp\u003eWe recommend you take a look at our \u003ca href=\"https://drive.google.com/drive/folders/1UBiRCRLzVP5CHU3PJNwoMZAe3ajUBm2a?usp=sharing\"\u003eblog templates\u003c/a\u003e and \u003ca href=\"https://docs.google.com/document/d/1eqL8Dsj7dH7s_MRnf_4-3kCiSz72POHTfb-sBRN5Zhs/edit?usp=sharing\"\u003eexamples\u003c/a\u003e to get an idea for what makes a blog post good.\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003cp\u003eStrike a balance between providing a meaningful investigation of your topic and being concise. Constrain the scope so it will be interesting and digestible in about 1000-3000 words (this is not a firm limit).\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\n\u003cp\u003eUse clear and consistent formatting to make your content accessible and professional-looking.\u003c/p\u003e  \u003cul\u003e \u003cli\u003eWhen presenting code, use code snippets instead of screenshots.\u003c/li\u003e \u003cli\u003eMake URLs into hyperlinks that are easy for readers to click into.\u003c/li\u003e \u003cli\u003eUse headings to provide structure and flow to your post.\u003c/li\u003e \u003c/ul\u003e\n\u003c/li\u003e \u003cli\u003e\u003cp\u003eCite and link to resources you used to write your post.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eHow Do I Start My Blog?\u003c/h2\u003e  \u003cp\u003eIf you already have a professional blog that you'd like to use for your data science content, you can add your posts to that. Otherwise, you will need to start a new blog. If you have a personal blog, you should avoid using it for this purpose so that you can continue using it for personal content without worrying about how it might be perceived by potential employers.\u003c/p\u003e  \u003cp\u003eThere are multiple blogging platforms to choose from that make it easy to start a blog, here are some of our favorites:\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003ca href=\"https://www.blogger.com/\"\u003eBlogger\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"https://dev.to/\"\u003edev.to\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"https://pages.github.com/\"\u003eGitHub Pages\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"https://medium.com/\"\u003eMedium\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"https://wordpress.com/\"\u003eWordpress\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eDifferent platforms have different pros and cons, so do a little research to decide what is best for you.\u003c/p\u003e  \u003ch2\u003eBlog Requirements\u003c/h2\u003e  \u003cp\u003eTo succeed in your career transition and graduate from Flatiron School, you must complete the following activities. These requirements are designed to give you the best opportunity to deepen your knowledge, practice communication skills, and showcase yourself to potential employers.\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003cp\u003eSet up a publicly accessible blog \u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003ePublish at least four blog posts on it, including \u003cstrong\u003eone per Phase for Phases 1-4\u003c/strong\u003e\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\n\u003cp\u003eSubmit URLs to your posts \u003cstrong\u003eby the end of each Phase\u003c/strong\u003e in the Blog Post assignments\u003c/p\u003e  \u003cul\u003e \u003cli\u003eThese assignments are located in the Milestones topics of the Phase 1-4 Canvas courses\u003c/li\u003e \u003c/ul\u003e\n\u003c/li\u003e \u003cli\u003e\n\u003cp\u003eWrite blog posts that...\u003c/p\u003e  \u003cul\u003e \u003cli\u003eDiscuss data science topics\u003c/li\u003e \u003cli\u003eAre composed primarily of original material you wrote\u003c/li\u003e \u003cli\u003eInclude proper attribution\u003c/li\u003e \u003cli\u003eHave high-quality content and formatting\u003c/li\u003e \u003cli\u003eAre something you would proudly show to a potential employer\u003c/li\u003e \u003c/ul\u003e\n\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eAfter you submit your blog posts, your teacher will grade them as Complete or Incomplete. Your blogs must all be submitted on time and receive Complete grades in order to continue through your program.\u003c/p\u003e  \u003cp\u003e✨Have fun and happy blogging!✨\u003c/p\u003e","frontPage":false},{"exportId":"nosql-databases-summary","title":"NoSQL Databases - Summary","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-recap-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-recap-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe began this section by comparing and contrasting relational/SQL databases with the NoSQL databases. The four different kinds of NoSQL databases are: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDocument Stores\u003c/li\u003e\n\u003cli\u003eKey-Value Stores\u003c/li\u003e\n\u003cli\u003eColumn Stores\u003c/li\u003e\n\u003cli\u003eGraph Databases\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eMongoDB\u003c/h2\u003e\n\n\u003cp\u003eNext, we explored how to install \u003cstrong\u003e\u003cem\u003eMongoDB\u003c/em\u003e\u003c/strong\u003e and get the \u003cstrong\u003e\u003cem\u003eMongoDB Server\u003c/em\u003e\u003c/strong\u003e up and running. We learned some commands that we could use to interact with mongo right there in the server shell, and then focused on connecting to our MongoDB server with Python. \u003c/p\u003e\n\n\u003cp\u003eYou should remember the following high-level takeaways from MongoDB:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eYou use the \u003ccode\u003epymongo\u003c/code\u003e library and a little boilerplate code to connect to the MongoDB database. \u003c/li\u003e\n\u003cli\u003eIn MongoDB, records are referred to as \u003cstrong\u003e\u003cem\u003eDocuments\u003c/em\u003e\u003c/strong\u003e. \u003c/li\u003e\n\u003cli\u003eWe can create groups of documents called \u003cstrong\u003e\u003cem\u003eCollections\u003c/em\u003e\u003c/strong\u003e. \u003c/li\u003e\n\u003cli\u003eRecords are inserted by passing in our data as Python dictionaries. \n\n\u003cul\u003e\n\u003cli\u003eWe can insert a single record with our collection object's \u003ccode\u003e.insert_one()\u003c/code\u003e method. \u003c/li\u003e\n\u003cli\u003eWe can insert many records by creating a list of dictionaries and passing the entire list to the collection object's \u003ccode\u003e.insert_many()\u003c/code\u003e method. \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWe can write queries by using the collection object's \u003ccode\u003e.find()\u003c/code\u003e method. \u003c/li\u003e\n\u003cli\u003eWe can \u003cstrong\u003e\u003cem\u003efilter\u003c/em\u003e\u003c/strong\u003e our queries by passing in the key-value pairs to filter by. \u003c/li\u003e\n\u003cli\u003eWe can also use logic on our filters by making use of \u003cstrong\u003e\u003cem\u003emodifiers\u003c/em\u003e\u003c/strong\u003e. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eCongrats! You are now a (No)SQL wizard! It doesn't matter whether the data you want is stored in a SQL or a NoSQL database, you can access it with ease. \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-nosql-databases-section-recap-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-nosql-databases-section-recap-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-recap-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"data-visualization-best-practices-and-common-mistakes","title":"Data Visualization - Best Practices and Common Mistakes","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn some best practices for creating high-quality data visualizations, as well as some common mistakes to avoid!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eChoose a type of visualization that is appropriate for a given set of data\u003c/li\u003e\n\u003cli\u003eDescribe how some types of visualizations can be misleading to viewers\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCreating High-Quality Data Visualizations\u003c/h2\u003e\n\n\u003cp\u003eCreating your own data visualizations can be trickier than it looks. Not because they're hard to code, but because there are so many different stylistic choices you have to make! Most of Data Science is based in math, where there is a probably correct answer. Unfortunately, there is no \"right answer\" when it comes to building the best data visualization for a given task or project. However, there are some good rules we can follow, and some common mistakes we can avoid. The goal of this lesson is to get you thinking about both of them by looking at some real-world examples. \u003c/p\u003e\n\n\u003ch2\u003eDon't: Use a Pie Chart\u003c/h2\u003e\n\n\u003cp\u003eFrom the Wikipedia page on Pie Charts:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\"Pie charts are very widely used in the business world and the mass media. However, they have been criticized, and many experts recommend avoiding them, pointing out that research has shown it is difficult to compare different sections of a given pie chart, or to compare data across different pie charts. Pie charts can be replaced in most cases by other plots such as the bar chart, box plot or dot plots.\"\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThis is the \u003cem\u003esecond paragraph\u003c/em\u003e on the page. What does this tell us? Pie charts are such a bad choice for data visualizations that it's own Wikipedia page starts with a warning against using them!\u003c/p\u003e\n\n\u003cp\u003eSo why are Pie Charts a bad choice? The simple answer is because humans don't think in radians, and we aren't good at judging the area of a circle. For instance, take a look at the following infographic:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/bad_data_viz.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eInfographic from \u003ca href=\"https://www.vox.com/2014/8/20/6040435/als-ice-bucket-challenge-and-why-we-give-to-charity-donate\"\u003eVox\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIt takes a little while to get a feel for the information this misguided data visualization is trying to get across. It's hard to compare the different items, which is a problem, because the entire goal of this visualization is to show comparisons between the different diseases! \u003c/p\u003e\n\n\u003ch2\u003eDo: Choose the Right Tool for the Job\u003c/h2\u003e\n\n\u003cp\u003eConsider the following Pie Charts:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/piechart.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe pie charts all look pretty much the same. It's hard for us to tell the differences between them, especially when it comes to ranking the different colored sections by size in the each chart. However, when we examine the bar charts below the image,the differences in each become immediately apparent--you couldn't miss them if you tried. \u003c/p\u003e\n\n\u003cp\u003eWhen deciding what visualization to use, consider what information you're trying to communicate, and then pick the plot that communicates that information in the most obvious manner. \u003c/p\u003e\n\n\u003ch2\u003eDon't: Get Your Percentages Wrong\u003c/h2\u003e\n\n\u003cp\u003eThis one seems like an easy mistake to avoid, but it still happens all the time. Double check your math, and always double check your calculations! Nothing destroys a Data Scientist's credibility in front of a crowd like simple arithmetic errors or visualizations that don't match your numbers. \u003c/p\u003e\n\n\u003cp\u003eConsider the following infographic, and try to figure out what is wrong with it:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_percentages.png\" height=\"75%\" width=\"75%\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThere are two things wrong with this infographic. The first is that the percentages add up to 243%, which makes no sense. We can intuit that respondents were allowed to choose more than one category, but that's too ambiguous on its own, and doesn't tell us anything!\u003c/p\u003e\n\n\u003cp\u003eThe second issue with this visualization is that the area taken up by each colored section doesn't fit with their corresponding percentages. In a good data visualization, if 78%  of the respondents chose the category represented by purple, then 78% of the person should be purple!  Mismatches like this undermine the message of your visualization because they are confusing and ambiguous. Avoid them!\u003c/p\u003e\n\n\u003ch2\u003eDon't: Make Your Visualizations Too Busy or Unique\u003c/h2\u003e\n\n\u003cp\u003eOne of the easier mistakes to make is to make visualizations that simply have so much going on that they are almost impossible to interpret. Consider the line graph below. Take a minute and try to make sense of it.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_bad-time-series.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAlmost impossible, right? Mistakes like this can be avoided by breaking information up into a series of smaller graphs, or by picking a more appropriate type of visualzation, when possible. \u003c/p\u003e\n\n\u003cp\u003eAnother big mistake is to try and create new, unique visualizations that people haven't seen before. While it may seem like a good idea to get creative, fight the urge. You don't see weird, unique stuff often for a reason--because they don't work well. Stick to formats people are used to. Switching up things to try and be unique can make your visualization confusing, or in the case below, purposefully misleading!\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_gun-deaths-in-FL.png\" width=\"400\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn this visualization, the author broke the common convention of having a line go up as a number goes up. Instead, the line goes down as the number of gun deaths in Florida increases. However, most people that view this visualization leave with the exact opposite impression, because they are paying more attention to the direction of the line than they are to the numbers on the y-axis. That's because we focus on \u003cstrong\u003e\u003cem\u003ePreattentive Attributes\u003c/em\u003e\u003c/strong\u003e first!\u003c/p\u003e\n\n\u003ch2\u003eDo: Use Preattentive Attributes\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003ePreattentive Attributes\u003c/em\u003e\u003c/strong\u003e are things that our eyes are drawn to. We can't help but notice them, because our brains are wired to. There will be times when you need a visualization to communicate a specific piece of information, that you want to make as obvious as possible. The best way to do this is to pick the right preattentive attribute to highlight this!\u003c/p\u003e\n\n\u003cp\u003eTake a look at some of the examples in the chart below: \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_preattentive-attributes.png\" width=\"700\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNote that preattentive attributes are not one size fits all. Most of them work well for certain types of data, but not others. Consider the following chart, and refer back to the preattentive attributes listed above and consider how they would look trying to highlight each different type of information. \u003c/p\u003e\n\n\u003ch2\u003eDon't: Use 3D Visualizations\u003c/h2\u003e\n\n\u003cp\u003eThe final mistake we'll cover today is the use of 3D Visualizations. While they may seem like a cool idea, in practice, they are almost always trouble. The reason for this is because they easily cause \u003cstrong\u003e\u003cem\u003eOcclusion\u003c/em\u003e\u003c/strong\u003e, which is just a fancy way of saying that the things in front block the things in back so that you can't see them! For example:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_occlusion.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNote that there may be some times where a 3D visualization may actually be your best choice, but those are almost always going to be related to visualizing a point cloud in a 3D space. If you absolutely have to use a 3D visualization (or any other sort of visualization where occlusion could be a problem), consider changing the opacity of the visualization to make items more see-through. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we saw many examples of bad data visualizations, and learned about how to make great data visualizations by avoiding these mistakes and following the best practices!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-data-viz-best-practices-common-mistakes\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-data-viz-best-practices-common-mistakes\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"nosql-databases-document-stores","title":"NoSQL Databases: Document Stores","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn more about NoSQL databases, and a specific NoSQL category, \u003cem\u003eDocument Stores\u003c/em\u003e. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:     \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe why NoSQL is useful\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDescribe situations when one would use NoSQL databases\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eList different NoSQL databases \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy NoSQL?\u003c/h2\u003e\n\n\u003cp\u003eRelational databases are a cornerstone of a modern technology. They're reliable, dependable, and they seem to be pretty much everywhere. Since their invention at IBM by Edgar Codd in 1970, they've rapidly grown to be used all over the place. Their creation allowed companies to track, store, and analyze data in ways that simply couldn't be done before. For the majority of situations, they're a great choice. However, as technology has progressed into the era of internet and smartphones, we've run into many different sorts of data that aren't a natural fit for a relational format. Let's examine a few of these situations, and see why NoSQL might be a better choice. \u003c/p\u003e\n\n\u003cp\u003eLet's assume that we need to store chat logs between customer service and customers through a web interface. These chats could be very short, or very long -- some chats may only be 2 or 3 messages, while others may conceivably be in the hundreds or thousands. For each message in the chat, we want to store metadata associated with the message, so that we can know things like which party sent the message, the time it was sent, the time the other party read the message, etc. This is a great use case for a NoSQL database, because it would be a very poor fit for a relational database. For starters, each chat can be any size, meaning that we can't just clearly define a table that links which messages belong to which chat. If every chat had only five messages, we might be able to make it work, with a column for \"message 1\", \"message 2\", and so on -- but we can't, because a chat has no set size, and can always grow larger in the future. A relational database would also waste a lot of space storing redundant information, and getting all the messages in a chat could result in some nasty runtimes for our SQL query if this data was stored in separate tables in something like the third normal format. \u003c/p\u003e\n\n\u003cp\u003eThere are several variants of NoSQL databases. They can be categorized into: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDocument Stores\u003c/li\u003e\n\u003cli\u003eKey-Value Stores\u003c/li\u003e\n\u003cli\u003eColumn Stores\u003c/li\u003e\n\u003cli\u003eGraph Databases\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIn this lesson, we will explore \u003cem\u003eDocument Stores\u003c/em\u003e. \u003c/p\u003e\n\n\u003ch2\u003eDocument Stores\u003c/h2\u003e\n\n\u003cp\u003eA \u003cstrong\u003e\u003cem\u003eDocument Store\u003c/em\u003e\u003c/strong\u003e is a database that stores records as unique documents in the database. These documents can be arbitrarily long, and can even contain other documents inside of them! The chat log example we saw above is a prime use case for a document store. In a document store, we could store each message and its accompanying metadata as a document, and then embed each of those documents in order in a chat document. In this way, we can easily access the data as needed. \u003c/p\u003e\n\n\u003cp\u003eIn these Document Stores, each document contains key-value pairs, with the actual data being stored in as the value. This makes Document Stores incredibly flexible, because each document can be unique. There is no constraint saying each document must have the same keys! This makes it great for working with data where we don't know what shape it will take (as we saw above, with chat logs that can be arbitrarily long or short), or perhaps when we don't know what data will be stored at all. This would be a problem in a relational database, because we would need to know what column the data belongs in before we could store it. With a Document Store, we can just create a key on the fly for the data that matters to us!\u003c/p\u003e\n\n\u003cp\u003eNote that while this flexibility makes it easy for us to store data on the fly, this also makes it harder for us to query data and get exactly what we need. Since each different document can potentially have its own \u003cstrong\u003e\u003cem\u003eSchema\u003c/em\u003e\u003c/strong\u003e, this means that we have to know what we are looking for. This also means that we have to be diligent in our naming conventions, because \u003ccode\u003echatLog\u003c/code\u003e is different than \u003ccode\u003eChatLog\u003c/code\u003e. This means that if we run a query across all documents to get all data with the key \u003ccode\u003echatLog\u003c/code\u003e, we'll completely miss any data where they key is written as \u003ccode\u003eChatLog\u003c/code\u003e!\u003c/p\u003e\n\n\u003ch5\u003ePopular  Document Store Databases: MongoDB and Couchbase\u003c/h5\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1/master/images/mongo-db-logo.png\" height=\"60%\" width=\"60%\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1/master/images/couchbase-logo.png\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned about the various sorts of NoSQL Databases in the market today. We dug into the similarities and differences between them all, and also looked at a few examples where a NoSQL Database is a more natural fit for storing data than a traditional relational database. \u003c/p\u003e\n\n\u003cp\u003eIn this lesson, we looked at examples where a NoSQL database is a more natural fit for storing data than a traditional relational database. We also looked at \u003cem\u003eDocument Stores\u003c/em\u003e, one of the few types of NoSQL databases. \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-nosql-document-stores-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-nosql-document-stores-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"sql-and-relational-databases-recap","title":"SQL and Relational Databases - Recap","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-recap-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-recap-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this section, you learned how to construct different \u003ccode\u003eSELECT\u003c/code\u003e queries in SQL. You then got some extra practice with constructing advanced queries and applied this knowledge to some real-world job interview questions!\u003c/p\u003e\n\u003ch2\u003eSELECT\u003c/h2\u003e\n\u003cp\u003eThe first thing you saw with SQL is how to select data from tables. You saw how to connect to a database and query basic data from a table using column names or the wildcard parameter \u003ccode\u003e*\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003eFilters\u003c/h2\u003e\n\u003cp\u003eAfter looking at basic \u003ccode\u003eSELECT\u003c/code\u003e statements, you then saw how to filter your selections using the \u003ccode\u003eWHERE\u003c/code\u003e clause.\u003c/p\u003e\n\u003ch2\u003eOrdering\u003c/h2\u003e\n\u003cp\u003eAlong with filtering, you also saw how to order your query selections. To do this, you use the \u003ccode\u003eORDER BY\u003c/code\u003e clause. Remember that the default behavior there is to return results in ascending order. You can verbosely specify this with the \u003ccode\u003eASC\u003c/code\u003e keyword, or modify the behavior to sort in descending order with the \u003ccode\u003eDESC\u003c/code\u003e keyword.\u003c/p\u003e\n\u003ch2\u003eGrouping\u003c/h2\u003e\n\u003cp\u003eNext up, you saw how to create aggregates with your data. This involved using the \u003ccode\u003eGROUP BY\u003c/code\u003e statement. You saw that you can both explicitly state the column names that you wish to group by or that you can use aliases for the columns using numbers such as 1,2,3. You also got to investigate some aggregate functions such as \u003ccode\u003eCOUNT()\u003c/code\u003e, \u003ccode\u003eMAX()\u003c/code\u003e, \u003ccode\u003eMIN()\u003c/code\u003e, and \u003ccode\u003eAVG()\u003c/code\u003e. Finally, you also saw that you can filter based on the results of aggregate functions using the \u003ccode\u003eHAVING\u003c/code\u003e clause.\u003c/p\u003e\n\u003ch2\u003eJoins\u003c/h2\u003e\n\u003cp\u003eAfter taking a look at more complex queries for a single table, you started to investigate how you could combine data from multiple tables. You did this using the \u003ccode\u003eJOIN\u003c/code\u003e clause. Remember that you can specify the links between tables with the \u003ccode\u003eUSING()\u003c/code\u003e clause if the column name is identical between the tables or the \u003ccode\u003eON\u003c/code\u003e clause if you must specify the link more manually. You also saw how to alias table names during your joins.\u003c/p\u003e\n\u003ch2\u003eSubqueries\u003c/h2\u003e\n\u003cp\u003eWith some of the more complicated join and aggregate scenarios that began to arise, you also saw how to use subqueries to break down complex queries into parts. You also saw how you could potentially create aggregates of aggregates using subqueries.\u003c/p\u003e\n\u003ch2\u003eDatabase Administration\u003c/h2\u003e\n\u003cp\u003eYou saw how to create databases, tables, and subsequently populate those containers with data. You also saw how to delete or modify information. Database administration is a complex topic that has a lot more considerations including user permissions and improving query execution time, but this was a solid introduction to get you up and running.\u003c/p\u003e\n\u003ch2\u003eQueries and Technical Questions in Interviews\u003c/h2\u003e\n\u003cp\u003eYou can expect to run into SQL questions on job interviews. Often times when asked to write a query, you'll be given a hypothetical situation and asked to write a query, without having an ERD diagram or tables to look at. When working through these questions, it's important to clarify your assumptions, and to ask questions to make sure that your assumptions are actually correct! Once you have the information you need, be sure to write clean, well-structured SQL code. Consider capitalizing the SQL keywords, and use semantic variable names for any tables or fields you have to assume exist when writing your queries. This is also a situation where thinking out loud and engaging your interviewer is a great strategy. They're likely trying to evaluate how you would work on a team, just as much as they're trying to evaluate your technical knowledge or your ability to get data from a relational database.\u003c/p\u003e\n\u003ch2\u003eOpen-ended Questions in Interviews\u003c/h2\u003e\n\u003cp\u003eYou may also encounter open-ended SQL questions where there is no single correct solution. When faced with these sorts of interview questions, have an opinion, and be ready to back it up with your rationale! For these sorts of questions, interviewers are often trying to evaluate \u003cem\u003ehow\u003c/em\u003e you approach problems and evaluate your thought process, so helping them understand your thought process is very important!\u003c/p\u003e\n\u003ch2\u003eThe Internet Is Your Friend\u003c/h2\u003e\n\u003cp\u003eAll of the real-world interview questions you worked through in this section came from popular interview sites such as Glassdoor. If you still feel a bit shaky about your ability to answer SQL/relational database questions in an interview, that's okay -- practice makes perfect! Don't be afraid to peruse sites like Glassdoor and others to look for the types of SQL questions you can expect to see during the interview process. Just make sure that when you look at the questions, you try to answer them yourself first before looking at the answers others have posted!\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eCongratulations! You should have a good amount of SQL skills to harness in your data adventures going forward! While you are apt to use other tools such as Pandas to do a lot of your exploratory analysis and data manipulation, databases provide a much more powerful data storage option then flat files like csv or excel workbooks. You also got some experience practicing the type of technical questions you will encounter when interviewing for jobs. The more practice you get, the more comfortable you will be when you're actually interviewing!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-sql-recap-v2-1\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-sql-recap-v2-1\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-sql-recap-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\n\u003c/footer\u003e","frontPage":false},{"exportId":"statistical-methods-in-pandas-2","title":"Statistical Methods in Pandas","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll learn how to use some of the key summary statistics methods in Pandas.\u003c/p\u003e\n\n\u003ch2\u003eObjectives:\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCalculate summary statistics for a series and DataFrame \u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003e.apply()\u003c/code\u003e or \u003ccode\u003e.applymap()\u003c/code\u003e methods to apply a function to a pandas series or DataFrame\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eGetting DataFrame-Level Summary Statistics\u003c/h2\u003e\n\n\u003cp\u003eWhen working with a new dataset, the first step is always to begin to understand what makes up that dataset. The Pandas DataFrame class contains two built-in methods that make this very easy for us. \u003c/p\u003e\n\n\u003ch3\u003eUsing \u003ccode\u003edf.info()\u003c/code\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eThe \u003ccode\u003edf.info()\u003c/code\u003e method provides us with summary \u003cstrong\u003e\u003cem\u003emetadata\u003c/em\u003e\u003c/strong\u003e about our DataFrame -- that is, it gives us data about our dataset, such as how many rows and columns it contains, and what data types they are stored as.  Let's demonstrate this by reading in the Titanic dataset and calling the \u003ccode\u003e.info()\u003c/code\u003e method on the DataFrame. \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003eimport pandas as pd\ndf = pd.read_csv('titanic.csv', index_col=0)\ndf.info()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e\u0026lt;class 'pandas.core.frame.DataFrame'\u0026gt;\nInt64Index: 891 entries, 0 to 890\nData columns (total 12 columns):\nPassengerId    891 non-null int64\nSurvived       891 non-null int64\nPclass         891 non-null object\nName           891 non-null object\nSex            891 non-null object\nAge            714 non-null float64\nSibSp          891 non-null int64\nParch          891 non-null int64\nTicket         891 non-null object\nFare           891 non-null float64\nCabin          204 non-null object\nEmbarked       889 non-null object\ndtypes: float64(2), int64(4), object(6)\nmemory usage: 90.5+ KB\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eAs we can see from the output above, the \u003ccode\u003e.info()\u003c/code\u003e method provides us with great information about the characteristics of the DataFrame, without telling us anything about the data it actually contains. \u003c/p\u003e\n\n\u003cp\u003eExamine the output above, and take note of the important things it tells us about the DataFrame, such as:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe number of columns and rows in the DataFrame\u003c/li\u003e\n\u003cli\u003eThe data type of the data each column contains\u003c/li\u003e\n\u003cli\u003eHow many values each column contains (NaNs are not counted)\u003c/li\u003e\n\u003cli\u003eThe memory footprint of the DataFrame\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis sort of information about a dataset is called \u003cstrong\u003e\u003cem\u003emetadata\u003c/em\u003e\u003c/strong\u003e, since it's data about our data. \u003c/p\u003e\n\n\u003ch3\u003eUsing \u003ccode\u003e.describe()\u003c/code\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eThe next step in Exploratory Data Analysis (EDA) is usually to dig into the summary statistics of the dataset, and get a feel for the data each column contains.  Rather than force us to deal with the tedium of doing this individually for every column, Pandas DataFrames provide the handy \u003ccode\u003edf.describe()\u003c/code\u003e method which calculates the basic summary statistics for each column for us automatically. \u003c/p\u003e\n\n\u003cp\u003eSee the example in the cell below.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.describe()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cdiv\u003e\n\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003ePassengerId\u003c/th\u003e\n      \u003cth\u003eSurvived\u003c/th\u003e\n      \u003cth\u003eAge\u003c/th\u003e\n      \u003cth\u003eSibSp\u003c/th\u003e\n      \u003cth\u003eParch\u003c/th\u003e\n      \u003cth\u003eFare\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003ecount\u003c/th\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e714.000000\u003c/td\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003emean\u003c/th\u003e\n      \u003ctd\u003e446.000000\u003c/td\u003e\n      \u003ctd\u003e0.383838\u003c/td\u003e\n      \u003ctd\u003e29.699118\u003c/td\u003e\n      \u003ctd\u003e0.523008\u003c/td\u003e\n      \u003ctd\u003e0.381594\u003c/td\u003e\n      \u003ctd\u003e32.204208\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003estd\u003c/th\u003e\n      \u003ctd\u003e257.353842\u003c/td\u003e\n      \u003ctd\u003e0.486592\u003c/td\u003e\n      \u003ctd\u003e14.526497\u003c/td\u003e\n      \u003ctd\u003e1.102743\u003c/td\u003e\n      \u003ctd\u003e0.806057\u003c/td\u003e\n      \u003ctd\u003e49.693429\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003emin\u003c/th\u003e\n      \u003ctd\u003e1.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.420000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e25%\u003c/th\u003e\n      \u003ctd\u003e223.500000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e20.125000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e7.910400\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e50%\u003c/th\u003e\n      \u003ctd\u003e446.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e28.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e14.454200\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e75%\u003c/th\u003e\n      \u003ctd\u003e668.500000\u003c/td\u003e\n      \u003ctd\u003e1.000000\u003c/td\u003e\n      \u003ctd\u003e38.000000\u003c/td\u003e\n      \u003ctd\u003e1.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e31.000000\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003emax\u003c/th\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e1.000000\u003c/td\u003e\n      \u003ctd\u003e80.000000\u003c/td\u003e\n      \u003ctd\u003e8.000000\u003c/td\u003e\n      \u003ctd\u003e6.000000\u003c/td\u003e\n      \u003ctd\u003e512.329200\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\n\u003cp\u003eAs we can see, the output of the \u003ccode\u003e.describe()\u003c/code\u003e method is very handy, and gives us relevant information such as:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ea \u003ccode\u003ecount\u003c/code\u003e of the number of values in each column, making it identify columns with missing values\u003c/li\u003e\n\u003cli\u003eThe mean and standard deviation of each column\u003c/li\u003e\n\u003cli\u003eThe minimum and maximum values found in each column\u003c/li\u003e\n\u003cli\u003eThe median (50%) and quartile values (25% \u0026amp; 75%) for each column\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eUse the \u003ccode\u003e.describe()\u003c/code\u003e method to quickly help you get a feel for your datasets when you start the Exploratory Data Analysis process. \u003c/p\u003e\n\n\u003ch2\u003eCalculating Individual Column Statistics\u003c/h2\u003e\n\n\u003cp\u003eIf we need to calculate individual statistics about a column, we can also do this easily.  Pandas DataFrames and Series objects come with a plethora of built-in methods to instantly calculate summary statistics for us. \u003c/p\u003e\n\n\u003cp\u003eSee the code blocks below for examples:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.mean()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003ePassengerId    446.000000\nSurvived         0.383838\nAge             29.699118\nSibSp            0.523008\nParch            0.381594\nFare            32.204208\ndtype: float64\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Fare'].mean()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e32.2042079685746\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Age'].quantile(.9)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e50.0\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Age'].median()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e28.0\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThere are many different statistical methods built into Pandas DataFrames -- these are just a few! We will not list all of them, but here are some common ones you'll probably make use of early and often:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003e.mode()\u003c/code\u003e -- the mode of the column\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.count()\u003c/code\u003e -- the count of the total number of entries in a column\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.std()\u003c/code\u003e --  the standard deviation for the column\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.var()\u003c/code\u003e -- the variance for the column\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.sum()\u003c/code\u003e -- the sum of all values in the column\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.cumsum()\u003c/code\u003e -- the cumulative sum, where each cell index contains the sum of all indices lower than, and including, itself.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eSummary Statistics for Categorical Columns\u003c/h3\u003e\n\n\u003cp\u003eObviously, we cannot calculate most summary statistics on columns that contain non-numeric data -- there's no way for us to find the mean of the letters in the \u003ccode\u003eEmbarked\u003c/code\u003e column, for instance.  However, there are some summary statistics we can use to help us better understand our categorical columns. \u003c/p\u003e\n\n\u003cp\u003eSee the examples in the cell below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Embarked'].unique()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003earray(['S', 'C', 'Q', nan], dtype=object)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Embarked'].value_counts()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003eS    644\nC    168\nQ     77\nName: Embarked, dtype: int64\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThese methods are extremely useful when dealing with categorical data! \u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e.unique()\u003c/code\u003e shows us all the unique values contained in the column. \u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e.value_counts()\u003c/code\u003e shows us a count for how many times each unique value is present in a dataset, giving us a feel for the distribution of values in the column. \u003c/p\u003e\n\n\u003ch3\u003eCalculating on the Fly with \u003ccode\u003e.apply()\u003c/code\u003e and \u003ccode\u003e.applymap()\u003c/code\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eSometimes, we'll need to make changes to our dataset, or to compute functions on our data that aren't built-in to Pandas.  We can do this by passing lambda values into the \u003ccode\u003eapply()\u003c/code\u003e method when working with Pandas series, and the \u003ccode\u003e.applymap()\u003c/code\u003e method when working with Pandas DataFrames. \u003c/p\u003e\n\n\u003cp\u003eNote that both of these do not mutate the original dataset -- instead, they return a copy of the Series or DataFrame containing the result. \u003c/p\u003e\n\n\u003cp\u003eSee the example in the cell below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003estring_df = df.applymap(lambda x: str(x))\nstring_df.info()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e\u0026lt;class 'pandas.core.frame.DataFrame'\u0026gt;\nInt64Index: 891 entries, 0 to 890\nData columns (total 12 columns):\nPassengerId    891 non-null object\nSurvived       891 non-null object\nPclass         891 non-null object\nName           891 non-null object\nSex            891 non-null object\nAge            891 non-null object\nSibSp          891 non-null object\nParch          891 non-null object\nTicket         891 non-null object\nFare           891 non-null object\nCabin          891 non-null object\nEmbarked       891 non-null object\ndtypes: object(12)\nmemory usage: 90.5+ KB\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edisplay(df['Age'].apply(lambda x: x**2).head())\n\ndf['Age'].head()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e0     484.0\n1    1444.0\n2     676.0\n3    1225.0\n4    1225.0\nName: Age, dtype: float64\n\n\n\n\n\n0    22.0\n1    38.0\n2    26.0\n3    35.0\n4    35.0\nName: Age, dtype: float64\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you learned how to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand and use the \u003ccode\u003edf.describe()\u003c/code\u003e and \u003ccode\u003edf.info()\u003c/code\u003e summary statistics methods \u003c/li\u003e\n\u003cli\u003eUse built-in Pandas methods for calculating summary statistics \u003c/li\u003e\n\u003cli\u003eApply a function to every element in a Series or DataFrame using \u003ccode\u003es.apply()\u003c/code\u003e and \u003ccode\u003edf.applymap()\u003c/code\u003e \u003c/li\u003e\n\u003c/ul\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-statistical-methods-in-pandas\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-statistical-methods-in-pandas\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"introduction-to-apis","title":"Introduction to APIs","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-apis\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-apis/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eAPIs\u003c/em\u003e\u003c/strong\u003e (short for \u003cstrong\u003e\u003cem\u003eApplication Programming Interfaces\u003c/em\u003e\u003c/strong\u003e) are an important aspect of the modern internet. APIs are what allows everything on the internet to play nicely with each other and work together. In this lesson, we'll learn all about what APIs are, what they are used for, and how they work. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to : \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain what an API is\u003c/li\u003e\n\u003cli\u003eList use cases for different types of APIs\u003c/li\u003e\n\u003cli\u003eSummarize why companies build APIs\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eApplication Programming Interface (API)\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAPI stands for \u003cstrong\u003eApplication Programming Interface\u003c/strong\u003e. \u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAn API is a communication protocol between 2 software systems. It describes the mechanism through which if one system \u003cstrong\u003erequests\u003c/strong\u003e some information using a predefined format, a remote system \u003cstrong\u003eresponds\u003c/strong\u003e with an outcome that gets sent back to the first system. \u003c/p\u003e\n\n\u003cp\u003eAPIs are a way of allowing 2 applications to interact with each other. This is an incredibly common task in modern web-based programs. For instance, if you've ever connected your facebook profile to another service such as Spotify or Instagram, this is done through APIs. An API represents a way for 2 pieces of software to interact with one another. Under the hood, the actual request and response is done as an \u003cstrong\u003e\u003cem\u003eHTTP Request\u003c/em\u003e\u003c/strong\u003e. The following diagram shows the \u003cstrong\u003e\u003cem\u003eHTTP Request/Response Cycle\u003c/em\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introduction-to-apis/master/images/new_client-server-illustration.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAPIs are a way of standardizing interactions with software. From the provider's standpoint, it makes sure that everyone will interact with their software in a way that they are expecting. From the user's standpoint, it provides easy instructions and methods for working with 3rd party software, which opens up a ton of useful benefits by allowing us to get data from other sources, or add functionality by incorporating services from 3rd party software!\u003c/p\u003e\n\n\u003ch3\u003eAn Example\u003c/h3\u003e\n\n\u003cp\u003ePokemon Go has been one of the most popular smartphone games, which requires a large ecosystem with complete information of routes and roads across the globe. Developers of the Pokemon could not have possibly coded such a complete world map. Instead, they used Google maps API and built their app on top of it. The following image shows the complete architecture that allows players of pokemon go to play a game which, in turn, responds by making geographical information related API calls to google maps.\u003cbr\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introduction-to-apis/master/images/new_api4.png\" width=\"750\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eWhat is an API made of ?\u003c/h3\u003e\n\n\u003cp\u003eAPIs are very common in the tech world, which means that are many, many different kinds that you're going to run into. While each API you work with will be unique in some way, there are some common traits you can expect to see overall. An API has three main components as listed below:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eAccess Permissions:\u003c/strong\u003e Is the user allowed to ask for data or services?\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eRequest:\u003c/strong\u003e The service being asked for (e.g., if I give you current location using GPS, tell me the map around that place - as we see in Pokemon Go).  A Request has two main parts:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eMethods:\u003c/strong\u003e Once the access is permitted, what questions can be asked.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eParameters:\u003c/strong\u003e Additional details that can be sent with requests or responses\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eResponse:\u003c/strong\u003e The data or service as a result of the request.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWe'll look more deeply at how to use these components in the upcoming lessons for this section. For now, our goal is to understand that APIs:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eProvide a standardized way of letting us interact with 3rd party software/services\u003c/li\u003e\n\u003cli\u003eConsist of a \u003cstrong\u003e\u003cem\u003eRequest\u003c/em\u003e\u003c/strong\u003e and a \u003cstrong\u003e\u003cem\u003eResponse\u003c/em\u003e\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eCan have special \u003cstrong\u003e\u003cem\u003eAccess Permissions\u003c/em\u003e\u003c/strong\u003e depending on the API and the user making the request. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we looked at an introduction to APIs, their basic understanding and main types of APIs.  In the following lessons, we dig into this in a bit more detail and see how to make API calls in Python. \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-introduction-to-apis\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-introduction-to-apis\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-apis/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"sql-and-relational-databases-introduction","title":"SQL and Relational Databases - Introduction","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-introduction-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-introduction-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll learn about SQL, which stands for Structured Query Language. It has been around since the 1970s and there are many different dialects of the language including MySQL, SQLite, and PostgreSQL, to name a few. Each of these has particularities such as specific functions or keywords for that specific implementation. All of these, however, have the same basic structures including keywords like \u003ccode\u003eSELECT\u003c/code\u003e for querying databases, and the same general database architecture. Toward the end of this section, you'll learn about more advanced SQL operations. You'll also get a chance to answer some SQL interview questions to help prepare you for your job search!\u003c/p\u003e\n\n\u003ch2\u003eThe Structure of SQL Databases\u003c/h2\u003e\n\n\u003cp\u003eSQL databases are the root container for data. Databases are a collection of tables. Each table is similar to a csv-file or a spreadsheet within an Excel workbook. That is, tables are two-dimensional objects with specific columns and associated entries organized into rows. To demonstrate, here is an outline of a database structure:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-sql-introduction-v2-1/master/images/Database-Schema.png\" width=\"700\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn the diagram, each rectangle is a table, with the table name listed at the top. In this case, we have 8 tables: productlines, products, orderdetails, employees, offices, customers, orders, and payments. Below each of the table names, we have a list of the various column names associated with that table. So for example, the productlines table has four columns: productLine, textDescription, htmlDescription and image. \u003c/p\u003e\n\n\u003ch3\u003eRelational Data\u003c/h3\u003e\n\n\u003cp\u003eSQL is designed to work with \u003cstrong\u003erelational data\u003c/strong\u003e. This really just means pieces of data that are related to each other. In the example above, data on the employees table has some relationship to data on the offices table, indicating that an employee may be associated with a specific office location. Likewise, certain orders are associated with certain customers. Lots of real world data is inherently related. For example, students have an association to a course, ingredients are related to a recipe.\u003c/p\u003e\n\n\u003cp\u003eYou may also note that some of these column names are preceded by an asterix (*). This indicates that this is the \u003cstrong\u003eprimary key\u003c/strong\u003e for the table. A primary key is a unique identifier for a table. That is, there can only be unique values for this column entry. lastName would not be a good choice for a primary key as it's common for people to have the same last names or even firstName + lastName pairings.\u003c/p\u003e\n\n\u003cp\u003eIf you look closely, you'll see that the columns that are the primary key for one table can also appear on other tables. This is known as a \u003cstrong\u003eforeign key\u003c/strong\u003e aka the primary key from a different (\"foreign\") table. This is the core idea of how data on different tables is associated in a relational database. If you were told a specific customerNumber, and then given a list of order data that included the customerNumber, you could determine which orders were placed by that customer by matching up the primary and foreign keys.\u003c/p\u003e\n\n\u003cp\u003eThe lines, circles, arrows, and tick marks are showing different categorizations on exactly how this data is linked. You'll learn much more about these relationships later.\u003c/p\u003e\n\n\u003ch2\u003eConnecting to and Querying SQL Databases\u003c/h2\u003e\n\n\u003cp\u003eYour initial primary use case of SQL will be querying data stored within databases. To do this, you connect to the database with some sort of tool. This could be via Python, as you'll see in the next lesson, the command line, or a GUI tool such as SQLWorkbench. Once you're connected to the database, you can then read and select data from the database, or even write data to the database. To retrieve data from one or more tables you usually use a \u003ccode\u003eSELECT\u003c/code\u003e statement. \u003c/p\u003e\n\n\u003cp\u003eA simple query would look something like this:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"SQL\"\u003eSELECT col1, col2, col3\nFROM table\nWHERE records match criteria\nLIMIT 100;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eDon't worry if this is confusing now, you'll soon learn what each line does. For now, just notice that queries start with the \u003ccode\u003eSELECT\u003c/code\u003e clause, followed by what you want to select. If selecting multiple columns, you separate them with a comma. Then you specify where that data is being retrieved from the using the \u003ccode\u003eFROM\u003c/code\u003e clause followed by the table name. Afterward, you can provide conditions such as filters or limits on the amount of data returned.\u003c/p\u003e\n\n\u003ch2\u003eInterview Practice\u003c/h2\u003e\n\n\u003cp\u003eData retrieval is the most foundational and arguably most important skill in a Data Scientist's toolbox. In your first job as a Data Scientist, you'll quickly learn that it's usually up to you to get the data you need to solve the problem at hand. This means that you need to be an expert at working with relational databases. You can know all the Python and Machine Learning and Statistics in the world, but they're useless if you don't have data to aim those skills at!\u003c/p\u003e\n\n\u003cp\u003eToward the end of this section, you'll review some of the more complex concepts you've learned about SQL queries. Then you'll test your knowledge of relational databases with a short quiz. Finally, you'll end with a lab that features real world interview questions pertaining to SQL and relational databases from major companies such as Facebook and Google!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you got a quick overview of what SQL is and saw an actual SQL query! Remember that there are multiple SQL dialects all with particular differences, but the overall language is generally fairly similar and interchangeable. You also learned that knowledge of SQL is important for job interviews since data retrieval is a foundational part of the data science process. \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-sql-introduction-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-sql-introduction-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-sql-introduction-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"json-and-apis-recap","title":"JSON and APIs - Recap","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-apis-recap-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-apis-recap-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you learned about the JSON file format, how to parse and navigate JSON files using the \u003ccode\u003ejson\u003c/code\u003e Python module. You also learned about the HTTP request/response cycle and using APIs. APIs are critical to software development, and they can be powerful tools for gathering data for data scientists.\u003c/p\u003e\n\n\u003cp\u003eBefore JSON files were widely adopted, XML files were used. You'll have a chance to learn about XML files in the Appendix for this section.\u003c/p\u003e\n\n\u003ch2\u003eKey Takeaways\u003c/h2\u003e\n\n\u003cp\u003eIn this section, we dug into a key format for storing and transferring data between applications - the JSON file format. We also covered APIs, which can provide access to a wide range of data that you might need as a data scientist.\u003c/p\u003e\n\n\u003cp\u003eKey takeaways include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eJSON (JavaScript Object Notation) is a widely adopted format for storing and accessing data. It requires slightly less typing than XML to represent the same information so it has become increasingly popular over the last 10-15 years. \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe JSON standard library in Python, \u003ccode\u003ejson\u003c/code\u003e, is used for interacting with JSON data: \u003ca href=\"https://docs.python.org/3.6/library/json.html\"\u003ehttps://docs.python.org/3.6/library/json.html\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eWhile there are many other kinds of APIs, as a data scientist, you'll typically be working with web APIs. \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe \u003ccode\u003erequests\u003c/code\u003e library in Python is a great starting point for making HTTP requests to APIs. \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe two most common HTTP methods you'll use when accessing APIs are GET (to retrieve information) and POST (to send information). \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eTypically, you'll need to authenticate in some manner to gain access to most APIs - one common method for doing so is using OAuth. \u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-json-apis-recap-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-json-apis-recap-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-json-apis-recap-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"oauth-open-authorization","title":"OAuth - Open Authorization","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-oauth-open-authorization\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-oauth-open-authorization/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003ePerhaps the most common thread among all APIs available on the web is the need to \u003cstrong\u003e\u003cem\u003eauthenticate\u003c/em\u003e\u003c/strong\u003e yourself to prove you are who you say are. This is a major security point for web APIs, and it's no surprise that a standard protocol has evolved to help make authenticating users simple and safe. This authentication protocol is called \u003cstrong\u003e\u003cem\u003eOAuth\u003c/em\u003e\u003c/strong\u003e, and it provides a simple, easy integration for multi-user applications, such as web APIs, so that they can add authentication capabilities to their API in a simple, streamlined way. From our side, this makes life easy because it standardizes the authentication process so that we don't have to worry about many different authentication protocols for every different service. In this lesson, we'll look into OAuth, learn a little about how it works, and explore the benefits OAuth offers. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the role OAuth plays when working with a 3rd party API\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhat is OAuth?\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eOAuth stands for Open Authorization.\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eOAuth\u003c/em\u003e\u003c/strong\u003e is an open-source protocol created to allow the creators of APIs and other online services to easily let them share private data or assets with users. One of the biggest challenges of building multi-user applications is making sure that you only give people access to the data and functionality they're supposed to have. OAuth provides a framework for allowing authenticated access, but without the risk of having to share the original login credentials such as a password.  The OAuth protocol was created in 2010 and was the brainchild of major tech companies such as Google and Twitter. It's now the most popular open standard for user authentication, is used by almost all of the major players in the tech world, such as Netflix, Amazon, Facebook, and more!\u003c/p\u003e\n\n\u003ch3\u003eThe Steps of OAuth\u003c/h3\u003e\n\n\u003cp\u003ePrior to using OAuth, we must also register our application with the authorizer and get our \u003cstrong\u003ecredentials\u003c/strong\u003e to use during the process. We need to set up some information about the application, like the app's name or website, and most importantly, \u003cstrong\u003ea redirect URI\u003c/strong\u003e. The authorizer later uses this to contact the requesting app and tell them that the user said yes. \u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA URI (Uniform Resource Identifier) is a string that refers to a resource. The most common are URLs, which identify the resource by giving its location on the Web.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAfter registration, The first step is the \u003cstrong\u003eauthorization\u003c/strong\u003e. Here, we send our users to the authorization server to ask for some permissions with our scope (permissions) that we would like to have. The user can see everything being requested on his behalf and confirm that they would like to grant our application access for those permissions.\u003c/p\u003e\n\n\u003cp\u003eThe second step is the \u003cstrong\u003eredirect\u003c/strong\u003e. Redirect URIs are a critical part of the OAuth flow. After a user successfully authorizes their application, the authorization server then redirects the user back to the app with an \u003cstrong\u003eauthorization code\u003c/strong\u003e in the URL. Because the redirect URL will contain sensitive information, it is critical that the service doesn’t redirect the user to arbitrary locations. The authorization code is used by our application in the final act of getting the access token. \u003c/p\u003e\n\n\u003cp\u003eThe final step is \u003cstrong\u003eacquisition\u003c/strong\u003e. This is where we finally receive our \u003cstrong\u003eaccess token\u003c/strong\u003e from the service provider so we can process API requests for our user. We use the authorization code we received in the redirect to our redirect url and our own application secret (which is acquired during initial registration) in order to get our user’s access token. The access token can then be used to make API calls on behalf of our user.\u003c/p\u003e\n\n\u003cp\u003eThis architecture is summarized in the image below:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-oauth-open-authorization/master/images/new_oa3.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe following example shows a scenario where you may want to access a user's Dropbox account for storing photo/media as a part of the service you provide. \u003c/p\u003e\n\n\u003ch2\u003eOAuth with DropBox for Single-Sign-On (SSO)\u003c/h2\u003e\n\n\u003cp\u003eIf you've ever used your Facebook or Google account to log in to a 3rd party website or app, then you've used OAuth--OAuth is what makes this sort of \u003cstrong\u003e\u003cem\u003eSingle-Sign-On\u003c/em\u003e\u003c/strong\u003e or \u003cstrong\u003e\u003cem\u003eSSO\u003c/em\u003e\u003c/strong\u003e ability possible. To get a feel for how OAuth makes this possible, let's look at a real-world example--giving Dropbox access to the photos app on your phone or computer!\u003c/p\u003e\n\n\u003ch3\u003eRegistering with OAuth and Using SDKs\u003c/h3\u003e\n\n\u003cp\u003eBefore an application can be used with OAuth, that application must first be \u003cem\u003eregistered\u003c/em\u003e with OAuth. This is a process handled by the team creating the Application itself, and not something we need to worry about as users. For instance, in order for the Photo Gallery app on our Macbook to have access to Dropbox, the team behind this software at Apple will have taken the time to register their app, provide the name of it, set the permissions it will need, and other things like that. The good news is that in most cases, we don't need to write the actual code that allows our application to interface with the service we're connecting to--major companies usually create \u003cstrong\u003e\u003cem\u003eSoftware Development Kits\u003c/em\u003e\u003c/strong\u003e or \u003cstrong\u003e\u003cem\u003eSDKs\u003c/em\u003e\u003c/strong\u003e that we can drop into our application and use as a library to add functionality like SSO with our Facebook account or the ability to access files in our Dropbox account. \u003c/p\u003e\n\n\u003ch3\u003eThe OAuth Process\u003c/h3\u003e\n\n\u003cp\u003eIn order for our app to access our users' Dropbox accounts, the following steps need to happen:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eA user must authenticate with Dropbox, verifying their identity. \u003c/li\u003e\n\u003cli\u003eThe user must explicitly give app permission to access their Dropbox (you've probably seen these sorts of popups before when connecting apps to one another on your phone).\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eOne quick technical note: Dropbox (and most other online services) actually use \u003cstrong\u003eOAuth 2\u003c/strong\u003e specifications. \u003ca href=\"https://oauth.net/2/\"\u003eDetails on OAuth2 can be viewed at the official website\u003c/a\u003e. In practice, most people just call it OAuth for short, but there is technically a difference between OAuth and OAuth 2 in terms of how they work and what they can do. \u003c/p\u003e\n\n\u003cp\u003eOnce the user has completed signing in and verifying permissions, the OAuth process returns an \u003cstrong\u003e\u003cem\u003eAccess Token\u003c/em\u003e\u003c/strong\u003e to our application. \u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eAn access token is a special string generated by authorizer that we need to send with \neach subsequent API request to uniquely identify both the app and the  user.\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eYou can think of an access token as a secret code that identifies our HTTP requests as coming from the actual user that has signed in and authenticated themselves. \u003c/p\u003e\n\n\u003cp\u003eFor the remainder of this lesson, we'll borrow some example graphics and explanations from Dropbox's amazing \u003ca href=\"https://www.dropbox.com/developers/reference/oauth-guide\"\u003eOAuth Guide\u003c/a\u003e, which provides a detailed explanation of exactly how OAuth works with Dropbox. We're only interested in the broad strokes of this as an example of how it all works, but if you have time, take a look at the full guide--it's quite informative and very easy to understand! \u003c/p\u003e\n\n\u003cp\u003eHave a look at an example scenario for an Image/gallery app that wants to access its users' Dropbox accounts for accessing or storing new images.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-oauth-open-authorization/master/images/oa1.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe key benefit of this approach is that our app doesn't need to store or transmit the user's Dropbox password. The user will be redirected to Dropbox to authorize our app to access their Dropbox data. After the user has approved our app, they'll be sent back to the app with an authorization code. At this point, our app will exchange the authorization code for an access token which can be used to make subsequent requests to the Dropbox API for downloading/uploading contents, etc. OAuth also allows the user to authorize only a limited set of permissions and the user may choose to stop access at any time. This makes OAuth a safer and more secure form of API authorization for end users.\u003c/p\u003e\n\n\u003ch2\u003eDropbox access for web apps\u003c/h2\u003e\n\n\u003cp\u003eIf you've used SSO features before or connected apps to other apps on your smartphone, then you're probably familiar with the overall workflow of how OAuth takes users through the process of authenticating. \u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eThe application redirects the user to a page to sign in to the account they're using, such as redirecting to the Facebook login page when you click \"Login with Facebook\" in a 3rd party app or game. \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe User signs in, and explicitly provides permissions to the application or game to connect to their account--in our example, this would mean giving the Photo Gallery app on our Macbook explicit permission to access our Dropbox account. \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe user is given an access code and redirected back to the original application. The application then signs in, and exchanges the access code for a more permanent \u003cstrong\u003e\u003cem\u003eAccess Token\u003c/em\u003e\u003c/strong\u003e that it can store for all subsequent connections to the service that it has authenticated with--this is the reason why our 3rd party apps can stay signed in and connected with things like our Facebook or Dropbox accounts, so that we don't have to reauthenticate every time we sign into the app!\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eNote that this request to exchange the authorization code for an access token takes place behind-the-scenes with a call to the /token API endpoint and is not visible to your end users. This setup is shown in the image below, which comes from the Dropbox OAuth Guide linked above.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-oauth-open-authorization/master/images/oa2.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eThe Benefits of Using OAuth\u003c/h2\u003e\n\n\u003cp\u003eNow that we understand how OAuth works, let's think about why it's useful.  Before OAuth, authentication meant \u003cstrong\u003e\u003cem\u003eDirect Authentication\u003c/em\u003e\u003c/strong\u003e through an HTTP request, where the user is prompted for a username and password. This sort of Basic Authentication is still used in plenty of places, as a primitive kind of API authentication for server-side applications: instead of sending a username and password to the server with each request, the user sends an API key ID and secret. Before OAuth, sites prompted users to enter their username and password directly into a form and sites would log into the user account.\u003c/p\u003e\n\n\u003cp\u003eWhat makes OAuth so special and so effective is that it is a \u003cstrong\u003e\u003cem\u003eDelegated\u003c/em\u003e\u003c/strong\u003e authorization framework for RESTful APIs.  This means that it allows apps to obtain limited access (scopes) to a user’s data without giving away a user’s password--think about every HTTP request an app makes when it needs information from a connected Facebook account. It would be a major security risk if each of these HTTP requests still had to contain a username and password to verify that the HTTP request should have access to a certain account. By using an OAuth access token,  it allows us to decouple authentication (proving we are who we say we are) and authorization (getting permissions for all we need to do). \u003c/p\u003e\n\n\u003ch2\u003eFurther reading\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://oauth.net/2/\"\u003eOAuth 2.0\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://medium.freecodecamp.org/how-to-dance-the-oauth-a-step-by-step-lesson-fd2364d89742\"\u003eHow to dance the OAuth: a step-by-step lesson\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://medium.com/square-corner-blog/oauth-wherefore-art-thou-b7034098a0fd\"\u003eOAuth, wherefore art thou?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we looked at the OAuth process for gaining access to user-owned resources. We saw how we authorize our apps to access resources with a high level of confidentiality and security that OAuth offers. We looked at an example of how this might work with the Dropbox API and also some extra reading to see more examples of this process. Next, we'll put this into practice by seeing how this process works with the Yelp API.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-oauth-open-authorization\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-oauth-open-authorization\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-oauth-open-authorization/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"html-css-and-web-scraping-recap-2","title":"HTML, CSS and Web Scraping -  Recap","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-recap-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-recap-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you learned a lot about web pages and how to exploit their structure for your own web scraping purposes. Take this opportunity to briefly review some of the key takeaways from the section.\u003c/p\u003e\n\n\u003ch2\u003eHTML\u003c/h2\u003e\n\n\u003cp\u003eTo start this section, you investigated the basic structure of an HTML page and saw both the nested structure as well as some of the basic tags that you later leveraged for web scraping. This included \u003ccode\u003ea\u003c/code\u003e tags for links and \u003ccode\u003ediv\u003c/code\u003e tags which act as general containers for other HTML code blocks.\u003c/p\u003e\n\n\u003cp\u003eIf you are interested in taking a deeper dive into the world of HTML, check out the additional HTML lessons in the Appendix which cover more advanced topics. \u003c/p\u003e\n\n\u003ch2\u003eCSS\u003c/h2\u003e\n\n\u003cp\u003eAfter taking an initial look at HTML, you then saw the role CSS plays in styling a web page. You learned that HTML deals with content while CSS deals with style. There is certainly more you could learn regarding CSS but an important take away is that CSS selectors can also be used while web scraping. For example, you can select a tag with \u003ccode\u003eid\u003c/code\u003e or \u003ccode\u003eclass\u003c/code\u003e selector.\u003c/p\u003e\n\n\u003ch2\u003eBeautiful Soup\u003c/h2\u003e\n\n\u003cp\u003eAfter an initial exploration into web development, you then returned to Python and used the requests and Beautiful Soup packages in order to extract data from the web. This was also a great chance for you to practice your data wrangling skills as you often will have to navigate nested data structures and clean messy data, removing spaces, using regular expressions and converting data types. \u003c/p\u003e\n\n\u003ch2\u003ePrecautions\u003c/h2\u003e\n\n\u003cp\u003eRemember to practice caution when scraping websites. Surfing the web at superhuman speeds will get you banned from many domains and may violate the terms \u0026amp; conditions of many websites that require you to login. As such, there are a few considerations you should take along your way.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAre there terms and conditions for using the website?\u003c/li\u003e\n\u003cli\u003eTest your scraping bot on in small samples to debug before scaling to hundreds, thousands or millions of requests.\u003c/li\u003e\n\u003cli\u003eStart thinking about your IP address: getting blacklisted from a website is no fun. Consider using a VPN.\u003c/li\u003e\n\u003cli\u003eSlow your bot down! Add delays along the way with the time package. Specifically, time.sleep(seconds) adds wait time in a program.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eOther Scraping Tools\u003c/h2\u003e\n\n\u003cp\u003eWhile Beautiful Soup is a powerful go-to tool for scraping the web, remember that there are other tools such as Selenium and Scrapy that have their own advantages and disadvantages. While Beautiful Soup is apt to be your primary scraping tool, for now, it is worth noting that there are other options should you feel like you need additional resources such as interacting with dynamic javascript-based websites.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eThis was an exciting section delving into the world of web scraping! There's always a plethora of information to be mined from the web so go out there and get scraping!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-html-css-scraping-recap-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-html-css-scraping-recap-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-recap-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"getting-started-with-git","title":"Getting Started with Git","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-git-intro\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eAs you now know, Git is a version control system. The Flatiron School hosts our curriculum using GitHub, and we use IllumiDesk to facilitate a deep integration with GitHub. GitHub is an online hosting platform that uses Git. We need to teach you just enough Git to interact with GitHub like a real developer. While you can run Python notebooks on the Illumidesk platform, you'll also want to be able to download material to your local computer so you can work on it there.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDescribe the difference between a forked and a cloned respository\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit clone\u003c/code\u003e to clone a repository\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, and \u003ccode\u003egit push\u003c/code\u003e to make changes to a repository\u003c/li\u003e\n\u003cli\u003eCompare local and remote repositories\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSome terminology and concepts\u003c/h2\u003e\n\u003cp\u003eAs you can see from the objectives above, we're going to dive in and use several Git commands in this lesson.\u003c/p\u003e\n\u003cp\u003eThe first thing we'll look at is \u003cem\u003eforking\u003c/em\u003e, a concept from the GitHub platform.\u003c/p\u003e\n\u003cp\u003eForking is the process of making a personal copy of the lesson or lab on GitHub.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"http://ironboard-curriculum-content.s3.amazonaws.com/front-end/lab-assets/git-workflow-1.png\" alt=\"What's a Fork\"\u003e\u003c/p\u003e\n\u003cp\u003eAfterward, we'll use \u003ccode\u003egit clone\u003c/code\u003e from a bash shell like terminal or git bash in order to copy the material from the web to our local computer.\u003c/p\u003e\n\u003cp\u003eFrom there, Git will allow us to continue to track and incorporate changes that we make to our work.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit status\u003c/code\u003e allows us to see if we have made any changes.\u003c/p\u003e\n\u003cp\u003eIf we have made changes that we would like to save to our version control history, we can then use \u003ccode\u003egit add\u003c/code\u003e to stage the changed files to the version history and \u003ccode\u003egit commit\u003c/code\u003e to finalize the process. Finally, we can then use \u003ccode\u003egit push\u003c/code\u003e to push our changes to the web so that we or collaborators can access them from anywhere.\u003c/p\u003e\n\u003cp\u003eNow that you have a brief overview of what we're about to dive into, let's go through the process step by step.\u003c/p\u003e\n\u003ch2\u003eOpen up a Bash Shell and Create a Course Folder / Subfolder\u003c/h2\u003e\n\u003cp\u003eTo use Git, we're going back to the bash shell (mac: terminal, windows: git bash) once again!\u003c/p\u003e\n\u003cp\u003eTo start:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a folder on your computer for your course materials and navigate into it (preferably using \u003ccode\u003emkdir\u003c/code\u003e and \u003ccode\u003ecd\u003c/code\u003e) if you haven't already\n\u003cul\u003e\n\u003cli\u003eYou may want to create a subfolder titled \"Section1\", \"Phase_1\" (or whatever you find to be an appropriate title) and navigate into that\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eReturn to your web browser and navigate to the lesson or lab you want to download\u003c/li\u003e\n\u003cli\u003eClick the GitHub icon\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-intro/master/images/canvas_github_icon.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cp\u003eYou'll be redirected to the associated GitHub repository.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-intro/master/images/before-fork.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eClick the fork button\u003c/strong\u003e, as shown above in order to create a copy on your personal account which you can edit and update.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAfter a moment of this:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-intro/master/images/during-fork.png\" width=\"400\"\u003e\u003c/p\u003e\n\u003cp\u003eYou'll be redirected to your new personal copy of the repository:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-intro/master/images/after-fork.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit clone\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eNow that you have your own copy (by forking), we're going to download this copy to your local computer using \u003ccode\u003egit clone\u003c/code\u003e.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eCopy the URL\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMac: Press \u003cstrong\u003ecmd+L\u003c/strong\u003e to highlight the url bar and \u003cstrong\u003ecmd+c\u003c/strong\u003e to copy the url\u003c/li\u003e\n\u003cli\u003eWindows: Press \u003cstrong\u003eCtrl+L\u003c/strong\u003e to highlight the url bar and \u003cstrong\u003eCtrl+c\u003c/strong\u003e to copy the url\u003c/li\u003e\n\u003cli\u003eYou can also click the green \"Code\" button on the GitHub page, and click the clipboard icon to copy the url\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eReturn to your bash shell\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eType: \u003ccode\u003egit clone\u003c/code\u003e and paste your repo url (\u003cstrong\u003ecmd + v\u003c/strong\u003e or \u003cstrong\u003eCtrl+V\u003c/strong\u003e)\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eVoila!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eThe repository and all of its contents will be downloaded locally to your computer!\u003c/p\u003e\n\u003cp\u003eYou should be able to see the new folder by listing the files in the current directory with \u003ccode\u003els\u003c/code\u003e. You can then navigate into the git directory with \u003ccode\u003ecd directory_name\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eNow that you have a local copy, we can further investigate some more Git commands for version control. \u003cstrong\u003eNote that for these to work you must be in the git folder (the one you just cloned above). Make sure to navigate into the folder using the \u003ccode\u003ecd\u003c/code\u003e command.\u003c/strong\u003e\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit status\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eOnce you have a Git repository downloaded locally, Git will keep track of every change you make to the code in that folder. You can ask Git what the differences or changes you've made since the last commit by typing \u003ccode\u003egit status\u003c/code\u003e into your terminal.\u003c/p\u003e\n\u003cp\u003eIt's really helpful to constantly get the status from Git to see what changes you need to add, commit, or push.\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit add\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eAdding changes with the \u003ccode\u003egit add\u003c/code\u003e command is a way to stage any changes and get them ready to be a permanent record in your Git log via a commit. The workflow worth memorizing right now is to simply add all your changes via \u003ccode\u003egit add .\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit commit\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eA commit is a permanent moment in time in your Git history. A commit creates a new version of your code. To commit, memorize this command. \u003ccode\u003egit commit -am \"Your commit message\"\u003c/code\u003e. You are using the \u003ccode\u003egit commit\u003c/code\u003e command with the flags \u003ccode\u003e-am\u003c/code\u003e, which tell Git to add and commit all changes and to include a commit message. You supply the commit message in \u003ccode\u003e\"\"\u003c/code\u003e directly after the command, where it says \u003ccode\u003e\"Your commit message\"\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit push\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003ePushing is the process of taking your local code and commits and syncing them, or uploading them, to GitHub. You're updating the GitHub remote (remotes are just fancy names for cloud copies of the repository), generally your fork, represented by a remote named \u003ccode\u003eorigin\u003c/code\u003e, by pushing your code to the remote. The Git command to do this is simply \u003ccode\u003egit push\u003c/code\u003e. When you \u003ccode\u003egit push\u003c/code\u003e from within a Git repository, it will take all the commits that you have locally and push them to the online remote.\u003c/p\u003e\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.git-tower.com/blog/git-cheat-sheet/\"\u003eGit Cheatsheet\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.git-tower.com/learn/git/ebook/en/command-line/appendix/best-practices\"\u003eGit Best Practices\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://guides.github.com/introduction/flow\"\u003eUnderstanding the GitHub Flow\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://guides.github.com/activities/hello-world\"\u003eHello World GitHub\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://guides.github.com/activities/forking\"\u003eForking on GitHub\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://rogerdudler.github.io/git-guide/\"\u003eGit - The Simple Guide\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://gitimmersion.com/\"\u003eGit Immersion\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://try.github.com/\"\u003eTry Git\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eIn this lesson, we took an introductory look at Git and GitHub. First, we saw how to fork and clone repositories from GitHub onto your local machine. From there, we then further discussed how to add changes to git, commit them, and push them online.\u003c/p\u003e","frontPage":false},{"exportId":"control-flow-functions-and-statistics-introduction","title":"Control Flow, Functions, and Statistics - Introduction","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-section-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-section-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll learn about creating functions in Python, iterating over nested loops, and using basic statistics to measure aspects of different datasets. \u003c/p\u003e\n\n\u003ch2\u003eCoding in Python\u003c/h2\u003e\n\n\u003cp\u003eWe're going to spend most of this section deepening and widening your experience of programming in Python. We're going to introduce some of Python's built-in functions and methods, show you some more types of loops, and give you some practice of creating and using custom functions so you can efficiently reuse your code.\u003c/p\u003e\n\n\u003ch2\u003eBasic Statistics\u003c/h2\u003e\n\n\u003cp\u003eWe're then going to take a break from coding by introducing some basic statistics - measures of centrality and dispersion - that will be crucial in understanding the datasets that you work with as a professional Data Scientist. We'll also get some more practice writing custom functions for calculating these statistics. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIf you're already a professional software developer with a degree in a quantitative subject, it's not going to be the hardest section for you to complete. But please take the time to practice your skills and feel free to dig deeper with the optional \"Level Up\" content if you're done more quickly than your peers.\u003c/p\u003e\n\n\u003cp\u003eIf you're completely new to coding and/or stats, you will probably find this a fairly challenging section. We're continuing to introduce core programming concepts at quite a pace. Don't worry if you still feel overwhelmed as you work through this section or work on the projects. You're going to get to practice most of these skills on a daily or weekly basis for the rest of the course!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-python-section-intro\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-python-section-intro\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-python-section-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"kaggle-and-the-ames-housing-dataset","title":"Kaggle and The Ames Housing Dataset","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eKaggle hosts numerous Data Science competitions where you can grab datasets and practice your skills at creating machine learning algorithms to answer useful questions. Here we'll sign up for an account and begin investigating a classic Data Science problem using the Ames housing dataset.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a Kaggle account and download a dataset \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSign up\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eNavigate to \u003ca href=\"https://www.kaggle.com\"\u003ekaggle.com\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/master/images/kagglehome.png\" width=\"800\"\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eClick \"Sign in\" and then \u003c/li\u003e\n\u003cli\u003eClick \"Create one\" to make a new account\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/master/images/kagglelogin1.png\" width=\"300\"\u003e\n\u003c/li\u003e\n\u003cli\u003eFill out the basic information\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/master/images/kagglelogin2.png\" width=\"300\"\u003e\n\u003c/li\u003e\n\u003cli\u003eAccept the Privacy and Terms agreement\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCongratulations!\u003c/h2\u003e\n\n\u003cp\u003eYou should now be signed up for Kaggle where you'll have access to a range of datasets, competitions, and other Data Science resources! Welcome to the community!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn our upcoming lab, you'll then be working with this dataset: \u003ca href=\"https://www.kaggle.com/c/house-prices-advanced-regression-techniques\"\u003ehttps://www.kaggle.com/c/house-prices-advanced-regression-techniques\u003c/a\u003e. To download it, click on the \"data\" tab and then click the \"download all\" to get a copy of the data.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-kaggle-and-boston-housing-dataset\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-kaggle-and-boston-housing-dataset\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"separating-content-and-presentation","title":"Separating Content and Presentation","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-separating-content-and-presentation\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-separating-content-and-presentation/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou now know what HTML is and have explored a properly-formatted HTML document. That said, if you look at the HTML pages thus far, you can't help but notice that they look a little plain. To make them more attractive (and responsive), you can use Cascading Style Sheets or CSS!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIdentify the separation of content and presentation\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eExplain the role of CSS\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIdentify the Separation of Content and Presentation\u003c/h2\u003e\n\n\u003cp\u003eHTML lets you mark-up your content with semantic \u003cem\u003estructure\u003c/em\u003e. It forms the skeleton of your web page. It would be great to be able to say, \"Browser, when you see a \u003ccode\u003ep\u003c/code\u003e tag with \u003ccode\u003eid\u003c/code\u003e of \u003ccode\u003emy-name\u003c/code\u003e, make the first letter be huge!\" Or, to get your readers' attention, you might say, \"Browser, if you see \u003cem\u003eany\u003c/em\u003e tag with a \u003ccode\u003eclass\u003c/code\u003e of \u003ccode\u003ewarning\u003c/code\u003e surround it with a red box!\" HTML authors believe that \u003cem\u003ecreating\u003c/em\u003e marked-up documents and \u003cem\u003estyling\u003c/em\u003e marked-up documents are entirely separate tasks. They see a difference between writing \u003cem\u003econtent\u003c/em\u003e (the data within the HTML document) and specifying \u003cem\u003epresentation\u003c/em\u003e, the rules for displaying the rendered elements.\u003c/p\u003e\n\n\u003ch2\u003eExplain the Role of CSS\u003c/h2\u003e\n\n\u003cp\u003eCSS, or \"Cascading Style Sheets,\" tells you how to write rules that define how browsers will present HTML. Rules in CSS won't look like HTML and they usually live in a file apart from our HTML file.\u003c/p\u003e\n\n\u003cp\u003eCSS handles all of the ways you want to customize your content's look and feel from margins and colors, to column-based layout!\u003c/p\u003e\n\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cssguidelin.es/#the-separation-of-concerns\"\u003eCSS Guidelines: The Separation of Concerns\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.csszengarden.com/\"\u003eCSS Zen Garden\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWeb developers separate the content of our HTML pages from their presentation, which they style with CSS. By keeping the two separate, you not only utilize the best tools for each job, but you can change code for one without disturbing the code for the other.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-separating-content-and-presentation\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-separating-content-and-presentation\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-separating-content-and-presentation/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"nosql-databases-introduction","title":"NoSQL Databases - Introduction","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eBy now, you've dug pretty deep into SQL and relational databases. In this lesson, we'll learn about NoSQL databases, which have become increasingly popular because they can store data that don't fit the traditional \"tabular\" views. \u003c/p\u003e\n\n\u003ch2\u003eNoSQL Databases\u003c/h2\u003e\n\n\u003cp\u003eYou're now familiar with relational databases, how they work, and how to use them to store and retrieve data. However, relational databases and SQL are only part of the picture when it comes to databases -- while their structure and organization is great for tabular data (data that fits in a table), there are plenty of situations where data just doesnt work well as a table. We'll begin this section by exploring some of those situations, and look at some of options out there for databases that don't use a relational format. \u003c/p\u003e\n\n\u003ch2\u003eMongoDB\u003c/h2\u003e\n\n\u003cp\u003eOnce we've gotten the lay of the land, we'll get some hands on experience with one of the most popular NoSQL variants on the market today, MongoDB! We'll start by installing MongoDB on our machine, and then we'll add some data to it, so that we can learn to store data and write queries using MongoDB. By the end of this section, you'll be able to do all the same things in MongoDB as you can in SQLite3!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eGet ready! In addition to querying SQL databases; by the end of this section, you will be able to create, update, and retrieve data from a popular NoSQL database, \u003cstrong\u003eMongoDB\u003c/strong\u003e! \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-nosql-databases-section-intro\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-nosql-databases-section-intro\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"researching-html-elements","title":"Researching HTML Elements","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-researching-html-elements\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-researching-html-elements/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWhen writing HTML you might encounter tags that are new to you. When searching for technical help, you have to be careful about which sources you trust. This is a skill you will build over time but you'll get an overview of some good practices here.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse search engines as resources to find information\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eCompare multiple resources to find the best source\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eUse Search Engines as Resources to Find Information\u003c/h2\u003e\n\n\u003cp\u003eLet's say in your research, you come across an unfamiliar HTML element like\n\u003ccode\u003e\u0026lt;samp\u0026gt;\u003c/code\u003e. You can google \u003ccode\u003esamp html element,\u003c/code\u003e and you will find an endless list\nof results to choose from. Sometimes resources can be outdated, biased, or\ninaccurate. It's important to filter through the results to find the best one.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/web-development/html-element-search.png\" width=\"850\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eObserve And Identify Relevant Information\u003c/h2\u003e\n\n\u003cp\u003eYour instinct might be to open the first result. You should be pickier.\nSometimes the result has \"gamed\" the search engine and unfairly influenced the ranking.\nIt's recommended that you open the top \u003cstrong\u003efive\u003c/strong\u003e results and review them critically.\u003c/p\u003e\n\n\u003cp\u003eIt's also advisable to trust sites that are affiliated with building or\ndefining the technologies more than blogs or other resources. In the HTML\nworld, the Mozilla Developer Network (MDN) is an extremely trustworthy site.\nIn fact, it's likely the best HTML and CSS documentation source on the\ninternet.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/web-development/samp-mdn-page.png\" width=\"850\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eCompare Multiple Resources To Find The Best Source\u003c/h2\u003e\n\n\u003cp\u003eIf you go back to the search results, you'll see that the first result, in this\ncase, is \u003ccode\u003eW3schools\u003c/code\u003e. A site, like W3schools, for example, can be used as an\nadditional resource for garnering understanding. It even includes interactive\nexamples, creating a sandbox environment for experimentation.\u003c/p\u003e\n\n\u003cp\u003eIn this case, between MDN and W3schools, you should get a good sense of how to\nuse the \u003ccode\u003e\u0026lt;samp\u0026gt;\u003c/code\u003e element.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eThe web is a constantly evolving entity. As we build more ambitious products or\nlearn from our collective needs and mistakes, the industry will continually\nupdate the HTML specifications.\u003c/p\u003e\n\n\u003cp\u003eResearching referencing documentation\ncan be scary at first, but it's a primary skill for data scientists. Don't be afraid to\npractice technical searches. It's a \u003cem\u003eskill\u003c/em\u003e that you will get better at with practice.\u003c/p\u003e\n\n\u003cp\u003eMost importantly, don't feel like \u003cem\u003enot knowing everything by heart\u003c/em\u003e means you can't\nbe a data scientist. The greatest data scientists we know are constantly admitting what they\ndon't know, finding the latest news, using the answer they found and moving on.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-researching-html-elements\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-researching-html-elements\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-researching-html-elements/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"getting-started-with-data-science-introduction","title":"Getting Started with Data Science - Introduction","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-section-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-section-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll learn about one of the core topics required for data science: coding! You'll get exposed to the fundamentals of Python as well as a brief introduction to data visualization. \u003c/p\u003e\n\n\u003ch2\u003eSetting the Stage\u003c/h2\u003e\n\n\u003cp\u003eWe start this section by looking at the kinds of problems that data science can solve and by giving a sense of the end to end process of \"doing data science\". We then get you set up with a professional data science environment with Git, GitHub, the command line, and the Anaconda Python distribution so you can start using industry standard tools from day 1.\u003c/p\u003e\n\n\u003cp\u003eWe also run you through the workflow that we'll be using for the projects so you can get comfortable with how to access and update content and get some practice using the tools we just set you up with! And then to bring it all together, we ask you to \"code along\" with us to complete your first (very simple) data science project.\u003c/p\u003e\n\n\u003cp\u003eIf you're new to Python (or programming), you may be a little overwhelmed at this point. Don't worry. We'll spend all of the rest of the course practicing and deepening your understanding of the materials we introduced in the first part of the section.\u003c/p\u003e\n\n\u003ch2\u003eCoding in Python\u003c/h2\u003e\n\n\u003cp\u003eNext, we introduce some of the most important elements of programming in Python. We start from the basics, but move fairly quickly. We cover variables, common data types, conditionals, lists, and dictionaries. This may not all seem immediately relevant to data science, but it's designed to give you the tools that you'll need for all of your future projects in Python.\u003c/p\u003e\n\n\u003ch2\u003eVisualize that Data\u003c/h2\u003e\n\n\u003cp\u003eFinally, we take a little bit of time to introduce you to \u003ccode\u003eMatplotlib\u003c/code\u003e - one of the most popular tools in Python for generating visualizations.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introduction-section-intro/master/images/matplotlib.jpg\" width=\"450\"\u003e\u003c/p\u003e\n\n\u003cp\u003eYou will also use some simple datasets to generate bar graphs, histograms, and scatter plots. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eRemember, it's OK to feel a little uncomfortable. For some students, this section will be the most difficult as it introduces so many new concepts at once, but you'll continue to practice these day after day, until they become second nature. For those of you who already know some of these contents, we've introduced additional challenges for students who are finding the labs easy, so look out for the \"Level Up (optional)\" section in some of the labs to get some deeper practice with Python and visualization.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-introduction-section-intro\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-introduction-section-intro\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-introduction-section-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"data-visualization-introduction","title":"Data Visualization - Introduction","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-visualizations-section-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-visualizations-section-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll get a more thorough overview of data visualization, Python's libraries, and how to create successful visualizations. \u003c/p\u003e\n\n\u003ch2\u003eData Visualization\u003c/h2\u003e\n\n\u003cp\u003eIn this section, we're going to focus on \u003cstrong\u003e\u003cem\u003eData Visualization\u003c/em\u003e\u003c/strong\u003e. We'll begin by getting some deliberate practice in with some of Matplotlib's more advanced features, such as subplots.\u003c/p\u003e\n\n\u003cp\u003eThen, we'll dig into some of the best practices for data visualization, and learn how we can make visualizations that will look great in any professional environment. We'll also dig into some of the most common mistakes people make when creating visualizations, so that we can avoid them. \u003c/p\u003e\n\n\u003cp\u003eFinally, we'll learn about a more advanced visualization library, \u003cstrong\u003e\u003cem\u003eSeaborn\u003c/em\u003e\u003c/strong\u003e. We'll get some practice with Seaborn, and get a feel for when to use Seaborn, and when to use Matplotlib. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eYou're ready to start exploring how to best visualize your data. Let's get started with this section!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-visualizations-section-intro\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-visualizations-section-intro\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-visualizations-section-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"setting-up-a-professional-data-science-environment-configuring-git-and-anaconda","title":"Setting up a Professional Data Science Environment - Configuring Git and Anaconda","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-science-env-config\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-config\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-config/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this lesson, you'll continue setting up your professional data science environment by configuring your terminal to work with GitHub, creating an Anaconda virtual environment, setting up your new virtual environment to open by default from your terminal, and confirming your configuration.\u003c/p\u003e  \u003ch2\u003eObjectives\u003c/h2\u003e  \u003cp\u003eYou will be able to:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eUse basic commands to navigate the command line\u003c/li\u003e \u003cli\u003ePractice utilizing Git and GitHub\u003c/li\u003e \u003cli\u003eSummarize why virtual environments are used\u003c/li\u003e \u003cli\u003eSet up a virtual environment\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eConnecting Your Terminal to GitHub\u003c/h2\u003e  \u003cp\u003eNow that you have Git installed locally, you'll be often working back and forth between GitHub, a service which hosts Git repositories online, and your local computer. To better integrate with GitHub, you should set up your name and email address:\u003c/p\u003e  \u003col\u003e \u003cli\u003e\n\u003cp\u003eIn your terminal window*, type \u003ccode\u003egit config --global user.name\u003c/code\u003e\u003c/p\u003e  \u003cul\u003e \u003cli\u003eIf it returns your name, you’re set!\u003c/li\u003e \u003cli\u003eIf it returns nothing or displays an error message, type \u003ccode\u003egit config --global user.name “Your Name”\u003c/code\u003e - replacing Your Name with your name inside the quotes (this should be your real first and last name, not your GitHub username)\u003c/li\u003e \u003c/ul\u003e\n\u003c/li\u003e \u003cli\u003e\n\u003cp\u003eIn your terminal window, type \u003ccode\u003egit config --global user.email\u003c/code\u003e\u003c/p\u003e  \u003cul\u003e \u003cli\u003eIf it returns your email address, you’re set!\u003c/li\u003e \u003cli\u003eIf it returns nothing or displays an error message, type \u003ccode\u003egit config --global user.email your@email.com\u003c/code\u003e - replacing \u003ca href=\"mailto:your@email.com\"\u003eyour@email.com\u003c/a\u003e with your email address\u003c/li\u003e \u003c/ul\u003e\n\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003e* Remember, when we say \"terminal\" we mean the Terminal app for Mac, and the Git Bash program for Windows\u003c/p\u003e  \u003ch2\u003eCloning this Repository\u003c/h2\u003e  \u003cp\u003eTo complete the later steps in this configuration process, you’re going to need to download a copy of the files in this repository, so we should do this now since you already have a terminal window open.\u003c/p\u003e  \u003cp\u003eYou should get in the habit of checking exactly where you are in your Terminal before downloading anything. Use the command \u003ccode\u003epwd\u003c/code\u003e to print your working directory. If you're not in a place you want to download lessons, you should navigate to a place you want to keep your Flatiron repositories and files.\u003c/p\u003e  \u003cp\u003eIf you have not used the command line much or at all, follow the below steps:\u003c/p\u003e  \u003col\u003e \u003cli\u003eOpen a new terminal window\u003c/li\u003e \u003cli\u003eType \u003ccode\u003epwd\u003c/code\u003e - this should show your home directory, the most basic of paths on your computer\u003c/li\u003e \u003cli\u003eType \u003ccode\u003ecd Documents\u003c/code\u003e - this will change your directory, and move you into your Documents folder\u003c/li\u003e \u003cli\u003eType \u003ccode\u003emkdir Flatiron\u003c/code\u003e - this will create a new folder, called Flatiron, to keep all of your Flatiron repositories and files\u003c/li\u003e \u003cli\u003eType \u003ccode\u003ecd Flatiron\u003c/code\u003e - this will change your directory, moving you into the new Flatiron folder you just created\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003eMacOS Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-make-flatiron-directory.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cp\u003eWindows Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/windows_create_dir.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cblockquote\u003e \u003ch2\u003eImportant Note\u003c/h2\u003e  \u003cp\u003eYou should \u003cstrong\u003eNEVER\u003c/strong\u003e clone a Git repository into another Git repository!\u003c/p\u003e  \u003cp\u003eYou can always check if you are currently in a Git repository by running \u003ccode\u003egit status\u003c/code\u003e. If you get an error that says \"\u003ccode\u003efatal: not a git repository (or any of the parent directories): .git\u003c/code\u003e\", then you are not in a Git repository.\u003c/p\u003e \u003c/blockquote\u003e  \u003cp\u003eOnce you are in a good place to download files from GitHub, like a general folder to keep all of your Flatiron repositories and files, type (or better still, copy and paste) \u003ccode\u003egit clone https://github.com/learn-co-curriculum/dsc-data-science-env-config.git\u003c/code\u003e\u003c/p\u003e  \u003cp\u003e\u003cem\u003eIn Windows, in Git Bash, to paste from the clipboard the shortcut should be \u003cstrong\u003eshift-insert\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e  \u003cp\u003eThis will create a new subdirectory whose name is \"dsc-data-science-env-config\" which will contain a copy of all of the files in this repository!\u003c/p\u003e  \u003cp\u003eMove into that directory using the \u003ccode\u003ecd\u003c/code\u003e, or change directory, command (after typing \u003ccode\u003ecd dsc\u003c/code\u003e you should be able to hit the \u003cstrong\u003etab\u003c/strong\u003e key to \"tab complete\" so you don't need to type the whole directory name).\u003c/p\u003e  \u003cp\u003eNow, if you run \u003ccode\u003epwd\u003c/code\u003e to print your working directory again, you should be inside the folder we just cloned down from that GitHub link!\u003c/p\u003e  \u003cp\u003eMacOS Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-git-clone.png\" width=\"650\"\u003e\u003c/p\u003e  \u003cp\u003eWindows Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/win_git_clone.png\" width=\"650\"\u003e\u003c/p\u003e  \u003ch2\u003eSetting Up Virtual Environments\u003c/h2\u003e  \u003cp\u003eAs you do data science projects, you will spend a lot of your time using pre-written libraries to speed up your development - like numpy, pandas, or scikit-learn. As you work on different projects, you may also find that you use different versions of different libraries for different projects. The most common versioning issue is that some projects will run in Python 2 whereas others will run in Python 3, but you may also find that different projects depend on different versions of libraries like Tensorflow.\u003c/p\u003e  \u003cp\u003eOccasionally, code that works in an old version of a library won’t work in a newer version. So if you open up a new project and install the dependencies, it’s possible that your old project won’t work anymore.\u003c/p\u003e  \u003cp\u003eTo avoid that problem, a best practice is to use “virtual environments”. Virtual environments allow you to have different versions of Python and different versions of the various libraries you use, so you can install a new version of a library for one project but still use the old version for another project. It’s almost as if you have multiple computers that you can swap between, each having a different setup and configuration, just by running a couple of commands.\u003c/p\u003e  \u003cp\u003eThere is a built-in virtual environment feature in Python, but we’re going to use the more flexible virtual environments provided by Conda as part of the Anaconda distribution you installed.\u003c/p\u003e  \u003cp\u003eTo use a new virtual environment, there are two steps you need to complete. The first step is to create the virtual environment. That may take a couple of minutes as your computer has to download the necessary version of Python and all of the libraries that you want to be able to use in that environment. The next step then is to “use” the virtual environment by activating it.\u003c/p\u003e  \u003cp\u003eIf you want to learn more about Conda environments, have a look at the \u003ca href=\"https://conda.io/docs/user-guide/tasks/manage-environments.html\" target=\"_blank\"\u003edocumentation\u003c/a\u003e, otherwise, let’s give this a try.\u003c/p\u003e  \u003ch3\u003eCreating the Conda Virtual Environment\u003c/h3\u003e  \u003cp\u003eYou need to start by navigating into this project folder. If you run \u003ccode\u003epwd\u003c/code\u003e to print your working directory in your terminal, you should be inside the folder we cloned down. If the name of the current working directory is not \"dsc-data-science-env-config\", then you need to move into that folder - follow the steps above.\u003c/p\u003e  \u003cp\u003eThe instructions to create the environment are slightly different for MacOS and Windows, because they need to use different environment files, so make sure you follow the instructions relevant to your operating system.\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eMacOS\u003c/strong\u003e: run \u003ccode\u003econda env create -f mac_environment.yml\u003c/code\u003e\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eWindows\u003c/strong\u003e: run \u003ccode\u003econda env create -f win_environment.yml\u003c/code\u003e\u003c/p\u003e  \u003cp\u003eDepending on the speed of your computer and your internet connection it may take up to twenty minutes for this to complete. While it does you should see output similar to that displayed below start to appear in your terminal.\u003c/p\u003e  \u003cp\u003eMacOS Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-env-create-from-yml.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cp\u003eWindows Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/win_env_create.PNG\" width=\"450\"\u003e\u003c/p\u003e  \u003ch3\u003eActivating the Conda Virtual Environment\u003c/h3\u003e  \u003cp\u003eNext, try activating the environment. Type \u003ccode\u003econda activate learn-env\u003c/code\u003e.\u003c/p\u003e  \u003cp\u003eTo confirm that it worked, type \u003ccode\u003econda info --envs\u003c/code\u003e and confirm that the asterisk (*) is next to the learn-env environment.\u003c/p\u003e  \u003cp\u003eMacOS Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-conda-info-envs.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cp\u003eWindowsWindows Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/win_env_check.PNG\" width=\"450\"\u003e\u003c/p\u003e  \u003ch2\u003eTroubleshooting\u003c/h2\u003e  \u003cp\u003eif you see a message that states “WARNING: A newer version of Conda exists”, run \u003ccode\u003econda update -n base conda\u003c/code\u003e and then try again to create the environment.\u003c/p\u003e  \u003cp\u003eIf you see a message that states \"file not found\", double check that you are running this command from the directory that contains the .yml file. If you type \u003ccode\u003els\u003c/code\u003e you should see the environment.yml file. If you don't see it, you likely forgot to run \u003ccode\u003ecd dsc-data-science-env-config\u003c/code\u003e to change into the right directory.\u003c/p\u003e  \u003ch2\u003eSetting your Default Environment\u003c/h2\u003e  \u003cp\u003eYou have successfully created your virtual environment! But, to be sure that you are using the learn-env, it's helpful to set it as your default environment so that you don't need to remember to manually switch to it every time you open the terminal. This step is \u003cstrong\u003ehighly recommended\u003c/strong\u003e but not required.\u003c/p\u003e  \u003ch3\u003eMac\u003c/h3\u003e  \u003cp\u003eOn a Mac, we need to first see what shell you're running in your terminal. Run \u003ccode\u003eecho $SHELL\u003c/code\u003e.\u003c/p\u003e  \u003cp\u003eIf the response ends in \u003ccode\u003ebash\u003c/code\u003e:\u003c/p\u003e  \u003cul\u003e \u003cli\u003erun \u003ccode\u003eecho \"conda activate learn-env\" \u0026gt;\u0026gt; ~/.bash_profile\u003c/code\u003e to add the configuration to your bash profile\u003c/li\u003e \u003cli\u003erun \u003ccode\u003esource ~/.bash_profile\u003c/code\u003e to activate the changes you just made\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-bash-set-default-env.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cblockquote\u003e \u003cp\u003e(Don't forget to run \u003ccode\u003esource ~/.bash_profile\u003c/code\u003e like the Test Student in the screen capture!)\u003c/p\u003e \u003c/blockquote\u003e  \u003cp\u003eIf the response ends in \u003ccode\u003ezsh\u003c/code\u003e:\u003c/p\u003e  \u003cul\u003e \u003cli\u003erun \u003ccode\u003eecho \"conda activate learn-env\" \u0026gt;\u0026gt; ~/.zshrc\u003c/code\u003e to add the configuration to your bash profile\u003c/li\u003e \u003cli\u003erun \u003ccode\u003esource ~/.zshrc\u003c/code\u003e to activate the changes you just made\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-zsh-set-default-env.png\" width=\"450\"\u003e\u003c/p\u003e  \u003ch3\u003eWindows\u003c/h3\u003e  \u003cp\u003eTo follow these instructions on a Windows machine you must be using the Git Bash shell it was suggested to install above.\u003c/p\u003e  \u003col\u003e \u003cli\u003eRun \u003ccode\u003etouch ~/.bash_profile\u003c/code\u003e to create a new file.\u003c/li\u003e \u003cli\u003eRun \u003ccode\u003eecho \"conda activate learn-env\" \u0026gt;\u0026gt; ~/.bash_profile\u003c/code\u003e to add the configuration to your bash profile\u003c/li\u003e \u003cli\u003eRun \u003ccode\u003esource ~/.bash_profile\u003c/code\u003e to activate the changes you just made\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/win_default_env.PNG\" width=\"450\"\u003e\u003c/p\u003e  \u003ch2\u003eUpdating your Virtual Environment\u003c/h2\u003e  \u003cp\u003e\u003cimg src=\"https://imgs.xkcd.com/comics/python_environment_2x.png\" alt=\"xkcd comic about python environments\" width=\"500\"\u003e\u003c/p\u003e  \u003cp\u003ePython packages are constantly updating and changing, and switching between environments, updating or installing new packages, and troubleshooting environment issues will are all necessary skills for when you're a fully-fledged professional data scientist.\u003c/p\u003e  \u003cp\u003eIn general, because we are using Anaconda as our package manager, it is preferable to update or install new packages using \u003ccode\u003econda\u003c/code\u003e options instead of \u003ccode\u003epip\u003c/code\u003e.\u003c/p\u003e  \u003cp\u003eIf you are ever concerned about conflicting package versions, just remember that creating a new conda environment is as easy as \u003ccode\u003econda create --name new-env\u003c/code\u003e - and it is very normal to have different environments with different packages for different purposes. Just remember that you've likely just set up learn-env to activate by default, so you'll need to either change that or activate other environments manually when needed.\u003c/p\u003e  \u003ch2\u003eConfiguring your Kernel and Confirming your Configuration\u003c/h2\u003e  \u003cp\u003eJupyter Notebooks run \"kernels\" - the computational engine used for executing your code. It's important to be running the right kernel within your notebook, otherwise you may get errors stating that you don't have a particular package or have the wrong version of it or even complaints about the version of Python you're running (some packages don't support Python 3.8, for example).\u003c/p\u003e  \u003cp\u003eRight now, let's check that everything is running properly. In your terminal, run \u003ccode\u003ejupyter notebook\u003c/code\u003e. This should prompt a new browser window to open, at an address that is something like \"localhost:8888\". \u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/jupyter-home-dir.png\" width=\"650\"\u003e\u003c/p\u003e  \u003cp\u003eWe'll talk a lot more about Jupyter Notebooks later on in the course, because you'll use them quite a lot! For now, we want to check not only that the terminal shortcut you just used to open a Jupyter Notebook worked, but also that you are running your learn-env kernel in your notebook.\u003c/p\u003e  \u003cp\u003eYou should be able to see learn-env as an option in two places:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eWhen you create a new Jupyter Notebook, by clicking \"New\" on the right-hand side\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/check-kernel1.png\" width=\"650\"\u003e\u003c/p\u003e  \u003cul\u003e \u003cli\u003eOnce you're in a notebook or create a new one, by checking the options under \"Kernel\" in the top menu bar\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/check-kernel2.png\" width=\"650\"\u003e\u003c/p\u003e  \u003cp\u003eIf you don't see the learn-env option in those two places:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eClose the notebook in the browser\u003c/li\u003e \u003cli\u003eClose down the notebook server from the terminal  \u003cul\u003e \u003cli\u003e(run \u003ccode\u003ectrl\u003c/code\u003e + \u003ccode\u003ec\u003c/code\u003e and then type \u003ccode\u003ey\u003c/code\u003e to confirm that you want to close down jupyter)\u003c/li\u003e \u003c/ul\u003e\n\u003c/li\u003e \u003cli\u003eIn the terminal, type \u003ccode\u003epython -m ipykernel install --user --name=learn-env\u003c/code\u003e\n\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eThat will add the learn-env to your list of kernels. When you restart the Jupyter Notebook server and try again, you'll be able to select the learn-env option in those two places above.\u003c/p\u003e  \u003cp\u003eIt will be essential to run \u003ccode\u003econda activate learn-env\u003c/code\u003e every time you start a new terminal window if you do not set your terminal to activate that environment by default. If you don't do this you \u003cstrong\u003ewill\u003c/strong\u003e get errors, so please check this first. You can always run \u003ccode\u003econda info --envs\u003c/code\u003e to see which environment is selected - and, if you run the above steps to set the learn-env to open by default, you won't need to remember to activate every time you open your terminal.\u003c/p\u003e  \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eCongratulations! That was a lot! If you've gotten this far and everything has worked, you have successfully set up your computer with some of the primary tools you need to work as a professional data scientist!\u003c/p\u003e","frontPage":false},{"exportId":"dealing-with-missing-data","title":"Dealing with Missing Data","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn about various strategies for detecting and dealing with missing data using Pandas.  \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIdentify missing values in a dataframe using built-in methods \u003c/li\u003e\n\u003cli\u003eExplain why missing values are a problem in data science \u003c/li\u003e\n\u003cli\u003eEvaluate and execute the best strategy for dealing with missing, duplicate, and erroneous values for a given dataset \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy is missing data a problem?\u003c/h2\u003e\n\n\u003cp\u003eMissing data can be problematic during the Data Science process because \u003ccode\u003eNaN\u003c/code\u003e values in the dataset limit our ability to do important things like:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eConvert data types\u003c/li\u003e\n\u003cli\u003eCalculate summary statistics\u003c/li\u003e\n\u003cli\u003eVisualize data\u003c/li\u003e\n\u003cli\u003eBuild models\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eDetecting missing data\u003c/h2\u003e\n\n\u003cp\u003eThere are two main ways missing data is often represented in datasets.\u003c/p\u003e\n\n\u003ch3\u003e\n\u003ccode\u003eNaN\u003c/code\u003es\u003c/h3\u003e\n\n\u003cp\u003eBy default, pandas represents null values with \u003ccode\u003eNaN\u003c/code\u003e, which is short for \u003cstrong\u003e\u003cem\u003eNot a Number\u003c/em\u003e\u003c/strong\u003e.  Pandas provides many great ways for checking for null values, built right into DataFrames and Series objects.\u003c/p\u003e\n\n\u003ch4\u003eDetecting \u003ccode\u003eNaN\u003c/code\u003es\u003c/h4\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.isna()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eReturns a matrix of boolean values, where all cells containing \u003ccode\u003eNaN\u003c/code\u003e are converted to \u003ccode\u003eTrue\u003c/code\u003e, and all cells containing valid data are converted to \u003ccode\u003eFalse\u003c/code\u003e. \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.isna().sum()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSince \u003ccode\u003eTrue\u003c/code\u003e is equivalent to \u003ccode\u003e1\u003c/code\u003e and \u003ccode\u003eFalse\u003c/code\u003e is equivalent to \u003ccode\u003e0\u003c/code\u003e in Python, taking the \u003ccode\u003e.sum()\u003c/code\u003e of the DataFrame (or Series) will return the total number of \u003ccode\u003eNaN\u003c/code\u003e values in the dataset.  Pandas even breaks this down by column -- see the example output below.\u003c/p\u003e\n\n\u003ch1\u003eNumber of NaNs the in Titanic dataset by column\u003c/h1\u003e\n\n\u003cp\u003ePassengerId      0\nSurvived         0\nPclass           0\nName             0\nSex              0\nAge            177\nSibSp            0\nParch            0\nTicket           0\nFare             0\nCabin          687\nEmbarked         2\u003c/p\u003e\n\n\u003ch3\u003ePlaceholder values\u003c/h3\u003e\n\n\u003cp\u003eOften, datasets will contain missing values that are denoted by a value that seems valid to pandas.  This is very common in real-world datasets -- often, people entering the data are required to enter values that they don't actually have, so they enter an agreed-upon placeholder value.  \u003c/p\u003e\n\n\u003cp\u003eThe easiest way to deal with these is to familiarize yourself with the data dictionary that corresponds to your dataset -- any placeholder values meant to denote a \u003ccode\u003eNaN\u003c/code\u003e value will be specified here. \u003c/p\u003e\n\n\u003cp\u003eHowever, you'll encounter plenty of datasets in the real world that don't come with a data dictionary, or that fail to mention placeholder values.  \u003c/p\u003e\n\n\u003cp\u003eFollow these strategies for detecting placeholder values in your data. \u003c/p\u003e\n\n\u003ch4\u003eNumerical data\u003c/h4\u003e\n\n\u003cp\u003eNumerical columns will often represent missing values with a value that is nonsensical to the column in question.  For instance, in healthcare data, missing values in a \u003ccode\u003eWeight\u003c/code\u003e column may be using impossible values such as \u003ccode\u003e0\u003c/code\u003e or \u003ccode\u003e9999\u003c/code\u003e.  These are valid to the computer, since they are real-numbered, but are obvious to anyone analyzing the data as placeholder values.  \u003c/p\u003e\n\n\u003cp\u003eThese are the most difficult to check for, since this requires getting decently familiar with the column in question enough to notice values that are technically valid but pragmatically impossible. \u003c/p\u003e\n\n\u003cp\u003eTo detect these sorts of placeholder values, start by checking for outliers -- they are often encoded as very large numbers, or as 0 (when 0 isn't a realistic value for the column in question).  Any good placeholder value will be a value that couldn't show up in the real world.  \u003c/p\u003e\n\n\u003cp\u003eHowever, you may also find actual outliers (values that are \u003cem\u003enot impossible\u003c/em\u003e, but \u003cem\u003eoccur rarely\u003c/em\u003e). Outliers, like missing or corrupt data, can adversely effect your Machine Learning models. Some of the ways in which you can identify outliers are: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eStandard deviation\u003c/strong\u003e: If the data is normally distributed (or nearly normal), you can use three standard deviations as a cutoff point. In a normal distribution, three standard devations from the mean in both the directions cover 99.7% of the data, so any values outside this range are highly improbable, and can be safely discarded as outliers. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-dealing-missing-data/master/images/normal_sd_new.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eYou will learn more about normal distribution in a later lesson. \u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eInterquartile range (IQR)\u003c/strong\u003e: If the data is not normally distribued, you can use the same method boxplots use to determine the outliers -- all observations that lie 1.5 times the IQR (difference between the 75th and the 25th percentiles of the data) away from the median in either direction are treated as outliers. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-dealing-missing-data/master/images/new_boxplot.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf you need a refresher on IQR, refer to the lesson on \u003cem\u003eMeasures of Dispersion\u003c/em\u003e in the \u003cem\u003eImporting and Statistical Analysis of Data\u003c/em\u003e section of Module 1.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAnother way to confirm these values is to check the \u003ccode\u003e.value_counts()\u003c/code\u003e of a column.  In a continuously-valued column, it is probably rare for one specific value to overwhelm all the others.  If, for instance, you see the same numerical value showing up a statistically improbable number of times, double-check that this value is real -- placeholder values have the potential to show up many times, but it's much less likely for real-valued numbers.  \u003c/p\u003e\n\n\u003ch4\u003eCategorical data\u003c/h4\u003e\n\n\u003cp\u003eTo detect placeholder values in categorical data, get the unique values in the column and see if there are any values that don't match up with your expectations.  Pandas provides a built-in method for this.  For instance, in the titanic dataset, we can check the unique values of the \u003ccode\u003eEmbarked\u003c/code\u003e column by typing:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Embarked'].unique()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis will return an array containing all the unique values in the dataset.  \u003c/p\u003e\n\n\u003cp\u003eNote that for categorical columns, it is much more likely to have a data dictionary to work with, since it is common to have categorical values that aren't readily understandable without a data dictionary to help us figure out what each potential category means.  \u003c/p\u003e\n\n\u003ch2\u003eStrategies for dealing with missing data\u003c/h2\u003e\n\n\u003cp\u003eDetecting missing values isn't enough -- we need to deal with them in order to move forward! We have three options for dealing with missing values -- removing them from the dataset, keeping them, or replacing them with another value. \u003c/p\u003e\n\n\u003ch3\u003eRemove\u003c/h3\u003e\n\n\u003cp\u003eThe easiest way to deal with missing values is to drop the offending rows and/or columns.  The downside to this is that we lose data in the process.  This is a valid strategy on very large datasets -- however, on smaller datasets, throwing away data may be unacceptable.  \u003c/p\u003e\n\n\u003cp\u003eThe two main strategies for dealing with missing values are to drop columns or to drop rows. For this strategy, it does not matter if we are dealing with continuous or categorical data.  \u003c/p\u003e\n\n\u003ch4\u003eDropping columns\u003c/h4\u003e\n\n\u003cp\u003eConsider the output from the titanic dataset shown previously.  The \u003ccode\u003eCabins\u003c/code\u003e column contains 687 missing values. The entire dataset only contains around 900 rows of data.  In this case, it makes more sense to just remove the \u003ccode\u003eCabins\u003c/code\u003e  column from the dataset entirely.  \u003c/p\u003e\n\n\u003cp\u003eNote that while this makes sense for the \u003ccode\u003eCabins\u003c/code\u003e column, this is not a good idea for dealing with the null values contained within the \u003ccode\u003eAge\u003c/code\u003e column. Although the \u003ccode\u003eAge\u003c/code\u003e column contains 75 missing values, the vast majority of the items in this dataset contain perfectly good information for the age column.  If we dropped this column, we would be throwing out all that information just to deal with a small subset of missing values in that column!\u003c/p\u003e\n\n\u003ch4\u003eDropping rows\u003c/h4\u003e\n\n\u003cp\u003eIn the above example, dropping all rows that contain a null value would be a very bad idea, because we would 3/4 of our data! Dropping rows makes more sense when the proportion of rows with missing values is very small compared to the size of the overall dataset -- it's okay to just throw out the missing values as long as it's not too many observations. There's no hard rule for exactly how many missing values is the right amount to throw out, and will vary project by project.  Think critically, and use your best judgment!\u003c/p\u003e\n\n\u003cp\u003eTo drop all rows containing missing values in a DataFrame, use \u003ccode\u003edataframe.dropna()\u003c/code\u003e.  Note that this returns a copy of the dataframe with the rows in question dropped -- however, you can mutate the DataFrame in place by passing in \u003ccode\u003einplace=True\u003c/code\u003e as a parameter to the method call. \u003c/p\u003e\n\n\u003ch3\u003eReplace\u003c/h3\u003e\n\n\u003cp\u003eWe can also deal with missing values by replacing them with a common value. The downside of this method is that this can introduce noise into our dataset. \u003c/p\u003e\n\n\u003ch4\u003eContinuous data\u003c/h4\u003e\n\n\u003cp\u003eFor continuous data, the best solution is to replace the missing values with the median value for that column. The median value is a good choice because it is least likely to influence the distribution of the dataset overall. If the dataset is symmetric, then the mean and the median will be the same value. If the dataset is not symmetric, then the mean is more likely to be skewed by outlier values, so the median is a better choice.  \u003c/p\u003e\n\n\u003cp\u003ePandas provides an easy way for us to replace null values. For instance, if we wanted to replace all null values in the \u003ccode\u003eFare\u003c/code\u003e column with the column median, we would type:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Fare'].fillna(df['Fare'].median())\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch4\u003eCategorical data\u003c/h4\u003e\n\n\u003cp\u003eWith categorical data, this is harder, since we don't have summary statistics to lean on such as the median or the mean. In this case, if one categorical value is much more common than others, it is a valid strategy to replace missing values with this common value. However, make sure to examine your data first! If all the categorical values are equally common, picking one to replace all the missing values may do more harm than good by skewing the distribution and introducing some false signal into your dataset.\u003c/p\u003e\n\n\u003ch3\u003eKeep\u003c/h3\u003e\n\n\u003cp\u003eSometimes, the knowledge that a value is missing can itself be informative for us.  If knowing that a value is missing tells you something, then it is often worth keeping the missing values using the following strategies. \u003c/p\u003e\n\n\u003ch4\u003eCategorical data\u003c/h4\u003e\n\n\u003cp\u003eThis one is the easiest -- just treat missing values as its own category! This may require replacing missing values with a string to denote this, as your model will still likely throw errors if the actual \u003ccode\u003eNaN\u003c/code\u003e values are not replaced. In that case, just replace the \u003ccode\u003eNaN\u003c/code\u003e values with the string \u003ccode\u003e'NaN'\u003c/code\u003e, or another string that makes it obvious that this value is \u003ccode\u003e'missing'\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch4\u003eNumerical data\u003c/h4\u003e\n\n\u003cp\u003eOften, missing values inside a continuously-valued column will cause all sorts of havoc in your models, so leaving the \u003ccode\u003eNaN\u003c/code\u003es alone isn't usually an option here.  Instead, consider using \u003cstrong\u003e\u003cem\u003eCoarse Classification\u003c/em\u003e\u003c/strong\u003e, also referred to as \u003cstrong\u003e\u003cem\u003eBinning\u003c/em\u003e\u003c/strong\u003e.  This allows us to convert the entire column from a numerical column to a categorical column by binning our data into categories. For instance, we could deal with the missing values in the \u003ccode\u003eAge\u003c/code\u003e column by creating a categorical column that separates each person into 10-year age ranges. Anybody between the ages of 0 and 10 would be a \u003ccode\u003e1\u003c/code\u003e, 11 to 20 would be a \u003ccode\u003e2\u003c/code\u003e, and so on.  \u003c/p\u003e\n\n\u003cp\u003eOnce we have binned the data in a new column, we can throw out the numerical version of the column, and just leave the missing values as one more valid category inside our new categorical column!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this section, we learned:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eStrategies for detecting \u003ccode\u003eNaN\u003c/code\u003e values in pandas\u003c/li\u003e\n\u003cli\u003eStrategies for detecting missing data denoted by place holder values\u003c/li\u003e\n\u003cli\u003eHow to deal with missing values by \u003cem\u003eRemoving\u003c/em\u003e, \u003cem\u003eReplacing\u003c/em\u003e, or \u003cem\u003eKeeping\u003c/em\u003e them!\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-dealing-missing-data\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-dealing-missing-data\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"nosql-databases","title":"NoSQL Databases","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn about some of the various kinds of NoSQL databases, and their use cases.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain why NoSQL is useful\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eExplore real-world use cases of NoSQL databases\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy NoSQL?\u003c/h2\u003e\n\n\u003cp\u003eRelational databases are a cornerstone of a modern technology. They're reliable, dependable, and they seem to be pretty much everywhere. Since their invention at IBM by Edgar Codd in 1970, they've rapidly grown to be used all over the place. Their creation allowed companies to track, store, and analyze data in ways that simply couldn't be done before. For the majority of situations, they're a great choice. However, as technology has progressed into the era of internet and smartphones, we've run into many different sorts of data that aren't a natural fit for a relational format. Let's examine a few of these situations, and see why NoSQL might be a better choice. \u003c/p\u003e\n\n\u003cp\u003eLet's assume that we need to store chat logs between customer service and customers through a web interface. These chats could be very short, or very long -- some chats may only be 2 or 3 messages, while others may conceivably be in the hundreds or thousands. For each message in the chat, we want to store metadata associated with the message, so that we can know things like which party sent the message, the time it was sent, the time the other party read the message, etc. This is a great use case for a NoSQL database, because it would be a very poor fit for a relational database. For starters, each chat can be any size, meaning that we can't just clearly define a table that links which messages belong to which chat. If every chat had only five messages, we might be able to make it work, with a column for \"message 1\", \"message 2\", and so on -- but we can't, because a chat has no set size, and can always grow larger in the future. A relational database would also waste a lot of space storing redundant information, and getting all the messages in a chat could result in some nasty runtimes for our SQL query if this data was stored in separate tables in something like the third normal format. \u003c/p\u003e\n\n\u003cp\u003eFor each of the database types below, we'll explore some brief real-world examples of when they're the ideal choice. As with the example above, the common thread that runs among all of them is that they aren't a great fit for a relational database. \u003c/p\u003e\n\n\u003ch2\u003eDocument Stores\u003c/h2\u003e\n\n\u003cp\u003eA \u003cstrong\u003e\u003cem\u003eDocument Store\u003c/em\u003e\u003c/strong\u003e is a database that stores records as unique documents in the database. These documents can be arbitrarily long, and can even contain other documents inside of them! The chat log example we saw above is a prime use case for a document store. In a document store, we could store each message and its accompanying metadata as a document, and then embed each of those documents in order in a chat document. In this way, we can easily access the data as needed. \u003c/p\u003e\n\n\u003cp\u003eIn these Document Stores, each document contains key-value pairs, with the actual data being stored in as the value. This makes Document Stores incredibly flexible, because each document can be unique. There is no constraint saying each document must have the same keys! This makes it great for working with data where we don't know what shape it will take (as we saw above, with chat logs that can be arbitrarily long or short), or perhaps when we don't know what data will be stored at all. This would be a problem in a relational database, because we would need to know what column the data belongs in before we could store it. With a Document Store, we can just create a key on the fly for the data that matters to us!\u003c/p\u003e\n\n\u003cp\u003eNote that while this flexibility makes it easy for us to store data on the fly, this also makes it harder for us to query data and get exactly what we need. Since each different document can potentially have its own \u003cstrong\u003e\u003cem\u003eSchema\u003c/em\u003e\u003c/strong\u003e, this means that we have to know what we are looking for. This also means that we have to be diligent in our naming conventions, because \u003ccode\u003echatLog\u003c/code\u003e is different than \u003ccode\u003eChatLog\u003c/code\u003e. This means that if we run a query across all documents to get all data with the key \u003ccode\u003echatLog\u003c/code\u003e, we'll completely miss any data where they key is written as \u003ccode\u003eChatLog\u003c/code\u003e!\u003c/p\u003e\n\n\u003ch5\u003ePopular  Document Store Databases: MongoDB and Couchbase\u003c/h5\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/mongo-db-logo.png\" height=\"60%\" width=\"60%\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/couchbase-logo.png\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eKey-Value Stores and Column Stores\u003c/h2\u003e\n\n\u003cp\u003eAlthough \u003cstrong\u003e\u003cem\u003eKey-Value Stores\u003c/em\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003cem\u003eColumn Stores\u003c/em\u003e\u003c/strong\u003e are two different kinds of databases, they both store their data in ways you're already familiar with, because you've seen them in Python and Pandas!  \u003cstrong\u003e\u003cem\u003eKey-Value Stores\u003c/em\u003e\u003c/strong\u003e work exactly like they sound -- just like a Python dictionary! They are powered by a hash table under the hood, and to access data, you just pass in the unique key for the value that you want. \u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eColumn Stores\u003c/em\u003e\u003c/strong\u003e work a bit more like how pandas stores data under the hood. Recall that in pandas, a DataFrame is stored as a collection of \u003ccode\u003eSeries\u003c/code\u003e objects, with each column getting it's own series. The same general principle is at work for Column Stores -- each column is stored separately, allowing for very fast reads when querying data. \u003c/p\u003e\n\n\u003ch5\u003ePopular Key-Value Store Database: Amazon DynamoDB\u003c/h5\u003e\n\n\u003ch5\u003ePopular Column Store Database: Google BigTable\u003c/h5\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/bigtable.png\" height=\"60%\" width=\"60%\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/dynamodb.png\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eGraph Databases\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eGraph Databases\u003c/em\u003e\u003c/strong\u003e are based on the idea of the kind of graphs you might have seen in higher-level math classes -- the kind that are made up of \u003cstrong\u003e\u003cem\u003eNodes\u003c/em\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003cem\u003eEdges\u003c/em\u003e\u003c/strong\u003e. These sorts of databases excel at storing data where there are multiple associations between the entities stored in the database. The most obvious use case here is social media. Think for a second about what it would take to represent all of your friends on Facebook or Twitter in a relational database. This would be a pretty gargantuan data engineering task! However, with Graph Databases, it's quite easy. In a graph database, every user is a node, and each connection between you and one of the nodes representing one of your Facebook friends is an edge. In each node, we can store an arbitrary amount of metadata, which allows us to store things like user information. These sorts of databases really shine when you need to ask questions about the connections between users or objects in a database. For instance, what if we wanted to determine who the greatest influencers are among the Data Science community on Facebook? Even thinking about how you might approach this problem in a relational database is a surefire way to get a headache, but this sort of query is quite easy in a Graph Database -- one approach might be to examine all the Nodes with a metadata tag listing their job as \"Data Scientist\", and then examine who has the most shared connections among this community. \u003c/p\u003e\n\n\u003ch5\u003ePopular Graph Databases: Neo4J and OrientDB\u003c/h5\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/neo4j-logo.png\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/orientdb-logo.png\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eRDDs and Big Data\u003c/h2\u003e\n\n\u003cp\u003eThe Term \"RDD\" is short for \u003cstrong\u003e\u003cem\u003eResilient Distributed Dataset\u003c/em\u003e\u003c/strong\u003e, and it's the backbone behind all the fuss surrounding \"Big Data\". The most popular platforms that support RDDs are Hadoop and Spark, which are related to one another. Spark is built on top of Hadoop and allows users a cleaner, faster way of dealing with distributed datasets. A \u003cem\u003eResilient Distributed Dataset\u003c/em\u003e is a collection of an arbitrary number of server clusters that share a full dataset distributed between them. With multiple servers comes multiple opportunities for things like server failures, and our dataset is no good if we have no guarantee that part of our dataset might be missing when we go to query for it. Relational databases are stored on a single server, which means that when the server is down, there's no doing anything until it comes back up. However, what if our Hadoop cluster contains 100 servers, and 2 are down when we write our query?  Without a way of making sure our RDD is \u003cstrong\u003e\u003cem\u003eFault Tolerant\u003c/em\u003e\u003c/strong\u003e, we could get incorrect information back because we think we've queried the entire dataset, but don't realize that two servers weren't up to contribute their data to the query. The way that RDDs like Hadoop and Spark deal with this is by chopping the data into different labeled blocks, and then storing multiple different backups of each block across all the different server clusters. For example, let's say that we've divided our dataset into blocks labeled, A, B, and C. Server 1 will host block A, but will also contain a backup of block B, and a backup of Block C, in that order. Server 2 will host Block B, but will contain backups of Block B and Block C, while Server 3 will host C first and contain backups of A and B. When things are working smoothly, Server 1 will run the query passed only on block A, Server 2 on Block B, etc. If Server B goes down, then our query will run on Blocks A and C because of Servers 1 and 3 first, and then the backup will kick in and Server 1 will then run the query on Block B. \u003c/p\u003e\n\n\u003cp\u003eIf you've never worked with RDDs before, this probably sounds slow and unnecessarily redundant. On small or normal-sized datasets, you're absolutely right. However, in this day and age, there has been a massive explosion in the amount of data created and stored every day. When working with truly \u003cem\u003eBig Data\u003c/em\u003e, the distributed architecture provides massive speedups to query times by distributing the workload across multiple servers. \u003c/p\u003e\n\n\u003cp\u003eAs an example, let's pretend that you're a Data Scientist for a major retailer that sells everything under the sun at discount prices -- we'll call this company WallMart. At the end of every day, your boss wants to know the total number of sales in each department. If your data was stored in a relational database, this would mean executing a query on a single, truly massive relational database, which can only work as fast as its processor allows. Each query would have to go through trillions of rows to find what it needs, aggregate the sales for each category, and then return the answer. Running this query on a traditional relational database would likely take days, or even weeks! \u003c/p\u003e\n\n\u003cp\u003eHowever, this would be a very different story with an RDD like Hadoop or Spark. Instead of running this on a single machine, we can just put a small server in each store location to keep track of all that store's data and transactions. When we need to run a query, our distributed system will ask each store's server to get the total number of sales for each department \u003cem\u003esimultaneously\u003c/em\u003e. For a single store, this is a much smaller query, so it will run quite quickly. Then, once we have the totals for each department from each store, we can just combine them together into grand totals for each, getting us the answer we needed in seconds instead of days! The idea of having each server run some query or function at the same time, and then combining the results is based on the idea of \u003cstrong\u003e\u003cem\u003eMapReduce\u003c/em\u003e\u003c/strong\u003e, which is the secret sauce behind RDDs. When we ask each server to run the function or query at the same time, this is the \"Map\" step. When we combine the results from each server into a single aggregate, this is the \"Reduce\" step. \u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/hadoop.png\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/spark.png\" height=\"10%\" width=\"10%\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned about the various sorts of NoSQL Databases in the market today. We dug into the similarities and differences between them all, and also looked at a few examples where a NoSQL Database is a more natural fit for storing data than a traditional relational database. \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-nosql-databases\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-nosql-databases\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"git-merge-lab","title":"Git Merge - Lab","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-merge-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-merge-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIt's time to continue to practice your git and bash skills! In this lab, you'll work primarily from the command line in order to create a git repository, create a development branch and practice merging updates into a master copy. Along the way, you'll see how python scripts can be run from the command line and continue to get more familiar with git and bash in general!\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eExplain branches and their purpose in git\u003c/li\u003e\n\u003cli\u003eCreate a new branch\u003c/li\u003e\n\u003cli\u003eSwitch between branches\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit merge\u003c/code\u003e to merge different branches\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eCreate a Local Folder to House the Git Repository\u003c/h2\u003e\n\u003cp\u003eTo start, create a folder from the command line. (Be sure to place this in a logical, organized location!)\u003c/p\u003e\n\u003ch2\u003eInitialize Git In Your New Folder\u003c/h2\u003e\n\u003cp\u003eStill working from the command line, navigate into your folder and initialize git!\u003c/p\u003e\n\u003ch2\u003eOptional: Check What's Going On with git status\u003c/h2\u003e\n\u003ch2\u003eCreate a New Python File\u003c/h2\u003e\n\u003cp\u003eFrom the command line type \u003ccode\u003enano numbers.py\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eInside the file that opens write the following:\u003c/p\u003e\n\u003cp\u003e(use 4 spaces for the indentation on the second line) \u003ccode\u003e\nfor i in range(10):\n    print(i**2)\n\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003ePress Ctrl+X to exit and press Y to confirm that you wish to save your changes.\u003c/p\u003e\n\u003ch2\u003eTest Your Python File\u003c/h2\u003e\n\u003cp\u003ePython files can be run from the command line with \u003ccode\u003epython filename\u003c/code\u003e.\u003cbr\u003eSo in this case, let's practice running our super simple script with \u003ccode\u003epython numbers.py\u003c/code\u003e. With luck, you should see the square numbers up through 81.\u003c/p\u003e\n\u003ch2\u003eAdd and Commit Your Changes\u003c/h2\u003e\n\u003cp\u003eAdd and commit (with a comment) your new file.\u003c/p\u003e\n\u003ch2\u003eCreate and Checkout a New Branch\u003c/h2\u003e\n\u003cp\u003eCreate a new branch called cubes and switch to it.\u003c/p\u003e\n\u003ch2\u003eModify the Branch\u003c/h2\u003e\n\u003cp\u003eType \u003ccode\u003enano numbers.py\u003c/code\u003e to open up the file again.\u003c/p\u003e\n\u003cp\u003eChange the file from\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efor i in range(10):\n    print(i**2)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eto\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efor i in range(10):\n    print(i**3)\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eAdd and Commit the Changes to the Cubes Branch\u003c/h2\u003e\n\u003cp\u003eAdd and commit your changes to the cubes branch.\u003c/p\u003e\n\u003ch2\u003eSwitch Back to the Master Branch\u003c/h2\u003e\n\u003cp\u003eNow that we've made development changes in our new branch, we may wish to integrate them back into our master branch such as updating our production code. To do this, we'll switch back to the master branch and then merge the changes we made to our development branch.\u003c/p\u003e\n\u003ch2\u003eMerge the Changes from Cubes\u003c/h2\u003e\n\u003cp\u003eFinally, let's merge the changes from the cubes branch into our master branch.\u003c/p\u003e\n\u003ch2\u003eDo a Couple Sanity Checks\u003c/h2\u003e\n\u003cp\u003eEverything should have gone smoothly, but let's do a couple of checks to be sure. Try running the python file again and observe the output. Take a look a \u003ccode\u003egit status\u003c/code\u003e and see what the output is.\u003c/p\u003e\n\u003ch2\u003eDelete the Development Branch\u003c/h2\u003e\n\u003cp\u003eWhile deleting branches should be cautionary, now that we've merged our changes into the master, we really don't need our development cubes branch anymore. To clean things up, delete the branch.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eCongratulations! In this lab, you practiced using multiple branches in git and merging your changes together. What's more, we also saw that you can use git locally with no remote connection to GitHub if you wish!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-git-merge-lab\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-git-merge-lab\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-merge-lab/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\n\u003c/footer\u003e","frontPage":false},{"exportId":"setting-up-a-professional-data-science-environment-introduction","title":"Setting up a Professional Data Science Environment - Introduction","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-introduction\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-introduction/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you want to become a professional data scientist, it’s important to take a little time to “set yourself up for success” by installing and learning to use the right tools on your computer.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eList some tools used by professional data scientists, and why they are useful\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eWhat Tools do Professional Data Scientists Use?\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003ePython\u003c/strong\u003e - There are many languages that can be used for data science, but these days most data scientists are using Python to write their code.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eJupyter Notebook\u003c/strong\u003e - Most of those data scientists use Jupyter Notebook for writing their Python code. Jupyter Notebook is a tool that allows you to mix comments in-between your code snippets so you can document and share your thought process and make it easier for others to review, replicate, and expand on your work. It's also what we're using for almost all of our lessons in this course!\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eAnaconda\u003c/strong\u003e - Anaconda is one of the most popular ways for data scientists to install Python and Jupyter on their computers. It also provides package management and virtual environments so you can get all the latest data science tools running, like NumPy, Scikit-Learn, and Tensorflow, and so you can use different versions of Python and your packages for different projects without them conflicting with each other.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eGit\u003c/strong\u003e - Git is a version control system. It’s a way of keeping track of all the changes made across your project. Think of it like “track changes” in Word - but with the ability to track changes across multiple documents. At Flatiron School, we use Git to keep track of all of the lessons we create and all the changes we make to them.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eGitHub\u003c/strong\u003e - GitHub is a website where data scientists (and programmers) can save their work in case their computer breaks, and share it with their team or the world! At Flatiron School, we store all of our lessons on GitHub.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIt’s going to take us a few minutes to get this all installed, but once we do, not only will you be set-up for working through the course, but you’ll also have a professional data science setup on your computer for any future courses or projects you want to work on!\u003c/p\u003e\n\u003ch2\u003eComputer Prerequisites\u003c/h2\u003e\n\u003cp\u003eThere are many amazing computing devices available these days, but not all of them will allow you to do data science. We love smartphones, flip phones, Chromebooks, tablets (including iPads), Game Boys, Nintendo Switches, Rokus and Arduinos. But you’re not going to be able to complete this course on any of those devices.\u003c/p\u003e\n\u003cp\u003eYou’re going to need a computer (laptop or desktop). It should be running a recent (last 3-4 years) version of MacOS, Windows or Linux, and ideally, it should have 8Gb of RAM and at least 20Gb free hard drive space. More information \u003ca id=\"32789\" class=\"instructure_file_link instructure_scribd_file\" href=\"viewer/files/ComputerRequirements.pdf?canvas_download=1\u0026amp;canvas_qs_wrap=1\" target=\"_blank\" data-canvas-previewable=\"true\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/files/32789\" data-api-returntype=\"File\"\u003ein this document\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eIn the next few lessons, you'll install and configure some of the primary tools that you'll use as a data scientist!\u003c/p\u003e","frontPage":false},{"exportId":"introducing-python-libraries","title":"Introducing Python Libraries","type":"WikiPage","content":"\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eA library (or a module/package) is a pre-written piece of software that you can re-use rather than having to write that functionality yourself. So instead of having to write the code from scratch to plot a bar chart, you can use the Matplotlib library.\u003c/p\u003e\n\u003cp\u003eIn this lesson, we will look at some of the key libraries used in Python for Data Science.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eExplain the purpose of common Python libraries in the data science toolkit\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003ePython Libraries for Data Science\u003c/h2\u003e\n\u003ch3\u003eScientific Computation\u003c/h3\u003e\n\u003cp\u003eOne of the key requirements for a Data Scientist is to be able to convert data into an easy-to-process format. Data, represented inside a computer, may become too large to be processed efficiently by Python's native lists and dictionaries and using Python's built-in methods. The following libraries add scientific computation abilities to Python for working efficiently with larger data sets.\u003c/p\u003e\n\u003ch3\u003eNumPy\u003c/h3\u003e\n\u003cp\u003eIn Python, the most fundamental package used for scientific computation is \u003cstrong\u003eNumPy\u003c/strong\u003e (Numerical Python). It provides lots of useful functionality for mathematical operations on vectors and matrices in Python. Matrix computation is the primary strength of NumPy.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/numpy.jpeg\" width=\"250\"\u003e\u003c/p\u003e\n\u003cp\u003eThe library provides these mathematical operations using the NumPy \u003cstrong\u003earray\u003c/strong\u003e data type, which enhances performance and speeds up execution when compared to Python's default methods and data types. It contains among other things:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA powerful N-dimensional array object\u003c/li\u003e\n\u003cli\u003eSophisticated (broadcasting) functions\u003c/li\u003e\n\u003cli\u003eTools for integrating C/C++ and Fortran code\u003c/li\u003e\n\u003cli\u003eUseful linear algebra, Fourier transform, and random number capabilities\u003c/li\u003e\n\u003cli\u003eBesides its obvious scientific uses, NumPy can also be used as an efficient multi-dimensional container of generic data. Arbitrary data-types can be defined. This allows NumPy to seamlessly and speedily integrate with a wide variety of databases.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNumpy is also used as a foundation for other, more advanced, libraries as we shall see below.\u003c/p\u003e\n\u003ch3\u003eSciPy\u003c/h3\u003e\n\u003cp\u003eIn the Data Science domain, Python’s SciPy stack (a collection of software specifically designed for scientific computing) is used heavily for conducting scientific experiments. The SciPy library is as an integral part of this stack.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/scipy.png\" width=\"150\"\u003e\u003c/p\u003e\n\u003cp\u003eSciPy is a library of software for engineering and science applications and contains functions for \u003cstrong\u003elinear algebra\u003c/strong\u003e, \u003cstrong\u003eoptimization\u003c/strong\u003e, \u003cstrong\u003eintegration\u003c/strong\u003e, and \u003cstrong\u003estatistics\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eThe functionality of the SciPy library is built on top of NumPy, and its data structures make heavy use of NumPy. It provides efficient numerical computational routines and comes packaged with a number of specific submodules. The following are a few modules from this library which are very commonly applied to Data Science experiments:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003estats\u003c/code\u003e: Statistical functions\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003elinalg\u003c/code\u003e: Linear algebra routines\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003efftpack\u003c/code\u003e: Discrete Fourier transform algorithms\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003esignal\u003c/code\u003e: Signal processing tools\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eoptimize\u003c/code\u003e: Optimization algorithms including linear programming\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eStatsmodels\u003c/h3\u003e\n\u003cp\u003eStatsmodels is a library for Python that enables its users to conduct data exploration via the use of various methods of estimation of statistical models and performing statistical assertions and analysis.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/statsmodels-logo-300.png\" width=\"250\"\u003e\u003c/p\u003e\n\u003cp\u003eOne of the many useful features it provides is a comprehensive set of descriptive statistics. The library provides insights when diagnosing issues with linear regression models, generalized linear models, discrete choice models, robust linear models, and time series analysis models with various estimators.\u003c/p\u003e\n\u003cp\u003eThe library also provides extensive plotting functions that are designed specifically for statistical analysis and are optimized for good performance with large data sets.\u003c/p\u003e\n\u003ch3\u003ePandas\u003c/h3\u003e\n\u003cp\u003ePandas is a Python package designed to work with “relational” data and helps replicates the functionality of relational databases in a simple and intuitive way. Pandas is a great tool for data wrangling. It is designed for quick and easy data cleansing, manipulation, aggregation, and visualization.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/pandas-300x300.jpg\" width=\"200\"\u003e\u003c/p\u003e\n\u003cp\u003eThere are two main data structures in the library:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e“Series” - one-dimensional\u003c/li\u003e\n\u003cli\u003e“DataFrames” - two-dimensional\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThese data types can be manipulated in a number of ways for analytical needs. Here are a few ways in which Pandas may come in handy:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eEasily delete and add columns from DataFrame\u003c/li\u003e\n\u003cli\u003eConvert data structures to DataFrame objects\u003c/li\u003e\n\u003cli\u003eHandle missing data and outliers\u003c/li\u003e\n\u003cli\u003ePowerful grouping and aggregation functionality\u003c/li\u003e\n\u003cli\u003eOffers visualization functionality to plot complex statistical visualizations on the go\u003c/li\u003e\n\u003cli\u003eThe data structures in Pandas are highly compatible with most of the other libraries\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eData Visualization\u003c/h2\u003e\n\u003cp\u003eData visualization is one of the most common tasks that Data Scientists have to perform. Traditionally, drawing visualizations would involve providing pixel level details and complex mathematical functions to create the plots. Luckily, Python has good library support for data visualization from plotting routine visualizations in Matplotlib, to developing graphical dashboards in Plotly and Bokeh. In this course, we will cover the following graphical packages:\u003c/p\u003e\n\u003ch3\u003eMatplotLib\u003c/h3\u003e\n\u003cp\u003eMatplotlib is another SciPy stack package and a library that is tailored for the generation of simple and powerful visualizations. It is a sophisticated package which is making Python (with the help of NumPy, SciPy, and Pandas) an industry standard analytics tool.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/matplotlib.png\" width=\"300\"\u003e\u003c/p\u003e\n\u003cp\u003eMatplotlib is a flexible plotting library for creating interactive 2D and 3D plots that can also be saved as manuscript-quality figures. The API in many ways reflects that of MATLAB, easing the transition of MATLAB users to Python. Many examples, along with the source code to re-create them, are available in the Matplotlib gallery. With a bit of effort you can make just about any visualization, including:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eLine plots\nScatter plots\nBar charts and Histograms\nPie charts\nStem plots\nContour plots\nQuiver plots\nSpectrograms\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThere are also facilities for creating labels, grids, legends, and many other formatting entities with Matplotlib. Basically, everything is customizable.\u003c/p\u003e\n\u003cp\u003eThe library, however, is pretty low-level which means that you will need to write more code for advanced visualizations and will generally need more effort.\u003c/p\u003e\n\u003ch3\u003eSeaborn\u003c/h3\u003e\n\u003cp\u003eSeaborn is complementary to Matplotlib and it specifically targets statistical data visualizations, which may be more time-consuming to implement using Matplotlib. Seaborn extends the functionality of Matplotlib and that’s why it can address the two biggest issues with Matplotlib - the quality of plots and parameter defaults. A full overview of Seaborn's capabilities (as the image below) can be found \u003ca href=\"https://seaborn.pydata.org/examples/index.html\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/seaborn_2.png\" width=\"500\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf Matplotlib \"tries to make easy things easy and hard things possible,\" then Seaborn tries to make a well-defined set of hard things easy too.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSince Seaborn complements and extends Matplotlib, if you know Matplotlib, you’ll already have most of Seaborn down. Your plots with Seaborn will be more attractive, need less time to create, and will reveal more information.\u003c/p\u003e\n\u003ch2\u003eMachine Learning\u003c/h2\u003e\n\u003ch3\u003eScikit-Learn\u003c/h3\u003e\n\u003cp\u003eScikits are Scientific \"kits\" on top of the SciPy stack. These are designed to add specific functionality to SciPy like image processing and machine learning facilitation. For machine learning, one of the most heavily used packages is \u003cstrong\u003escikit-learn\u003c/strong\u003e. The package makes heavy use of its mathematical operations to model and test complex computational algorithms.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/sklearn.png\" width=\"200\"\u003e\u003c/p\u003e\n\u003cp\u003eScikit-learn (sometimes abbreviated to sklearn) offers a consistent interface to common Machine Learning (ML) algorithms, making it simple to bring ML into production systems. The library combines quality code and good documentation, ease of use and high performance, and has become industry standard for machine learning with Python. The image below highlights the key machine learning algorithms that come packaged with sklearn for problems in classification, regression, clustering, and dimensionality reduction. You can find an interactive version of the machine learning map below \u003ca href=\"https://scikit-learn.org/stable/tutorial/machine_learning_map/index.html\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/drop_shadows_background.png\" width=\"850\"\u003e\u003c/p\u003e\n\u003ch2\u003eDeep Learning  (Keras / TensorFlow)\u003c/h2\u003e\n\u003cp\u003eFor Deep Learning, one of the most popular and convenient libraries for Python is Keras, which builds on top of TensorFlow.\u003c/p\u003e\n\u003ch3\u003eTensorFlow\u003c/h3\u003e\n\u003cp\u003eDeveloped by a team of ML experts at Google, TensorFlow is an open-source library of data flow graph computations, which are fine-tuned for heavy duty Machine Learning. TensorFlow was designed to meet the performance requirements of Google for training Deep Neural Networks in order to analyze visual and textual data. However, TensorFlow isn't limited to scientific use - it is general enough to use in a variety of real-world applications.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/tf.png\" width=\"320\"\u003e\u003c/p\u003e\n\u003cp\u003eThe key feature of TensorFlow is its multi-layered nodes system that enables quick training of artificial neural networks on big data. This is the library that powers Google’s voice recognition and object recognition in real time.\u003c/p\u003e\n\u003ch3\u003eKeras\u003c/h3\u003e\n\u003cp\u003eKeras is an open-source library for building Neural Networks with a high-level of interface abstraction. The Keras library is written in Python so Python developers find it much easier to start coding for deep networks in Keras than Tensorflow, which demands a deeper understanding of graph computation. Keras is much more minimalistic and straightforward while still being highly extensible. Under the hood, it can use either Theano (another deep learning library) or TensorFlow.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/keras.jpg\" width=\"320\"\u003e\u003c/p\u003e\n\u003cp\u003eKeras is really easy to get started with and for quick prototyping, it is highly modular and extensible. Notwithstanding its ease, simplicity, and high-level orientation, Keras is still deep and powerful enough for serious modeling. In the deep learning section of our course, we will introduce you to Keras to help you dive into deep neural networks.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eA big part of your journey as a Data Scientist will be building comfort and familiarity with the key Python Data Science libraries that we've outlined in this lesson. As the course progresses, you'll get plenty of hands-on experience with each one of them!\u003c/p\u003e","frontPage":false},{"exportId":"bash-and-git-introduction","title":"Bash and Git - Introduction","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-bash-collab-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-bash-collab-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll learn about Bash command line and Git. You've seen a bit of this from our first section in which you took a look at how to clone a GitHub repository. Now, we'll further investigate how to navigate the command line and use more powerful Git techniques. \u003c/p\u003e\n\n\u003ch2\u003eBash and the command line\u003c/h2\u003e\n\n\u003cp\u003eThe command line or shell is the preliminary interface where users can interact with the operating system. Before applications, windows, and graphical user interfaces, all interaction with the computer was facilitated through the command line. Of these command line shells, bash now comes preinstalled in every mac and many other unix based systems.\u003c/p\u003e\n\n\u003ch3\u003eNavigating directories\u003c/h3\u003e\n\n\u003cp\u003eThe preliminary fundamental techniques you'll practice in this section are changing directories using the \u003ccode\u003ecd\u003c/code\u003e command, making directories with the \u003ccode\u003emkdir\u003c/code\u003e command, and checking where you are using the print working directory, \u003ccode\u003epwd\u003c/code\u003e command. In addition, you'll also take a look at how to create and edit files from the command line using the \u003ccode\u003enano\u003c/code\u003e command.\u003c/p\u003e\n\n\u003ch2\u003eGit\u003c/h2\u003e\n\n\u003cp\u003eYou've previously seen how to fork and clone git repositories from GitHub. Git is a version control system that is used by developers all over the world for collaboration. Git is the technology underlying the GitHub platform, a cloud service provider, of which there are many. \u003c/p\u003e\n\n\u003ch3\u003eGit commands\u003c/h3\u003e\n\n\u003cp\u003eIn this section, you'll take a look at several Git commands including \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, \u003ccode\u003egit push\u003c/code\u003e, \u003ccode\u003egit merge\u003c/code\u003e, \u003ccode\u003egit branch\u003c/code\u003e, \u003ccode\u003egit checkout\u003c/code\u003e, \u003ccode\u003egit status\u003c/code\u003e, \u003ccode\u003egit stash\u003c/code\u003e, and \u003ccode\u003egit log\u003c/code\u003e. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll take a look at Git and Bash! Get ready to have the preliminary tools that almost all developers consider to be their foundation!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-git-bash-collab-intro\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-git-bash-collab-intro\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-bash-collab-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"my-little-rainbow","title":"My Little Rainbow","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-my-little-rainbow-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-my-little-rainbow-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you're going to make a rainbow with HTML \u003ccode\u003e\u0026lt;div\u0026gt;\u003c/code\u003e elements. Through this process, you'll learn about HTML elements, CSS styling, CSS selectors, how color works in CSS and importing stylesheets.  That might sound like a lot but it isn't.\u003c/p\u003e\n\n\u003cp\u003eBefore you start, here's some basic info about HTML and CSS. Skip to \u003ca href=\"#making-a-rainbow\"\u003eMaking a Rainbow\u003c/a\u003e if you feel comfortable enough with HTML and CSS.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the purpose of IDs in HTML\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eAdd ID elements to HTML tags\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eSelect and style HTML elements with CSS\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eHTML Basics\u003c/h2\u003e\n\n\u003cp\u003eHyper Text Markup Language, or HTML, is a way to demarcate a document into different parts. Each part is \u003cem\u003emarked\u003c/em\u003e by elements (using tags). Each element has its own special connotation that the browser uses to \u003cem\u003erender\u003c/em\u003e the HTML document. Use this \u003ca href=\"https://web.stanford.edu/group/csp/cs21/htmlcheatsheet.pdf\"\u003echeat sheet\u003c/a\u003e on HTML elements for guidance.\u003c/p\u003e\n\n\u003ch2\u003eElements\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eAll begin with \u003ccode\u003e\u0026lt;\u003c/code\u003e and end with \u003ccode\u003e\u0026gt;\u003c/code\u003e, e.g., \u003ccode\u003e\u0026lt;div\u0026gt;\u003c/code\u003e (this last part is a tag).\u003c/li\u003e\n\u003cli\u003eMost have an opening tag such as \u003ccode\u003e\u0026lt;div\u0026gt;\u003c/code\u003e and a closing tag \u003ccode\u003e\u0026lt;/div\u0026gt;\u003c/code\u003e.\n\n\u003cul\u003e\n\u003cli\u003eThe \u003ccode\u003e/\u003c/code\u003e indicates to the browser that that tag is a closing tag.\u003c/li\u003e\n\u003cli\u003eThe element is everything between the tags and the tags themselves.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSome tags are self-closing like the line break element \u003ccode\u003e\u0026lt;br\u0026gt;\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eElements can have IDs and classes to aid the browser in finding specific tags.\n\n\u003cul\u003e\n\u003cli\u003eMust begin with a letter A-Z or a-z.\u003c/li\u003e\n\u003cli\u003eCan be followed by: letters (\u003ccode\u003eA-Za-z\u003c/code\u003e), digits (\u003ccode\u003e0-9\u003c/code\u003e), hyphens (\u003ccode\u003e-\u003c/code\u003e), and underscores (\u003ccode\u003e_\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003eIDs \u003cstrong\u003ecan\u003c/strong\u003e only be used once per page, e.g.: \u003ccode\u003e\u0026lt;div id=\"this-special-div\"\u0026gt;\u0026lt;/div\u0026gt;\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eClasses can be used as many times as you want, e.g.: \u003ccode\u003e\u0026lt;div class=\"a-less-special-div\"\u0026gt;\u0026lt;/div\u0026gt;\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eElements nested inside other elements are called children.\n\n\u003cul\u003e\n\u003cli\u003eChildren inherit attributes from their parents.\u003c/li\u003e\n\u003cli\u003eDon't nest everything. \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eElements next to one another are siblings.\n\n\u003cul\u003e\n\u003cli\u003eSiblings do not inherit from one another but are important for selecting in CSS.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHere is an example of element relations:\n\u003ccode\u003ehtml\n\u0026lt;div\u0026gt;  \u0026lt;!-- the parent element --\u0026gt;\n  \u0026lt;p\u0026gt;\u0026lt;/p\u0026gt;  \u0026lt;!-- the first sibling element/the first child--\u0026gt;\n  \u0026lt;p\u0026gt;\u0026lt;/p\u0026gt;  \u0026lt;!-- the second sibling element/the second child --\u0026gt;\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2\u003eCSS Basics\u003c/h2\u003e\n\n\u003cp\u003eCascading Style Sheets, or CSS, is a language created to style an HTML document by telling the browser how specific elements should look. CSS does this by selecting elements based on their tag, ids, classes, or all of the above. The reason for CSS is the separation of concerns. You want HTML only to be concerned with how it displays and demarcates information, and we let CSS worry about how to make that information look pretty.\u003c/p\u003e\n\n\u003ch2\u003eCSS selectors\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eThey select elements to assign them styles.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e*\u003c/code\u003e (wildcard) selects every element.\u003c/li\u003e\n\u003cli\u003eAn element, such as \u003ccode\u003ediv\u003c/code\u003e, will select all elements of that type.\u003c/li\u003e\n\u003cli\u003eThey select an id like \u003ccode\u003e#some-id\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eClasses are selected like this \u003ccode\u003e.some-class\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eTo select all children elements of a parent do something like this \u003ccode\u003ediv p\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eTo select multiple different elements separate them by commas like this \u003ccode\u003ediv, p, a\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHere's an example of CSS styling:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"CSS\"\u003e* {\n  color: red;  /* color in CSS refers to font color */\n}  /* all elements will have red font */\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eMaking a Rainbow\u003c/h2\u003e\n\n\u003cp\u003eFirst off make sure you have \u003ca href=\"https://github.com/learn-co-curriculum/dsc-my-little-rainbow-lab\"\u003eforked\u003c/a\u003e and cloned this repo. Next, create a new branch, and switch to it; it's \u003ccode\u003egit checkout -b your_solution_branch_name\u003c/code\u003e in case you forgot.\u003c/p\u003e\n\n\u003cp\u003eIn that directory, you'll see three files. \u003ccode\u003eindex.html\u003c/code\u003e, \u003ccode\u003emain.css\u003c/code\u003e, and this \u003ccode\u003eREADME.md\u003c/code\u003e.  Open them in your text editor via your command line.  Also, open \u003ccode\u003eindex.html\u003c/code\u003e in your browser; if everything is working correctly you should see a white page. Good job!\u003c/p\u003e\n\n\u003ch2\u003eMaking the Divs Visible\u003c/h2\u003e\n\n\u003cp\u003eIf you use the inspector or look at the file in your text editor, you'll see that the basic file structure is there.  So why can't we see anything?!?!?  That's because the divs have no styling on them right now.  And that's because we never told the browser to include a CSS file that would apply any styles. \u003c/p\u003e\n\n\u003cp\u003eLet's fix this by adding the stylesheet to the \u003ccode\u003ehead\u003c/code\u003e like so,\n\u003ccode\u003eHTML\n\u0026lt;head\u0026gt;\n... \n  \u0026lt;link rel=\"stylesheet\" type=\"text/css\" href=\"main.css\"\u0026gt;\n...\n\u0026lt;/head\u0026gt;\n\u003c/code\u003e\nThe link is a self-closing tag that will create a relative path with the \u003ccode\u003ehref\u003c/code\u003e attribute.  A relative path means the browser knows that the \u003ccode\u003emain.css\u003c/code\u003e file is in the same place as \u003ccode\u003eindex.html\u003c/code\u003e.  The \u003ccode\u003ehead\u003c/code\u003e is a hidden part of the page that tells the browser where to find any other files it needs to display the page correctly, the \u003ccode\u003etitle\u003c/code\u003e for the tab, and any other possible important information.\u003c/p\u003e\n\n\u003cp\u003eNow if you refresh the \u003ccode\u003eindex.html\u003c/code\u003e page in your browser you should see an ugly black rainbow.  Gerd Jerb!\u003c/p\u003e\n\n\u003cp\u003eOkay so you've got the basic outline because in the \u003ccode\u003emain.css\u003c/code\u003e all the \u003ccode\u003ediv\u003c/code\u003e elements were selected and styled, but the colors are wrong because the default border color is black.  To fix this we need to learn a little bit more about colors, because while we could just set \u003ccode\u003ecolor: red;\u003c/code\u003e we should learn how to make colors without words.  We should just use numbers and not just any set of numbers, but numbers with base pair of 16 rather than base pair of 10 like we use every day.  These numbers are called hexadecimal numbers and we can use them to make colors.\u003c/p\u003e\n\n\u003ch2\u003eSome Stuff You Should Know About Hex Colors (and Web Colors in General).\u003c/h2\u003e\n\n\u003cp\u003eHex colors begin with \u003ccode\u003e#\u003c/code\u003e and are followed by, generally, 6 numbers, but some of these numbers are actually letters.  The lowest single-digit number in hex is 0 and the highest single-digit number is f.  This table might help to visualize what we mean by this.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eDecimal Numbers:      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16\nHexadecimal Numbers:  0, 1, 2, 3, 4, 5, 6, 7, 8, 9,  a,  b,  c,  d,  e,  f, 10\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eHex colors work by creating Red, Green, Blue (RGB) values.  Traditional RGB colors are on a scale of 0 to 255 for each of the three colors in the spectrum.  Hex colors are considered true colors since it can represent ~16 million colors, but your eye can only see 10 million of those.  So \u003ccode\u003e#000000\u003c/code\u003e translates to black since 0 reds, 0 green, 0 blues represents the absence of all colors, and \u003ccode\u003e#ffffff\u003c/code\u003e makes white since 255 reds, 255 greens, and 255 blues is the maximum of each of the colors.  \u003c/p\u003e\n\n\u003cp\u003eHex colors can be shortened to just three numbers when each RGB value is the same for each digit. So \u003ccode\u003e#11dd99\u003c/code\u003e can be written as \u003ccode\u003e#1d9\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eColoring the Rainbow\u003c/h2\u003e\n\n\u003cp\u003eTo get roygbiv onto our rainbow we'll need seven hex colors.\nRed: \u003ccode\u003e#f00\u003c/code\u003e; Orange: \u003ccode\u003e#ffa500\u003c/code\u003e; Yellow: \u003ccode\u003e#ff0\u003c/code\u003e; Green: \u003ccode\u003e#00bc3f\u003c/code\u003e; Blue: \u003ccode\u003e#06f\u003c/code\u003e; Indigo: \u003ccode\u003e#8a2be2\u003c/code\u003e; Violet: \u003ccode\u003e#d300c9\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eWith those colors, all we have to do next is select each div individually.  That is a perfect use for ids since they're meant to style one specific element only.  So that means we'll need to add an id for each div, so a logical name for each div would be the color that they have to be.  It could be something random, but good names make for semantic code. So let's give the outermost div the id red. We'll do this like so.\n\u003ccode\u003ehtml\n\u0026lt;div id=\"red\"\u0026gt;\n  ...\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd to give that id some CSS attributes we'll go into \u003ccode\u003emain.css\u003c/code\u003e, select the id, and mark its color as red like this.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e#red { /* this selects any elements with the red id */\n  border-top-color: #f00;\n}\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eSo to make sure the rainbow isn't so monochromatic you now need to repeat the above steps with the final six colors of the rainbow, and when you do you should have something like \u003ca href=\"http://i0.kym-cdn.com/photos/images/original/000/118/087/2468904593_6a7c692ab6.jpg\"\u003ethis\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWell done! In this lab, you independently modified HTML and CSS files in order to update a webpage. Specifically, you got some experience understanding and working with HTML IDs. You also used CSS to style HTML elements.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-my-little-rainbow-lab\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-my-little-rainbow-lab\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-my-little-rainbow-lab/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"python-libraries-numpy-and-pandas-recap","title":"Python Libraries: Numpy and Pandas - Recap","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-numpy-and-pandas-section-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-numpy-and-pandas-section-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eThis short lesson summarizes the topics we covered in this section and why they'll be important to you as a Data Scientist.\u003c/p\u003e\n\u003ch2\u003eKey Takeaways\u003c/h2\u003e\n\u003cp\u003eIn this section, we spent time getting comfortable with Pandas and Matplotlib and getting some more practice with exploratory data analysis. Some of the key takeaways:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFor non-trivial datasets you'll usually want to store your data in Pandas data structures rather than native Python lists and dictionaries\u003c/li\u003e\n\u003cli\u003ePandas has a range of great features for easily importing data from anything from a csv, an Excel file, json, or a Python dictionary\u003c/li\u003e\n\u003cli\u003ePandas Series and DataFrames have a bunch of powerful methods for munging data\u003c/li\u003e\n\u003cli\u003ePandas also has a range of methods for applying descriptive statistics to Series and DataFrames\u003c/li\u003e\n\u003cli\u003eFinally, by wrapping Matplotlib, Pandas also provides some very convenient plotting capabilities for quickly visualizing data\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWe also got some experience working with the Ames Housing dataset, and set up accounts on Kaggle - a really useful resource for practicing Data Scientists.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-numpy-and-pandas-section-recap\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-numpy-and-pandas-section-recap\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-numpy-and-pandas-section-recap/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\n\u003c/footer\u003e","frontPage":false},{"exportId":"the-bash-shell","title":"The Bash Shell","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-bash-shell\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-bash-shell/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWhen conducting Data Science (or programming in general), it’s helpful to get oriented with the command line, or bash shell. On mac computers, this is the terminal application. You've actually already seen some of this when working through how to download lessons from Learn and GitHub onto your local computer! The command line serves as a low-level interpreter through which you, the user, can send commands directly to the computer. As a computer user, you previously have probably sent commands to the computer through a graphical user interface (GUI) such as a web browser, text editor, photo editor, or any other of the myriad of computer programs now in existence. While the command line is initially daunting with its cryptic looking text, we will quickly see some of its advantages.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eNavigate between directories using the Bash shell\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eShell\u003c/h2\u003e\n\n\u003cp\u003eTo start, open up your shell program. For mac, this is the terminal, and for Windows we recommend git bash. Note that the \"command prompt\" on Windows may look similar but it is actually another language.\u003c/p\u003e\n\n\u003ch2\u003eMac\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-bash-shell/master/images/mac_terminal.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eWindows\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-bash-shell/master/images/git_bash.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eWorkflow Hints\u003c/h2\u003e\n\n\u003cp\u003eWhen going back and forth between this lesson and your shell, it is useful to either use split screen or to know the shortcuts to switch between applications on your computer. \u003c/p\u003e\n\n\u003cp\u003eShortcuts to change programs/applications:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eMac: (cmd+tab)\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eWindows: (alt+tab)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003epwd\u003c/h2\u003e\n\n\u003cp\u003eRemember, \u003cstrong\u003epwd\u003c/strong\u003e stands for \u003cstrong\u003eprint working directory\u003c/strong\u003e. This is essential to determine where you are within the file structure.  \u003c/p\u003e\n\n\u003ch2\u003ecd\u003c/h2\u003e\n\n\u003cp\u003eFrom there, remember that \u003cstrong\u003ecd\u003c/strong\u003e stands for \u003cstrong\u003echange directory\u003c/strong\u003e. You can navigate to the home directory with \u003ccode\u003ecd\u003c/code\u003e alone, or go up one level with \u003ccode\u003ecd ..\u003c/code\u003e. You can also use the \u003ccode\u003e~\u003c/code\u003e symbol to refer to your home directory. For example, \u003ccode\u003ecd ~/Documents\u003c/code\u003e will take you to the Documents folder in your home directory no matter where you are. \u003c/p\u003e\n\n\u003ch2\u003els\u003c/h2\u003e\n\n\u003cp\u003eYou can use the \u003cstrong\u003els\u003c/strong\u003e command, which stands for \u003cstrong\u003elist files\u003c/strong\u003e to print all the files in the current working directory. \u003c/p\u003e\n\n\u003ch2\u003eTab completion\u003c/h2\u003e\n\n\u003cp\u003eAnother useful feature when working on the command line is tab completion. This also works in many other programming environments such as Jupyter notebooks.\u003c/p\u003e\n\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://www.ks.uiuc.edu/Training/Tutorials/Reference/unixprimer.html\"\u003eMore Basic Shell Commands\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://linux.die.net/man/1/bash\"\u003eLinux Bash Man Page\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://tiswww.case.edu/php/chet/bash/bashref.html\"\u003eDetailed Bash\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we reviewed some of the basic bash commands in order to navigate through files and folders on your computer. From here, we're ready to get started with Git, an important version control system used by many programmers, developers, and Data Scientists.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-bash-shell\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-bash-shell\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-bash-shell/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"git-stash-lab","title":"Git Stash - Lab","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-stash-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-stash-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou've started to see some of the awesome power of git as a tool for version control and collaboration. Sometimes, workflows aren't quite as linear or straightforward as those examples we've discussed thus far. For example, if both the local and remote versions of a repository have been updated at the same time, you may encounter merge conflicts! Essentially, Git is unsure of which changes to incorporate if both versions of the repository have changed the same line of the same file. In these cases, \u003ccode\u003egit stash\u003c/code\u003e can be a valuable tool: it allows you to \u003cem\u003estash\u003c/em\u003e away your changes for later use!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse \u003ccode\u003egit stash\u003c/code\u003e to store changes to files\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eIdentify and fix merge conflicts when merging branches \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eGetting started\u003c/h2\u003e\n\n\u003cp\u003eSince we're doing another Git investigation, let's start by working from our previously created \u003ccode\u003egit\u003c/code\u003e repository from \u003cem\u003eGit Merge - Lab\u003c/em\u003e. \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCheck \u003ccode\u003egit status\u003c/code\u003e \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHopefully, you should see the usual:  \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eOn branch master\nnothing to commit, working tree clean\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf not, add and commit your changes and recheck \u003ccode\u003egit status\u003c/code\u003e. \u003c/p\u003e\n\n\u003ch2\u003eMake some changes\u003c/h2\u003e\n\n\u003cp\u003eNow that we have a clean working directory, let's muck things up! (Sorry if you already had untracked changes and cleaned them up; it's good practice at the very least!)\u003c/p\u003e\n\n\u003cp\u003eOnce again, let's modify \u003ccode\u003enumbers.py\u003c/code\u003e. Open up the file from the command line with \u003ccode\u003enano numbers.py\u003c/code\u003e and modify the script so that it prints the fourth power of numbers. The script should look like this:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003efor i in range(10):\n    print(i**4)    \n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cul\u003e\n\u003cli\u003eCheck \u003ccode\u003egit status\u003c/code\u003e again \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis time, you should see something like:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eOn branch master\nChanges not staged for commit:\n  (use \"git add \u0026lt;file\u0026gt;...\" to update what will be committed)\n  (use \"git checkout -- \u0026lt;file\u0026gt;...\" to discard changes in working directory)\n\n    modified:   numbers.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eTry out \u003ccode\u003egit stash\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003eNow for our new wizardry! Execute the command \u003ccode\u003egit stash\u003c/code\u003e. Afterward, do another \u003ccode\u003egit status\u003c/code\u003e to see what's going on.\u003c/p\u003e\n\n\u003ch3\u003eFurther exploration\u003c/h3\u003e\n\n\u003cp\u003eYou should see that we're back to a clean working tree. You can further see this by using the bash command \u003ccode\u003ecat\u003c/code\u003e which will print the contents of a file to the command line, so in this case, try out \u003ccode\u003ecat numbers.py\u003c/code\u003e. You should see that our file has reverted back to the previous version where we were actually cubing our numbers.\u003c/p\u003e\n\n\u003cp\u003eSo what happened to our changes? Where did they go? We stashed them. To see stashes, you can use the command \u003ccode\u003egit stash list\u003c/code\u003e. Try it out now. \u003c/p\u003e\n\n\u003cp\u003eIf you want a few more details about the stash, you can use \u003ccode\u003egit stash show\u003c/code\u003e. Again, give it a try.\u003c/p\u003e\n\n\u003cp\u003eFinally, if you want to re-implement your stashed changes you can use \u003ccode\u003egit stash apply\u003c/code\u003e. Let's go ahead and reapply our changes (raising numbers to the fourth power rather than the third). \u003c/p\u003e\n\n\u003cp\u003eOnce you do that, you'll see a message as if we did \u003ccode\u003egit status\u003c/code\u003e, and you'll see that we once again have changes that have not been added or committed. What's more, while we've applied our stash, the stash still exists (you can see this once again with \u003ccode\u003egit stash list\u003c/code\u003e).\u003c/p\u003e\n\n\u003ch2\u003eSee all of the commit history\u003c/h2\u003e\n\n\u003cp\u003eAs a friendly reminder, you can see all of the commit history to date with \u003ccode\u003egit log --graph\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eCreate a new branch\u003c/h2\u003e\n\n\u003cp\u003eNext, we're going to briefly investigate some merge conflicts. These occur when you have two versions of the same file which both have the same line modified. This typically occurs when merging branches as we cleanly did in the last lab. Here, we'll cause the same behavior to occur by modifying our new branch and then attempting to apply our stashed changes.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a new branch called \u003ccode\u003ebeta\u003c/code\u003e \u003c/li\u003e\n\u003cli\u003eOn your new branch, modify \u003ccode\u003enumbers.py\u003c/code\u003e to raise numbers to the 5th power \u003c/li\u003e\n\u003cli\u003eOnce you modify the script, take a look at the state of affairs with \u003ccode\u003egit status\u003c/code\u003e. Then add and commit your changes with an appropriate description \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eMerge Conflicts\u003c/h2\u003e\n\n\u003cp\u003eNow for the fun part. We're going to create a merge conflict. Execute \u003ccode\u003egit stash apply\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou should be presented with a message:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eAuto-merging numbers.py\nCONFLICT (content): Merge conflict in numbers.py\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWhat's more, if you open up \u003ccode\u003enumbers.py\u003c/code\u003e with \u003ccode\u003enano numbers.py\u003c/code\u003e, you'll see some bizarre changes:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-stash-lab/master/images/stash_merge_conflict.png\" width=\"750\"\u003e\u003c/p\u003e\n\n\u003cp\u003eSo what do all of these symbols mean?\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; Updated Upstream\u003c/code\u003e - the beginning of the original branch (beta)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e=======\u003c/code\u003e - the end of the original branch/the beginning of the branch being merged in (our stashed changes)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; Stashed changes\u003c/code\u003e - the end of our stashed changes\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis is because our new branch and the stashed changes modified the same line of the same file. Specifically, both modified line 2 of the \u003ccode\u003enumbers.py\u003c/code\u003e file. As such, Git is unsure of which version of line 2 we wish to incorporate. It has highlighted this for us, and it’s now our job to manually modify the file to resolve these conflicts, keeping the version we are interested in.\u003c/p\u003e\n\n\u003cp\u003eAs a further note, this is why development would generally be separated by files, or at the very least, sections of files; we can avoid merge conflicts and continue to collaborate together working seamlessly on a project. \u003c/p\u003e\n\n\u003cp\u003eYour \u003ccode\u003enumbers.py\u003c/code\u003e file should now be back to numbers raised the 4th degree as such:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003efor i in range(10):\n    print(i**4)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e(To do this, we simply manually opened up the file with nano and resolved the merge conflicts, including removing the notes left for us by Git.)\u003c/p\u003e\n\n\u003cp\u003eChecking \u003ccode\u003egit status\u003c/code\u003e, we now see that we have once again modified \u003ccode\u003enumbers.py\u003c/code\u003e. As usual, we can now add and commit those changes to our version history. \u003c/p\u003e\n\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.git-scm.com/docs/git-stash\"\u003eGit Stash Documentation\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we took a look at \u003ccode\u003egit stash\u003c/code\u003e as well as merge conflicts, and how to resolve them. \u003ccode\u003egit stash\u003c/code\u003e is often useful when you need to quickly store away your changes and don't wish to create a new branch; you intend to quickly reintroduce these changes but need to put them to the side for a moment. This can be helpful if the remote repository has been updated and you first need to fetch and pull it, but have already also made some changes locally. In this and other cases, it's often easiest to first just stash the changes and then apply them subsequently. Similarly, we also saw that stashed changes can be applied to multiple branches. Overall, the more you use Git and its myriad of tools, the more options you'll have for organizing and synchronizing your development process.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-git-stash-lab\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-git-stash-lab\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-stash-lab/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"data-visualization-recap","title":"Data Visualization - Recap","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-visualizations-section-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-visualizations-section-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll review what you learned in this section. \u003c/p\u003e\n\n\u003ch2\u003eKey Takeaways\u003c/h2\u003e\n\n\u003cp\u003eWe began this section by getting some deeper practice with Python's most popular data visualization library, \u003cstrong\u003e\u003cem\u003eMatplotlib\u003c/em\u003e\u003c/strong\u003e! We got some practice with things like different kinds of plots, setting labels and axes, modifying line ticks, adding a legend, and even using color in our visualizations.  We also learned about how to place multiple plots together as a \u003cstrong\u003e\u003cem\u003esubplot\u003c/em\u003e\u003c/strong\u003e, and how we can write clean, efficient code when building these by making use of the \u003ccode\u003eenumerate\u003c/code\u003e keyword for our loops. \u003c/p\u003e\n\n\u003cp\u003eNext, we learned about the best and worst practices for data visualization. We learned about how to pack multiple kinds of information into a single plot, how to make effective use of color, and how to use \u003cstrong\u003e\u003cem\u003ePreattentive Attributes\u003c/em\u003e\u003c/strong\u003e to make important parts of our visualization stand out. We also learned about common mistakes and errors, so that we can avoid them in the future. \u003c/p\u003e\n\n\u003cp\u003eFinally, we got some practice with a second visualization library, \u003cstrong\u003e\u003cem\u003eSeaborn\u003c/em\u003e\u003c/strong\u003e. We learned about the relationship between Seaborn and Matplotlib, and saw some examples of when we may want to use Seaborn instead of Matplotlib. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you learned how to create meaningful visualizations.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-visualizations-section-recap\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-visualizations-section-recap\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-visualizations-section-recap/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"sql-database-data-types-2","title":"SQL Database Data Types","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-database-data-types\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-database-data-types/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll cover the importance of specifying data types, and the different types of data you can store in a SQLite database.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe how data types operate within databases and explain why they are necessary\u003c/li\u003e\n\u003cli\u003eCompare the 4 different types of data you can store in a SQLite database\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy Do Data Types Matter?\u003c/h2\u003e\n\n\u003cp\u003eYou've seen that when you create a table, you need to include a name for it as well as define at least one column. You define columns in a \u003ccode\u003eCREATE\u003c/code\u003e statement by including a name and a data type to let SQLite know the kind of data you will be storing there. The practice of explicitly declaring a type is known as \"typing.\" \u003c/p\u003e\n\n\u003cp\u003eWhy is it important that you use typing in our database? Simply put, typing allows us to exercise some level of control over our data. Typing not only informs our database of the kind of data you plan to store in a column but it also restricts it. For instance, look at the age column below in our cats table. What do you mean by age? What if you had this:\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003ename\u003c/th\u003e\n\u003cth\u003ebreed\u003c/th\u003e\n\u003cth\u003eage\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eMaru\u003c/td\u003e\n\u003ctd\u003eScottish Fold\u003c/td\u003e\n\u003ctd\u003e3\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eHannah\u003c/td\u003e\n\u003ctd\u003eTabby\u003c/td\u003e\n\u003ctd\u003etwo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eLil' Bub\u003c/td\u003e\n\u003ctd\u003eAmerican Shorthair\u003c/td\u003e\n\u003ctd\u003e5.5\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eDid you intend age to be represented as a whole-number, a word, or a decimal? If you were asked to add up the ages of all the cats you could simply convert the 'two' to 2 in your head, but your database can't do that. It doesn't have that ability because the logic involved in converting a word into a number would be dense and inefficient. What about different languages? What about different spellings? Capitalization, typos, or different hyphenation conventions? These are just some reasons this might start to get crazy. In other words, because databases are designed to store large amounts of data, they are very concerned with storing, accessing, and acting upon that data as efficiently and normally as possible.\u003c/p\u003e\n\n\u003cp\u003eTyping gives us the ability to perform all kinds of operations with predictable results. For instance, the ability to perform math operations like \u003ccode\u003eSUM\u003c/code\u003e - i.e. summing integers - doesn't just depend on everything being an integer of some sort but would also expect it. If you tried, for example,  to \u003ccode\u003eSUM\u003c/code\u003e all of the cats in the above table, SQLite would actually attempt to convert, or cast, their type to something it can \u003ccode\u003eSUM\u003c/code\u003e. It would try to convert anything it can to an \u003ccode\u003eINTEGER\u003c/code\u003e and ignore alpha characters. This can lead to real problems. Without typing, our data might get complicated and messy, and it would be difficult to ask the database questions about large sets of data.\u003c/p\u003e\n\n\u003cp\u003eSimply put, it's important to adhere strictly to only storing data that fits with the data type you have given to a particular column.\u003c/p\u003e\n\n\u003ch2\u003eData types\u003c/h2\u003e\n\n\u003cp\u003eDifferent database systems also have different data types available, which are important and useful to know whenever you are dealing with those systems. SQLite is a good starting point to learn about data types because it only has four basic categories of data types; they are:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"SQL\"\u003eTEXT\nINTEGER\nREAL\nBLOB\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eLet's explore each category in more detail.\u003c/p\u003e\n\n\u003ch3\u003eTEXT\u003c/h3\u003e\n\n\u003cp\u003eAny alphanumeric characters which you want to represent as plain text. The body of this paragraph is text. Your name is text. Your email address is a piece of text. Your height, weight, and age, however, are probably not.\u003c/p\u003e\n\n\u003ch3\u003eINTEGER\u003c/h3\u003e\n\n\u003cp\u003eAnything you want to represent as a whole number. If it's a number and contains no letter or special characters or decimal points then you should store it as an integer. If you use it to perform math or create a comparison between two different rows in our database, then you definitely want to store it as an integer. If it's just a number, it's generally not a bad idea to store it as an integer. You might never add two house address numbers together, but you might want to sort them numerically. For example in the preceding case, you might want to get the biggest number and not the longest piece of text.\u003c/p\u003e\n\n\u003ch3\u003eREAL\u003c/h3\u003e\n\n\u003cp\u003eAnything that's a plain old decimal like 1.3 or 2.25. SQLite will store decimals up to 15 characters long. You can store 1.2345678912345 or 1234.5678912345, but 1.23456789123456789 would only store 1.2345678912345. In other database systems this is called 'double precision.'\u003c/p\u003e\n\n\u003cp\u003eWith these three types in hand, you are going to be able to work our way through the next several topics, and this whole typing concept is going to quickly become second nature for you.\u003c/p\u003e\n\n\u003ch3\u003eBLOB\u003c/h3\u003e\n\n\u003cp\u003eYou may encounter the \u003ccode\u003eBLOB\u003c/code\u003e data type while you're Googling or doing any further reading on SQLite. For now, you will not use \u003ccode\u003eBLOB\u003c/code\u003e. It is generally used for holding binary data.\u003c/p\u003e\n\n\u003ch2\u003eBonus: Note on SQLite\u003c/h2\u003e\n\n\u003cp\u003eTo increase its compatibility with other database engines (E.G. mySQL or PostgreSQL), SQLite allows the programmer to use other common data types outside of the four mentioned above. This is why you are referring to \u003ccode\u003eTEXT INTEGER REAL BLOB\u003c/code\u003e as data type \"categories\". All other common data types are lumped into one of the four existing data types recognized by SQLite. \u003c/p\u003e\n\n\u003cp\u003eFor example, \u003ccode\u003eINT\u003c/code\u003e is a common data type used outside of SQLite. SQLite won't complain if you define a column as an \u003ccode\u003eINT\u003c/code\u003e data type. It will simply lump it into the \u003ccode\u003eINTEGER\u003c/code\u003e category and store it as such.\u003c/p\u003e\n\n\u003cp\u003eTo accommodate this, SQLite has a pretty complicated system of categorizing data types that involves \u003ccode\u003eStorage Classes\u003c/code\u003e, \u003ccode\u003eType Affinities\u003c/code\u003e, and \u003ccode\u003eDatatypes\u003c/code\u003e. For a deeper dive, check out the \n\u003ca href=\"http://www.sqlite.org/datatype3.html\"\u003eSQLite3 Documentation on Datatypes\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eGreat! Now that you've finished this lesson you know why it is important to specify data types, and you know about the different types of data you can store in a SQLite database.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-sql-database-data-types\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-sql-database-data-types\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-sql-database-data-types/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"control-flow-functions-and-statistics-recap","title":"Control Flow, Functions, and Statistics - Recap","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-section-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-section-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you continued to build your Python skills. As you continue your Data Science journey, programming will continue to be one of the most important components of your toolkit.\u003c/p\u003e\n\n\u003ch2\u003eKey Takeaways\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eFunctions and Methods\u003c/strong\u003e - Python has a range of functions and methods (methods are functions associated with an object) that can help us to perform a wide range of useful tasks quickly and efficiently.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eLoops\u003c/strong\u003e - Loops aren't only for collections. \u003ccode\u003ewhile\u003c/code\u003e loops allow us to iterate until a condition is met, and we can use nested loops for more complicated situations (but should be careful about doing so too often).\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eCustom Functions\u003c/strong\u003e - When you write a piece of code that you might want to use again, it often makes sense to save it in as a function, and you can add arguments to functions to allow them to be more flexible in the ways they're reused.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eMeasures of Centrality\u003c/strong\u003e - There are three common ways to measure the \"central tendency\" of a dataset - the mean, the median, and the mode. Each can be used to answer different questions and has strengths or weaknesses that depend on how the data is distributed.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eMeasures of Dispersion\u003c/strong\u003e - There are multiple measures of dispersion. The absolute deviation, variance, standard deviation, and interquartile range can all give us a sense of how closely or widely a dataset is distributed from its central value. Again, this is going to be useful later in the course.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eGreat job! In this section, we spent time deepening our Python skills and introduced some basic statistics that will be important as we work with various types of datasets later in the course.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-python-section-recap\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-python-section-recap\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-python-section-recap/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"git-practice","title":"Git Practice","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-practice\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-practice/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eNow that you've seen a little bit of the bash shell and cloned a Git repository from GitHub, its time to practice a full workflow cycle in a little more detail. In this lesson, we'll start by taking a look at how to create a new Git repository if you are not working from an existing one. From there, we'll further investigate how the concepts of \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, and \u003ccode\u003egit push\u003c/code\u003e work in practice.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a new git repository\u003c/li\u003e\n\u003cli\u003eCompare local and remote repositories\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, and \u003ccode\u003egit push\u003c/code\u003e to make changes to a repository\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eCreating a New Git Repository\u003c/h2\u003e\n\u003cp\u003eIn order to create a new Git repository, start by going to \u003ccode\u003ehttps://github.com/new\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e(Alternatively, you can click the New button under the repositories tab of you profile page)\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/repos_page_new_button.png\" width=\"550\"\u003e\u003c/p\u003e\n\u003cp\u003eEither way, you'll then end up at the \u003ccode\u003ehttps://github.com/new\u003c/code\u003e page:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/github_new.png\" width=\"550\"\u003e\u003c/p\u003e\n\u003cp\u003eHere, you have several fields to go through:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eNaming the repository\n\u003col\u003e\n\u003cli\u003eFor this example, make the repository name \u003ccode\u003egit_practice\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003eDescription\n\u003col\u003e\n\u003cli\u003eOptional as described; leave it blank for now\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003eThe public vs private\n\u003col\u003e\n\u003cli\u003eDo you want this code to be publicly visible to everyone on GitHub or do you wish to keep it private?\u003c/li\u003e\n\u003cli\u003ePublic is probably fine for this\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003eInitialize this repository with a README\n\u003col\u003e\n\u003cli\u003e\n\u003cstrong\u003eThis option is very important!\u003c/strong\u003e\n\u003col\u003e\n\u003cli\u003eIf you check this box then you will clone the online repository as we did before and work from there\u003c/li\u003e\n\u003cli\u003eIf you don't check this box, then you will start from your local computer and then attach that work to the online repository.\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eFor now, name the repository \u003ccode\u003egit_practice\u003c/code\u003e, select public and \u003cstrong\u003edo NOT check the readme box\u003c/strong\u003e. Then click create repository.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/git_practice_new.png\" width=\"550\"\u003e\u003c/p\u003e\n\u003cp\u003eYou'll see a page like this:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/git_practice_blank_repo.png\" width=\"550\"\u003e\u003c/p\u003e\n\u003cp\u003eThis says it all!\u003c/p\u003e\n\u003cp\u003eHere's an explanation of the steps we're going to follow:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eCreate a directory (GitHub doesn't tell you to do this, but we want to organize and contain what we're sending to the web)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eecho \"# git_practice\" \u0026gt;\u0026gt; README.md\u003c/code\u003e: \u003ccode\u003eecho\u003c/code\u003e is a bash command which will create a markdown file \u003ccode\u003eREADME.md\u003c/code\u003e with the text \u003ccode\u003e\"# git_practice\"\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003egit init\u003c/code\u003e: This turns the current directory into a Git repository\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003egit add README.md\u003c/code\u003e: Now that the current folder is a Git repository from \u003ccode\u003egit init\u003c/code\u003e, we can add files for Git to track\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003egit commit -m \"first commit\"\u003c/code\u003e: Once files have been added to Git, we commit them. The \u003ccode\u003e-m\u003c/code\u003e option is for leaving a comment which is required\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003egit remote add origin url_goes_here\u003c/code\u003e: By default, git does not have to be connected to an online platform like GitHub. You can use Git locally for version control too. There are also other online Git platforms like Bitbucket and GitLab. Here, you're adding a link to GitHub's online hosting so that you can also sync your work with the cloud. This is super handy for sharing your work with others, collaborating, or any of the other reasons why cloud services are used\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eAgain, now that you have an overview, let's have at it!\u003c/p\u003e\n\u003ch2\u003eCreate a new directory for your repo\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOpen up your command line (mac: terminal, windows: git bash)\u003c/li\u003e\n\u003cli\u003eNavigate to the appropriate directory such as /Documents/Flatiron/Module_2_Git_Bash (or however you plan to organize your course materials)\u003c/li\u003e\n\u003cli\u003eCreate a new folder for this lesson \u003ccode\u003emkdir git_practice\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eNavigate into your new folder\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003ecd git_practice\u003c/code\u003e\u003c/p\u003e\n\u003ch2\u003eInitialize this folder as a git repository\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003egit init\u003c/code\u003e\u003c/p\u003e\n\u003ch2\u003eCreate a README\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eecho \"# git_practice\" \u0026gt;\u0026gt; README.md\u003c/code\u003e as described works perfectly well\u003c/li\u003e\n\u003cli\u003eAlternatively, if you're feeling adventurous, you can try a text editor such as nano, vim, or emacs\n\u003cul\u003e\n\u003cli\u003eIf you're going the adventurous route, try \u003ccode\u003enano README.txt\u003c/code\u003e for now and then type \"# git_practice\" in the file. Press \"Ctrl+X\" to quit and press \"Y\" to confirm you wish to save your changes\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eGit Status\u003c/h2\u003e\n\u003cp\u003eWhile not required, let's get familiar with what's going on with \u003ccode\u003egit status\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003eGit Add\u003c/h2\u003e\n\u003cp\u003eAdd your file. You can use \u003ccode\u003egit add README.md\u003c/code\u003e or \u003ccode\u003egit add --all\u003c/code\u003e (if there were multiple files, you would add all of them).\u003c/p\u003e\n\u003ch2\u003eGit Status\u003c/h2\u003e\n\u003cp\u003eAgain, not required but helpful to get familiar with everything. Try it again and note the difference: \u003ccode\u003egit status\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003eGit Commit\u003c/h2\u003e\n\u003cp\u003eNow that we've added the files, we're ready to finalize them to our version history. Commit them with \u003ccode\u003egit commit -m \"your message here\"\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003eAdd a Remote Location\u003c/h2\u003e\n\u003cp\u003eAgain, remember that Git itself is a version control system that can be used anywhere. GitHub is an online hosting platform allowing us to take Git repositories to the cloud to share and collaborate. By adding a remote location, we are able to sync our work between online and offline and collaborate with others. The \u003ccode\u003eorigin\u003c/code\u003e is simply a default naming convention symbolizing that the online version will be the central source of truth for this repository.\u003c/p\u003e\n\u003cp\u003eWith that, we can set it up with\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit remote add origin the_url_for_the_repo\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eGenerally, it's easiest to simply copy and paste from the code provided by GitHub.\u003c/p\u003e\n\u003ch2\u003ePushing our changes\u003c/h2\u003e\n\u003cp\u003eWe've already added our \u003cstrong\u003eREADME.md\u003c/strong\u003e file to Git and commited the changes. While these changes are present and up to date (take a look at \u003ccode\u003egit status\u003c/code\u003e again), they are not reflected online yet as we haven't synced our updates with our online version. To do this, type \u003ccode\u003egit push origin master\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eIf you are wondering what \u003ccode\u003emaster\u003c/code\u003e is, it's the name of our branch. You can use branches in git to seperate versions of code from each other. A common example comes from web development for production environments. The \u003ccode\u003emaster\u003c/code\u003e branch usually contains the working code for the website or app in production, and then other branches can be created for developing updates and new features, while not breaking the current working version. \u003ccode\u003emaster\u003c/code\u003e is the default branch for all Git repositories, and we'll take a further look into branches in general in the upcoming lessons.\u003c/p\u003e\n\u003ch2\u003ePreviewing Changes\u003c/h2\u003e\n\u003cp\u003eNow that you've pushed your changes online, refresh the GitHub page. You should now see a little page like this:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/git_repo.png\" width=\"550\"\u003e\u003c/p\u003e\n\u003cp\u003eCongratulations! You just created your first Git repository!\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eIn this lesson, we continued to practice our bash skills with the command line and started practicing our version control skills with Git. We created our first Git repository from scratch, and practiced adding, commiting, and pushing those changes to GitHub.\u003c/p\u003e","frontPage":false},{"exportId":"welcome","title":"Welcome","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-welcome-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-welcome-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003cp\u003eWelcome to Flatiron School's Data Science Program! Over the next 800-1000 hours you will learn everything you need to know to get started as a professional Data Scientist. Before you get started we wanted to share an important thought. This is going to be the most rewarding learning experience you've ever had, we promise. Let's get started!\u003c/p\u003e\n\n\u003ch2\u003eLearning How To Learn\u003c/h2\u003e\n\n\u003cp\u003eThe most common misconception we get when people start this course is that we will teach you programming, math, modeling and visualization. Don't get us wrong, we are going to teach you those things, but that's actually not the most important set of skills you're going to learn.\u003c/p\u003e\n\n\u003cp\u003eOver your career as a professional data scientist you're going to end up programming in languages and using modeling techniques that haven't even been invented yet. So, the most important thing we can (and we will) teach you is \u003cstrong\u003ehow to learn\u003c/strong\u003e. While covering topics like Python, Statistics, and Regression, we'll work with you to build the skills required to read and understand error messages and to google for answers so once you get a job as a data scientist, when you have to learn a new language, library, or model, you'll know how to quickly get started. We'll also teach you your first set of tools so that you can contribute immediately using them as a professional data scientist.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-welcome-intro\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-welcome-intro\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-welcome-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"getting-started-with-data-science-recap","title":"Getting Started with Data Science - Recap","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-data-cleaning-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-data-cleaning-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you learned about the Data Science process as well as the fundamentals of Python. You started off with learning about the basic Python data types as well as variable assignment. After that, you worked with collections of these basic data types, learning about lists and dictionaries. Finally, you learned about data visualization and used \u003ccode\u003ematplotlib\u003c/code\u003e to create some bar charts, histograms, and scatter plots. \u003c/p\u003e\n\n\u003ch2\u003eKey Takeaways\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eThere is a lot to learn about Data Science, but most of the time you're predicting a continuous value (regression), predicting a category (classification), identifying unusual data (anomaly detection) or generating recommendations.\u003c/li\u003e\n\u003cli\u003eData Science is not just about selecting and tuning machine learning models. Much of the value comes from understanding the business needs and formulating the problem thoughtfully. And most of the effort is in the early stages of finding, cleaning, exploring, and simplifying the data so it's ready to be run against your models. \u003c/li\u003e\n\u003cli\u003eIt's important to use professional tools. Jupyter Notebook is a great environment for combining your notes and your code. Git allows you to keep track of your changes. GitHub allows to share them with your team. Conda virtual environments ensure that the libraries you use for one project won't break another project you were working on.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-pandas-data-cleaning-recap\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-pandas-data-cleaning-recap\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-pandas-data-cleaning-recap/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"running-jupyter-notebooks-locally","title":"Running Jupyter Notebooks Locally","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-running-jupyter-locally\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-running-jupyter-locally\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-running-jupyter-locally/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this lesson you will practice the workflow you will be using when you want to work \u003cem\u003elocally\u003c/em\u003e instead of in IllumiDesk on Canvas, and also get some hands-on practice with important tools that you will need to be familiar with as a professional Data Scientist: the command line, git, GitHub, and running Jupyter Notebooks locally.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse basic commands to navigate the command line\u003c/li\u003e\n\u003cli\u003eUse bash commands to create new files and folders\u003c/li\u003e\n\u003cli\u003eUse git clone to clone a repository\u003c/li\u003e\n\u003cli\u003eWork on your labs locally\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSetting the Stage\u003c/h2\u003e\n\u003cp\u003eRemember how \u003cstrong\u003eCode Lessons\u003c/strong\u003e and \u003cstrong\u003eLabs\u003c/strong\u003e on Canvas use Illumidesk (by clicking the grey button below) to open notebooks and start coding?\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-running-jupyter-locally/master/images/illumidesk_4.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cp\u003eWhen you're a professional Data Scientist, you won't have access to Illumidesk, but you'll need to get everything up and running to work on your local machine. Luckily, you've already set up a professional data science environment, and in this lesson you'll learn how to actually run your code on your local machine instead of through Illumidesk!\u003c/p\u003e\n\u003ch2\u003eThe Command Line\u003c/h2\u003e\n\u003cp\u003eIn order to be able to work locally, we first need to tell you a tiny bit about command line. On Mac computers, this is the terminal application. On Windows computers, we'll use \"Git Bash\". The command line serves as a low-level interpreter through which you, the user, can send commands directly to the computer. As a computer user, you previously have probably sent commands to the computer through a graphical user interface (GUI) such as a web browser, text editor, photo editor, or any other of the myriad of computer programs now in existence. While the command line is initially daunting with its cryptic looking text, we will quickly see some of the many advantages it can have.\u003c/p\u003e\n\u003cp\u003eOne of the many useful features of the command line will be using \u003cem\u003egit\u003c/em\u003e to clone (download) a local copy of the curriculum hosted on Canvas. This will allow you to work offline and to save changes as you work through exercises and start programming!\u003c/p\u003e\n\u003cp\u003eTo start, \u003cstrong\u003efor Mac users, open the terminal application\u003c/strong\u003e, \u003cstrong\u003efor Windows, open “Git Bash”\u003c/strong\u003e.\u003c/p\u003e\n\u003ch3\u003epwd\u003c/h3\u003e\n\u003cp\u003eThe first command to try out is \u003cstrong\u003epwd\u003c/strong\u003e which stands for \u003cstrong\u003eprint working directory\u003c/strong\u003e. This will tell you where you currently are in the computer's directory structure. Try it out.\u003c/p\u003e\n\u003ch3\u003ecd\u003c/h3\u003e\n\u003cp\u003eThe next essential command is \u003cstrong\u003ecd\u003c/strong\u003e which stands for \u003cstrong\u003echange directory\u003c/strong\u003e. This allows you to navigate to different folders on your computer's hard drive. Typing \u003ccode\u003ecd\u003c/code\u003e by itself (or \u003ccode\u003ecd ~\u003c/code\u003e) will automatically take you to your home directory. Typing \u003ccode\u003ecd\u003c/code\u003e and a folder name will take you to that folder. Typing \u003ccode\u003ecd ..\u003c/code\u003e will move you one folder up in the hierarchy. Play around and trying moving between folders for a minute or two.\u003c/p\u003e\n\u003ch3\u003eTab Completion\u003c/h3\u003e\n\u003cp\u003eAn extraordinarly useful feature when working with the command line is tab completion. This allows you to hit the tab button to autocomplete names once you have made a unique specification.\u003c/p\u003e\n\u003cp\u003eFor example, if you navigate to your root directory by running the command \u003ccode\u003ecd\u003c/code\u003e, if you're on a Mac, you will probably have 2 folders within your root directory named \"Downloads\" and \"Documents\" (these are standard folder names created by default in most systems, although you may have renamed them, or your system may be different). With these, or longer folder names, it can sometimes become cumbersome to type the full folder name. instead, you can start typing the command and folder name such as \u003ccode\u003ecd Dow\u003c/code\u003e and then press \u003cstrong\u003etab\u003c/strong\u003e to autocomplete. Like magic, the command line should complete the statement correctly to be \u003ccode\u003ecd Downloads\u003c/code\u003e. (Note: this will not work if you have another folder that begins with \"Dow\". Similarly, if you just typed \u003ccode\u003ecd D\u003c/code\u003e or \u003ccode\u003ecd Do\u003c/code\u003e followed by \u003cstrong\u003etab\u003c/strong\u003e, the command line will not autocomplete, as the selection is not unique, because \u003cstrong\u003eD\u003c/strong\u003e or \u003cstrong\u003eDo\u003c/strong\u003e could both refer to either \u003cstrong\u003eDocuments\u003c/strong\u003e or \u003cstrong\u003eDownloads\u003c/strong\u003e. Also note that these commands are case sensitive, and folder capitalization much be matched exactly.\u003c/p\u003e\n\u003ch3\u003els\u003c/h3\u003e\n\u003cp\u003eContinuing with navigating the computer's hard drive, it's useful to know how to \u003cstrong\u003elist files\u003c/strong\u003e. This is done with the \u003ccode\u003els\u003c/code\u003e command, short for list.\u003c/p\u003e\n\u003cp\u003eYou can also pass optional parameters to \u003ccode\u003els\u003c/code\u003e such as \u003ccode\u003els -a\u003c/code\u003e which lists \u003cstrong\u003eall files\u003c/strong\u003e (including hidden files), \u003ccode\u003els -l\u003c/code\u003e gives a \u003cstrong\u003elong listing\u003c/strong\u003e of files (including file size and last edit times). You can also pass multiple parameters simultaneously, such as \u003ccode\u003els -al\u003c/code\u003e to produce a detailed listing of all files.\u003c/p\u003e\n\u003ch3\u003e* the wildcard parameter\u003c/h3\u003e\n\u003cp\u003eAlso very useful is the wildcard parameter. For example, if you wanted to list all files in the current working directory that begin with a, you could type \u003ccode\u003els a*\u003c/code\u003e. Here, the asterix (\u003ccode\u003e*\u003c/code\u003e) denotes anything is allowed following the a. Similarly, to list all pdf files in the current working directory you can use \u003ccode\u003els *.pdf\u003c/code\u003e, or to list all text files, you can use \u003ccode\u003els *.txt\u003c/code\u003e.\u003c/p\u003e\n\u003ch3\u003emkdir\u003c/h3\u003e\n\u003cp\u003eFinally, as you continue to navigate the file directory from the command line it can be useful to be able to create new folders. To do this, use the \u003ccode\u003emkdir\u003c/code\u003e command, which stands for \u003cstrong\u003emake directory\u003c/strong\u003e. Try it out with \u003ccode\u003emkdir NewFolderName\u003c/code\u003e. Afterward, use the \u003ccode\u003els\u003c/code\u003e command to see that there is indeed a new folder, and if you wish, move into the new folder using the \u003ccode\u003ecd\u003c/code\u003e command.\u003c/p\u003e\n\u003ch2\u003eCloning GitHub repositories and Canvas lessons\u003c/h2\u003e\n\u003cp\u003eYou have already read a little bit about GitHub and how it's used to share code. Since you can now navigate the file directory using the command line, you're ready to download some course materials from GitHub to your local environment. In practice, you will do the following:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eFork\u003c/strong\u003e the course material repository: Forking is the process of making a personal copy of the Canvas course materials on your own GitHub account.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eClone\u003c/strong\u003e the forked course material repository: Cloning is the process of downloading a repository from Github onto your personal computer.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eDon't worry if this process seems a little confusing. It will be explained in more detail soon. For now, you can just follow the steps below:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a folder on your computer for your course materials and navigate into it\u003cbr\u003e\n\u003cul\u003e\n\u003cli\u003eYou may also want to create a subfolder titled \"phase_1\" and navigate into that\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eReturn to your web browser and navigate to the lesson you want to download\u003c/li\u003e\n\u003cli\u003eClick the GitHub icon\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-running-jupyter-locally/master/images/illumidesk_3.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cp\u003eYou'll be redirected to the associated GitHub repository.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eClick the fork button\u003c/strong\u003e, as shown, in order to create a copy to your personal account which you can edit and update\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-running-jupyter-locally/master/images/before-fork.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cp\u003eOne of two things will happen. Either it'll pop up a modal (window) and if you scroll to the bottom of it you'll see it says that you already have a fork. If that's the case, just click on the link to view your existing fork.\u003c/p\u003e\n\u003cp\u003eIf you don't already have a fork, you'll be redirected to your new personal copy of the repository:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-running-jupyter-locally/master/images/after-fork.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003ch2\u003eFinally\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ePress \u003cstrong\u003ecmd + L\u003c/strong\u003e to highlight the url bar and \u003cstrong\u003ecmd + c\u003c/strong\u003e to copy the url (whenever we use \u003cstrong\u003ecmd\u003c/strong\u003e to refer to holding down the command key on a Mac computer, on a Windows computer, hold down the control key instead)\u003c/li\u003e\n\u003cli\u003eReturn to the terminal (you should be in your course materials folder or your \"phase_1\" subfolder)\u003c/li\u003e\n\u003cli\u003eType: \u003ccode\u003egit clone\u003c/code\u003e and paste your repo url (\u003cstrong\u003ecmd + v\u003c/strong\u003e for Mac; for Windows, in git bash, \u003cstrong\u003eshift + insert\u003c/strong\u003e)\u003c/li\u003e\n\u003cli\u003eEt Voila! The repository and all of its contents will be downloaded locally to your computer!\u003c/li\u003e\n\u003cli\u003eRemember that you need to \u003ccode\u003ecd\u003c/code\u003e into the new repository once you've downloaded it\u003c/li\u003e\n\u003cli\u003eThe next step is to open your Jupyter Notebook locally (\u003cstrong\u003enot on Canvas/Illumidesk\u003c/strong\u003e) using the command line\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eStarting the Jupyter Notebook\u003c/h2\u003e\n\u003cp\u003eMake sure to activate your conda virtual environment in your terminal first by typing \u003ccode\u003esource activate learn-env\u003c/code\u003e. Then type \u003ccode\u003ejupyter notebook\u003c/code\u003e in your command line and press enter. Next, your default browser will open a new window or tab and you will see the list of files that are in your current directory (\u003cem\u003eremember you want to be in the GitHub repo directory that we just downloaded\u003c/em\u003e).\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e To stop a Jupyter Notebook, go to your command line where the notebook is running and press the \u003cstrong\u003econtrol\u003c/strong\u003e key + the letter \u003cstrong\u003ec\u003c/strong\u003e (\u003ccode\u003ectrl\u003c/code\u003e+\u003ccode\u003ec\u003c/code\u003e).\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThen click on the \u003ccode\u003eindex.ipynb\u003c/code\u003e file which is the Jupyter Notebook we will be using in this and future labs and lessons. This will open a new tab where you will see the same content you saw in IllumiDesk on Canvas!\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eIn this lesson, you learned about the command line, cloning GitHub repositorites, and how to work with Jupyter notebooks locally. In the next lab, you'll put what you learned into practice!\u003c/p\u003e","frontPage":false},{"exportId":"the-data-science-process","title":"The Data Science Process","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-the-data-science-process\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-the-data-science-process/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch1\u003eThe Data Science Process\u003c/h1\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eJust as it's important to understand the kinds of problems that can be solved by data science, it's also important to have a sense of the process used to conduct data science. In this lesson, we'll outline the lifecycle of a typical data science project - from business understanding through data visualization.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the full data science process\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eThe Data Science Process\u003c/h2\u003e\n\n\u003cp\u003eThere is much more to data science than just selecting, applying and tuning Machine Learning algorithms. A data science project will often include the following stages:\n\u003cbr\u003e\n\u003cbr\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_process.png\" width=\"950\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cbr\u003e\n\u003cbr\u003e\nIn this section, you will go through each of these stages and see what is involved.\u003c/p\u003e\n\n\u003ch2\u003eBusiness Understanding / Domain Knowledge\u003c/h2\u003e\n\n\u003cp\u003eBefore trying to solve a data related problem, it is important that a Data Scientist/Analyst has a clear understanding of the problem domain and the kinds of question(s) that need to be answered by their analysis. Some of the questions that the Data Scientist might be asked include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eHow much or how many? E.g. Identifying the number of new customers likely to join your company in the next quarter. (Regression analysis)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eWhich category? E.g. Assigning a document to a given category for a document management system. (Classification analysis)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eWhich group? E.g. Creating a number of groups (segments) of your customers based on their monetary value. (Clustering)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIs this weird? E.g. Detecting suspicious activities of customers by a credit card company to identify potential fraud. (Anomaly detection)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eWhich items would a user prefer? E.g. Recommending new products (such as movies, books or music) to existing customers (Recommendation systems)\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cbr\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_domain.png\" width=\"450\"\u003e\n\u003cbr\u003e\u003c/p\u003e\n\n\u003ch2\u003eData Mining\u003c/h2\u003e\n\n\u003cp\u003eAfter identifying the objective for your analysis and agreeing on analytical question(s) that need to be answered, the next step is to identify and gather the required data. \u003c/p\u003e\n\n\u003cp\u003eData mining is a process of identifying and collecting data of interest from different sources - databases, text files, APIs, the Internet, and even printed documents. Some of the questions that you may ask yourself at this stage are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWhat data do I need in order to answer my analytical question?\u003c/li\u003e\n\u003cli\u003eWhere can I find this data?\u003c/li\u003e\n\u003cli\u003eHow can I obtain the data from the data source?\u003c/li\u003e\n\u003cli\u003eHow do I sample from this data?\u003c/li\u003e\n\u003cli\u003eAre there any privacy/legal issues that I must consider prior to using this data?\n\u003cbr\u003e\n\u003cbr\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_datamining.png\" width=\"650\"\u003e\n\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eData Cleaning\u003c/h2\u003e\n\n\u003cp\u003eData cleaning is usually the most time-consuming stage of the Data Science process. This stage may take up to 50-80% of a Data Scientist's time as there are a vast number of possible problems that make the data \"dirty\" and unsuitable for analysis. Some of the problems you may see in data are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eInconsistencies in data\u003c/li\u003e\n\u003cli\u003eMisspelled text data\u003c/li\u003e\n\u003cli\u003eOutliers\u003c/li\u003e\n\u003cli\u003eImbalanced data\u003c/li\u003e\n\u003cli\u003eInvalid/outdated data\u003c/li\u003e\n\u003cli\u003eMissing data\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis stage requires the development of a careful strategy on how to deal with these issues. Such a strategy may vary substantially between different analyses depending on the nature of problems being solved. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_data_cleaning_corrected.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eData Exploration\u003c/h2\u003e\n\n\u003cp\u003eData exploration or Exploratory Data Analysis (EDA) helps highlight the patterns and relations in data. Exploratory analysis may involve the following activities:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCalculating basic descriptive statistics such as the mean, the median, and the mode\u003c/li\u003e\n\u003cli\u003eCreating a range of plots including histograms, scatter plots, and distribution curves to identify trends in the data\u003c/li\u003e\n\u003cli\u003eOther interactive visualizations to focus on a specific segments of data \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_exploration.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eFeature Engineering\u003c/h2\u003e\n\n\u003cp\u003eA \"Feature\" is a measurable attribute of the phenomenon being observed - the number of bedrooms in a house or the weight of a vehicle. Based on the nature of the analytical question asked in the first step, a Data Scientist may have to engineer additional features not found in the original dataset. Feature engineering is the process of using expert knowledge to transform raw data into meaningful features that directly address the problem you are trying to solve. For example, taking weight and height to calculate Body Mass Index for the individuals in the dataset. This stage will substantially influence the accuracy of the predictive model you construct in the next stage. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_engineering.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003ch2\u003ePredictive Modeling\u003c/h2\u003e\n\n\u003cp\u003eModeling is the stage where you use mathematical and/or statistical approaches to answer your analytical question. Predictive Modeling refers to the process of using probabilistic statistical methods to try to predict the outcome of an event. For example, based on employee data, an organization can develop a predictive model to identify employee attrition rate in order to develop better retention strategies.\u003c/p\u003e\n\n\u003cp\u003eChoosing the \"right\" model is often a challenging decision as there is never a single right answer. Selecting a model involves balancing the accuracy and computational cost of the analysis process. For example, some recent approaches in predictive modeling such as deep learning have been shown to offer vastly improved accuracy of results, but with a very high computational cost.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_predictive.png\" width=\"250\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eData Visualization\u003c/h2\u003e\n\n\u003cp\u003eAfter deriving the required results from a statistical model, visualizations are normally used to summarize and present the findings of the analysis process in a form which is easily understandable by non-technical decision makers. \u003c/p\u003e\n\n\u003cp\u003eData visualization could be thought of as an evolution of visual communication techniques as it deals with the visual representation of data. There are a wide range of different data visualization techniques, from bar graphs, line graphs and scatter plots to alluvial diagrams and spatio-temporal visualizations, each of which will work better for presenting certain types of information.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_visualization.png\" width=\"650\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we looked at the end-to-end Data Science process to give a sense of the activities that Data Scientists engage with.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-the-data-science-process\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-the-data-science-process\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-the-data-science-process/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"setting-up-a-professional-data-science-environment-windows-installation","title":"Setting up a Professional Data Science Environment - Windows Installation","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-science-env-windows-installation\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-windows-installation\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-windows-installation/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eThere are two major pieces we need to install in order to set you up for success as a professional data scientist! In this lesson, we will be installing Git and Anaconda for Windows.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eInstall Git\u003c/li\u003e\n\u003cli\u003eInstall Anaconda\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eLet’s start by getting Git and Anaconda installed.\u003c/p\u003e\n\u003cp\u003ePlease note - the exact names and versions will change over time.\u003c/p\u003e\n\u003ch2\u003eInstalling Git\u003c/h2\u003e\n\u003ch3\u003eOverview:\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eDownload the install package from \u003ca href=\"https://git-scm.com/download/win\" target=\"_blank\"\u003ehere\u003c/a\u003e.\n\u003cul\u003e\n\u003cli\u003eIf you do not know whether you need the 32 or 64-bit install, check your system type. On Windows 10, head to Settings \u0026gt; System \u0026gt; About. Under the Device specifications header, next to System type, you’ll see if Windows and your processor are 32-bit or 64-bit.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOpen the downloaded exe file\n\u003cul\u003e\n\u003cli\u003eYou can either click the downloaded file at the bottom of your browser to open, or navigate to your downloads folder\u003c/li\u003e\n\u003cli\u003eIt may open a window asking if you want to allow this application to make changes to your device, click “Yes”\u003c/li\u003e\n\u003cli\u003eClick “Next” to accept the license\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSelect the installation desination\n\u003cul\u003e\n\u003cli\u003eThe default option is recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSelect components\n\u003cul\u003e\n\u003cli\u003eMake sure to keep the “Windows Explorer integration” options checked\u003c/li\u003e\n\u003cli\u003eOtherwise, the default options are recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eChoose a default editor that you are comfortable with, or choose either Nano or Visual Studio Code if you have not used an editor before\n\u003cul\u003e\n\u003cli\u003eIf you know or have used vi/vim, feel free to use it (otherwise it is not recommended)\u003c/li\u003e\n\u003cli\u003eYou must have the editor installed to continue. You can set a default now and change it later.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAdjust the PATH environment\n\u003cul\u003e\n\u003cli\u003eSelect “Use Git from the Windows Command Prompt”\u003c/li\u003e\n\u003cli\u003eThe first option is also fine, as you’ll mainly be using Git from the new “Git Bash” program that is being installed, but the second option is ideal as it’ll give you the option of using it through either Git Bash or the Windows Command Prompt in the future if you wish\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eChoose HTTPS transport backend.\n\u003cul\u003e\n\u003cli\u003eSelect the “Use the OpenSSL library” option\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConfigure line-ending conversions\n\u003cul\u003e\n\u003cli\u003eThe default option is recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConfigure the terminal emulator\n\u003cul\u003e\n\u003cli\u003eSelect MinTTY as the default terminal emulator\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eChoose the default behavior of \u003ccode\u003egit pull\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003eThe default option is recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConfigure extra options to enable file system caching\u003c/li\u003e\n\u003cli\u003eChoose a credential helper\n\u003cul\u003e\n\u003cli\u003eSelect Git Credential Manager\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWait while Git is installed onto your computer\u003c/li\u003e\n\u003cli\u003eClick \"Finish\" to complete set-up\n\u003cul\u003e\n\u003cli\u003eIt is not necessary to view the release notes\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e* It is \u003cstrong\u003estrongly recommended\u003c/strong\u003e that you select any options to install and use the \"Git Bash\" shell - it's generally included by default. The Git Bash shell will allow students with either Windows or Mac computers to run the same set of commands, and all commands in this program follow that convention.\u003c/p\u003e\n\u003cp\u003eNote - if there are any differences in the options provided in the installer you download, accept the defaults.\u003c/p\u003e\n\u003ch4\u003eGit Installation Step-by-Step:\u003c/h4\u003e\n\u003cp\u003e\u003ciframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vSB09TxDpbxOjud38L2dX0_YJbh2JOVDMYqkTOxhEbhKKLjCmwM9JP27JTJ8VtOYAwnPzlJg_Ipf7gd/embed?start=false\u0026amp;loop=false\u0026amp;delayms=3000\" width=\"960\" height=\"569\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003ch3\u003eConfirming Your Git Installation\u003c/h3\u003e\n\u003cp\u003eTo confirm you have installed Git successfully:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eOpen a terminal window\n\u003cul\u003e\n\u003cli\u003eWhen we ask you to use the terminal, we mean the Git Bash application we just installed through Git\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eType \u003ccode\u003egit --version\u003c/code\u003e: It should return the version of git you are running\u003c/li\u003e\n\u003c/ol\u003e\n\u003chr\u003e\n\u003ch2\u003eInstalling Anaconda\u003c/h2\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-windows-installation/master/images/win_anaconda.png\" width=\"650\"\u003e\u003c/p\u003e\n\u003cp\u003eThe easiest way to get set up with Python and Jupyter Notebook so you can start coding is to install the Anaconda distribution.\u003c/p\u003e\n\u003ch3\u003eOverview:\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eDownload the latest version of Anaconda \u003ca href=\"https://www.anaconda.com/download/#windows\" target=\"_blank\"\u003ehere\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003eSame as with the Git installation - If you do not know whether you need the 32 or 64-bit install, check your system type.\u003c/li\u003e\n\u003cli\u003eA window may pop up asking if you want to give Anaconda your information in return for a cheat sheet - you do not need to do so unless you want to.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOpen the .exe file once it has downloaded to open the Anaconda installer\n\u003cul\u003e\n\u003cli\u003eClick \"Next\", then \"I Agree\" to accept the license\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eInstall for \"Just Me\"\u003c/li\u003e\n\u003cli\u003eSelect the destination folder\n\u003cul\u003e\n\u003cli\u003eThe default option is recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eChoose both Advanced Installation Options\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003eAlthough you will see a warning from the installer, \u003cstrong\u003e\u003cem\u003emake sure\u003c/em\u003e\u003c/strong\u003e to choose \u003cem\u003eboth\u003c/em\u003e \"Add Anaconda to my PATH environment variable\" \u003cem\u003eand\u003c/em\u003e \"Register Anaconda as my default Python\" !!\u003c/li\u003e\n\u003cli\u003eFor this program, these options will actually avoid you needed to uninstall and reinstall Anaconda in the near future, which is what they're warning about\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWait while Anaconda is installed on your computer\n\u003cul\u003e\n\u003cli\u003eYou can ignore any supplementary materials advertised, such as PyCharm\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhen it thanks you for installing Anaconda, click \"Finish\"\n\u003cul\u003e\n\u003cli\u003eYou do not need to learn more about your installation, and can close the browser window if one opens\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4\u003eAnaconda Installation Step-by-Step:\u003c/h4\u003e\n\u003cp\u003e\u003ciframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vS_m9nr642u3w6p3MmgyvnRWHgVRLVA_8EwsW8UDxgbxmMU2cJ04AkQSbBafLqGOJgQveXLzQtBWIas/embed?start=false\u0026amp;loop=false\u0026amp;delayms=3000\" width=\"960\" height=\"569\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003ch3\u003eConfirming Your Anaconda Installation\u003c/h3\u003e\n\u003cp\u003eTo confirm you have installed Anaconda successfully:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eOpen a terminal window\u003c/li\u003e\n\u003cli\u003eType \u003ccode\u003econda info\u003c/code\u003e: It should return a table of details about your conda installation\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eCongratulations! If you've gotten this far and everything has worked, you have successfully installed Git and Anaconda on your Windows PC!\u003c/p\u003e","frontPage":false},{"exportId":"bash-and-git-recap","title":"Bash and Git - Recap","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-collab-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-collab-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section you took a look at how Git is used for collaboration as part of a development team. This started by practicing navigating directories using the command line and continued by further investigating Git commands. You also practiced creating and maintaining Git repositories including adding, committing, and pushing changes. You saw how to make multiple branches and then merge changes back into the master branch. You also saw how to navigate merge conflicts when the same line of the same file has been edited in both branches trying to be merged. Make sure you continue to head back to the PEP8 and Git documentation for clarification, review, and learn more commands and arguments or style suggestions. \u003c/p\u003e\n\n\u003ch2\u003eBash and the command line\u003c/h2\u003e\n\n\u003cp\u003eRecall some of our primary tools for navigating the command line: \u003ccode\u003ecd\u003c/code\u003e, \u003ccode\u003els\u003c/code\u003e, \u003ccode\u003epwd\u003c/code\u003e, \u003ccode\u003emkdir\u003c/code\u003e, and \u003ccode\u003enano\u003c/code\u003e. You can use \u003ccode\u003ecd ..\u003c/code\u003e to move up a directory level and \u003ccode\u003ecd ~/Documents\u003c/code\u003e for folders starting at the user's home directory. You can use \u003ccode\u003els -a\u003c/code\u003e to view hidden files and \u003ccode\u003els -la\u003c/code\u003e for a long listing of all files. (Again the \u003ccode\u003el\u003c/code\u003e argument is for long form and the \u003ccode\u003ea\u003c/code\u003e in both cases for all files, including those beginning with \u003ccode\u003e.\u003c/code\u003e, indicating that they are hidden.) You can also make directories with the \u003ccode\u003emkdir\u003c/code\u003e command. You saw how to use \u003ccode\u003enano\u003c/code\u003e to make and edit files from the command line. Other editors such as emacs and vim can be worthwhile if you are doing more substantial command line editing. \u003c/p\u003e\n\n\u003ch2\u003eGit\u003c/h2\u003e\n\n\u003cp\u003eRemember that Git was not only designed as a version control system, but a means for collaborative development. It was originally released in 2005 by Linus Torvalds, to help facilitate development of the Linux kernel. While there is still much to learn about Git, you saw some of the primary concepts all developers interact with when using Git to collaborate on projects. \u003c/p\u003e\n\n\u003ch3\u003eGit commands\u003c/h3\u003e\n\n\u003cp\u003eYou've seen a decent amount of Git commands including \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, \u003ccode\u003egit branch\u003c/code\u003e, \u003ccode\u003egit checkout\u003c/code\u003e, and \u003ccode\u003egit merge\u003c/code\u003e. Also its important to know how to access documentation so that you can both review and extend your knowledge. For example, to see a list of git commands in general, start with \u003ccode\u003egit --help\u003c/code\u003e. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-collab-recap/master/images/git_help.png\" width=\"700\"\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can also review individual commands with 'git help ' such as \u003ccode\u003egit help add\u003c/code\u003e (press \u003ccode\u003eq\u003c/code\u003e to quit the documentation.)\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-collab-recap/master/images/git_help_add.png\" width=\"1200\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn the synopsis, you can see optional parameters such as in \u003ccode\u003egit add --all\u003c/code\u003e which you previously used before. \u003c/p\u003e\n\n\u003cp\u003eSimilarly, for the commit documentation, take a look at \u003ccode\u003egit help commit\u003c/code\u003e (and subsequently use \u003ccode\u003eq\u003c/code\u003e to quit.)\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-collab-recap/master/images/git_help_commit.png\" width=\"1000\"\u003e\u003c/p\u003e\n\n\u003cp\u003eHere, you might notice additional arguments that you can begin to use, such as \u003ccode\u003ea\u003c/code\u003e, which you see listed in the synopsis.  Then, if you look under the options header, you will see a full description.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-collab-recap/master/images/git_help_commit_options.png\" width=\"900\"\u003e\u003c/p\u003e\n\n\u003cp\u003eSo for example, you could combine this with the \u003ccode\u003em\u003c/code\u003e option as \u003ccode\u003egit commit -am \"your commit message\"\u003c/code\u003e. (Indeed this is a useful shortcut; by doing this you can bypass the \u003ccode\u003egit add\u003c/code\u003e command in your workflow in updating files being tracked by Git.)\u003c/p\u003e\n\n\u003cp\u003eAt some point, you will also run into some trouble with Git and have merge conflicts or other idiosyncrasies between versions of your code. You have seen how Git annotates merge conflicts, and can also use \u003ccode\u003egit stash\u003c/code\u003e to temporarily store changes.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eOnce again, preliminary tools such as the command line and Git are foundational to managing projects and maintaining code. Similarly, knowing how to access further information quickly is also an indispensable soft skill. Be sure to continue to organize work, modularize, and use version control. Also, keep PEP8 in mind and be thoughtful of how you organize, comment, and structure your code. All of these will make you a better programmer and Data Scientist.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-git-collab-recap\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-git-collab-recap\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-collab-recap/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"mathematical-notation","title":"Mathematical Notation","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mathematical-notation\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mathematical-notation/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn how to read some of the more common mathematical notation that you'll see when reading equations pertaining to Data Science.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRead and understand basic mathematical notation\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eUnderstanding Mathematical Notation\u003c/h2\u003e\n\n\u003cp\u003eWhen learning Data Science, running into dense, arcane-looking mathematical equations is an inevitability. For instance, here's an equation for a machine learning algorithm called a \u003cem\u003eSupport Vector Machine\u003c/em\u003e that you'll learn about later in the course:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5CLARGE%20%5Ctext%7Bminimize:%7D\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5CLARGE%20W(%5Calpha)=-%5Cdisplaystyle%5Csum_%7Bi=1%7D%5E%7B%5Cell%7D%5Calpha_i%20%2B%20%5Cdisplaystyle%5Cfrac%7B1%7D%7B2%7D%5Csum_%7Bi=1%7D%5E%7B%5Cell%7D%5Csum_%7Bj=1%7D%5E%7B%5Cell%7Dy_iy_j%5Calpha_i%5Calpha_j%5Ctextbf%7Bx%7D_i%5Ctextbf%7Bx%7D_j\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5Ctext%7Bsubject%20to:%7D%20%24%20%24%24%20%5CLARGE%20%5Csum_%7B%5Csubstack%7Bi=1%20%5C%5C%200%5Cleq%5Calpha_i%5Cleq%20C%7D%7D%5E%7B%5Cell%7Dy_i%20%5Calpha_i%20=%200\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eDon't stare at this too long, or else you'll get a nosebleed...\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eAt first glance, equations like this often seem impenetrable and impossible to understand. If seeing math like this makes you nervous, don't worry--you're not alone! This is a particularly dense example of mathematical notation, but at the end of the day, it's just a recipe for an algorithm. Whereas we are used to expressing our algorithms in code, mathematicians prefer to use \u003cstrong\u003e\u003cem\u003eMathematical Notation\u003c/em\u003e\u003c/strong\u003e, to express big ideas in small, dense packages full of Greek letters, subscripts, and superscripts. Although these look intimidating in the beginning, they'll seem a lot more manageable once we've learned some basic mathematical notation. \u003c/p\u003e\n\n\u003cp\u003eThe first thing to remember is that there are many, many mathematical symbols. \u003cstrong\u003e\u003cem\u003eDO NOT\u003c/em\u003e\u003c/strong\u003e bother trying to memorize them--that's a waste of time. Instead, keep a cheat sheet handy! And, as with all things, remember that Google is your friend.  There is no shame in looking it up. As a Junior Data Scientist, you're going to be spending an embarrassing amount of time using Google and Stack Overflow to look up things that you don't know. As a Senior Data Scientist, you'll spend the same amount of time doing this--you just won't be embarrassed by it anymore! \u003c/p\u003e\n\n\u003cp\u003eWe've included a cheat sheet in this repo (see below) that you should store in an easy-to-find place on your computer. You'll be using it plenty as a Data Scientist. You'll notice that the cheat sheet also contains examples that go with each notation. Use these to your advantage! Toy examples are your friend. \u003c/p\u003e\n\n\u003cp\u003eThe cheat sheet works wonders for most of the symbols included on that document. However, there are two types of notation that are worth examining in more depth: \u003cstrong\u003e\u003cem\u003eSummations\u003c/em\u003e\u003c/strong\u003e, and \u003cstrong\u003e\u003cem\u003eProducts\u003c/em\u003e\u003c/strong\u003e. \u003c/p\u003e\n\n\u003ch2\u003eSigma Notation (Summations)\u003c/h2\u003e\n\n\u003cp\u003eIn the equation above, you'll notice the following symbol appears:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5Csum\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis is called \u003cstrong\u003e\u003cem\u003eSigma Notation\u003c/em\u003e\u003c/strong\u003e, and is a way of notating \u003cstrong\u003e\u003cem\u003eSummation\u003c/em\u003e\u003c/strong\u003e. \u003c/p\u003e\n\n\u003cp\u003eConsider the following code:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003esum_total = 0\nn = 5\nfor i in range(1, n+1):\n    sum_total += i\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis is pretty simple code--just a for-loop that calculates the sum total of every number between 1 and 5, inclusive (meaning it stops after including 5 in the total, not before, which is why we put \u003ccode\u003en+1\u003c/code\u003e in the range instead of just \u003ccode\u003en\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eA mathematician would express the same algorithm using the following \u003cstrong\u003e\u003cem\u003eSigma Notation\u003c/em\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5CLARGE%5Cdisplaystyle%5Csum_%7Bn=1%7D%5E%7B5%7Dx\"\u003e\u003c/p\u003e\n\n\u003cp\u003ePretty nifty, huh? The equation above says that we should start counting at 1, because we see \u003ccode\u003en=1\u003c/code\u003e under the summation. We should stop once we've hit 5 (inclusive). Our sum totals the sum of each value of X for each step between \u003ccode\u003en=1\u003c/code\u003e and up to (and including) \u003ccode\u003en=5\u003c/code\u003e. \u003c/p\u003e\n\n\u003cp\u003eIf we were to write it out explicitly, it would look like:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5CLARGE%5Cdisplaystyle%5Csum_%7Bn=1%7D%5E%7B5%7Dx=1%2b2%2b3%2b4%2b5\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis was the most simple example of summation since we were just adding in the individual value at each step in the example above. However, we can put anything we want to the right of the Sigma symbol, and this will be what happens at each step. For example, let's consider the following code:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edef f(x):\n    return x**2 - 2\n\nsum_total = 0\nn = 5\nfor i in range(1, n+1):\n    sum_total += f(i)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn the code above, we have a simple function that returns the square of a number, minus 2. This time, the for loop calculates the sum of that function called on every number between 1 and 5, inclusive.  We can write the exact same thing in Sigma Notation as follows:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5CLARGE%5Cdisplaystyle%5Csum_%7Bn=1%7D%5E%7B5%7Dx%5E2-2\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWhich, if \"unrolled\" to show each step, would look like: \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5CLARGE%5Cdisplaystyle%5Csum_%7Bn=1%7D%5E%7B5%7Dx%5E2-2%20=(1%5E2%20-%202)%2b(2%5E2%20-%202)%2b(3%5E2%20-%202)%2b(4%5E2%20-%202)%2b(5%5E2%20-%202)\"\u003e\u003c/p\u003e\n\n\u003cp\u003eFinally, let's consider what this looks like when working with arrays. \u003c/p\u003e\n\n\u003cp\u003eConsider the following code:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003ew = [2.2, 3, -2, 4]\nx = [0.25, 0, 1, -2]\n\nsum_total = 0\n\nfor i in range(len(w)):\n    sum_total += w[i] * x[i]\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn the above example, we use the counter in our for loop as the index to get each subsequent element out of \u003ccode\u003ew\u003c/code\u003e and \u003ccode\u003ex\u003c/code\u003e and multiply them together. We can denote the same thing with Sigma Notation as follows:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5CLARGE%20%5Cdisplaystyle%5Csum_%7Bi=1%7D%5E%7Bw%7D%20w_i%20x_i\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eNOTE:\u003c/em\u003e\u003c/strong\u003e Can you spot the difference? In our for loop, our index starts at 0, while in our Sigma Notation, our index starts at 1. In practice, they still mean the same thing--start at the first element in each list, multiply them, and add them to the sum, and then continue until we've done that for every item in the list \u003ccode\u003ew\u003c/code\u003e. The Sigma Notation starts at 1 because mathematicians start counting at 1, whereas programmers start counting at 0. \u003cstrong\u003e\u003cem\u003eRemember this--it'll save you from buggy code later on!\u003c/em\u003e\u003c/strong\u003e \u003c/p\u003e\n\n\u003ch2\u003ePi Notation (Products)\u003c/h2\u003e\n\n\u003cp\u003eAnother common type of notation is \u003cstrong\u003e\u003cem\u003ePi Notation\u003c/em\u003e\u003c/strong\u003e, which works similarly to Sigma Notation. The only real difference here is that Pi Notation multiplies each step, rather than adds them to a total. With our understanding of Sigma Notation, it isn't that hard to figure out an example of Pi Notation. \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003etotal = 1\nn = 5\n\nfor i in range(1, n+1):\n    total *= i + 2\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn Pi Notation, this would translate to:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5CLARGE%5Cdisplaystyle%5Cprod_%7Bi=1%7D%5E%7B5%7D%20i%20%2b%202\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWhich, when written out completely, would be:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://render.githubusercontent.com/render/math?math=%5CLARGE%20%5Cdisplaystyle%5Cprod_%7Bi=1%7D%5E%7B5%7D%20i%20%2b%202%20=%20(1%20%2b%202)%20*%20(2%20%2b%202)%20*%20(3%20%2b%202)%20*%20(%204%20%2b%202)%20*%20(%205%20%2b%202)\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAs you can see from the example above, there isn't too much of a difference between sigma and pi notation. The only difference is that with Sigma, you add the results of each step, whereas with Pi, you multiply them!\u003c/p\u003e\n\n\u003ch2\u003eA Cheat Sheet For the Rest\u003c/h2\u003e\n\n\u003cp\u003eIn the repo containing this notebook, you'll find a PDF document called \u003ccode\u003efull-notation.pdf\u003c/code\u003e. This PDF is a multi-page cheat sheet containing all the Greek letters, as well as other more obscure symbols, and examples of what they mean. Again, don't try to memorize it--just keep this cheat sheet handy for when you need it. In general, we'll make an effort to explain any new mathematical symbols or notation as they come up in future lessons. However, if you're not sure, don't be afraid to use this cheat sheet and Google!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned about how to read basic Sigma and Pi Notation.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-mathematical-notation\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-mathematical-notation\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-mathematical-notation/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"css-code-along","title":"CSS Code Along","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-css-code-along\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-css-code-along/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIt's time to see some CSS code in action. \u003ca href=\"https://codepen.io/\"\u003eCodepen\u003c/a\u003e is a great tool to easily test HTML and CSS code that you'll see in practice here.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Codepen to preview and modify HTML and CSS files\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eComment and uncomment CSS and HTML\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCode Example HTML Structure\u003c/h2\u003e\n\n\u003cp\u003eThis \u003ca href=\"https://codepen.io/curiositypaths/pen/WddzQM?editors=1100\"\u003ePen\u003c/a\u003e (saved Codepen document) contains an HTML document with the following structure:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body\"\u003e\u003ccode\u003e\u0026lt;body\u0026gt;\u003c/code\u003e\u003c/a\u003e element (root of the html content. In Codepen you will not see a body tag, it's implicitly present and wraps all the HTML content)\u003c/li\u003e\n\u003cli\u003eAn \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article\"\u003e\u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e\u003c/a\u003e tag to define our content as self-contained unit (e.g. blog post, newspaper article)\u003c/li\u003e\n\u003cli\u003eAn \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements\"\u003e\u003ccode\u003e\u0026lt;h1\u0026gt;\u003c/code\u003e\u003c/a\u003e tag to wrap the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e's header text\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p\"\u003e\u003ccode\u003e\u0026lt;p\u0026gt;\u003c/code\u003e\u003c/a\u003e tags to wrap the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e's unstructured text\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul\"\u003e\u003ccode\u003e\u0026lt;ul\u0026gt;\u003c/code\u003e\u003c/a\u003e tags to represent unordered lists\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li\"\u003e\u003ccode\u003e\u0026lt;li\u0026gt;\u003c/code\u003e\u003c/a\u003e tags to wrap each list item\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCode Example CSS Structure\u003c/h2\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://codepen.io/curiositypaths/pen/WddzQM?editors=1100\"\u003ePen\u003c/a\u003e also includes commented-out CSS Code to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eSet the background of the \u003ccode\u003e\u0026lt;body\u0026gt;\u003c/code\u003e element (whole document) to \u003ccode\u003e#00b3e6\u003c/code\u003e (light blue)\u003c/li\u003e\n\u003cli\u003eSets the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e element width to \u003ccode\u003e700px\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eCenters the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e element\u003c/li\u003e\n\u003cli\u003eSets the font family of the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e element to \u003ccode\u003eHelvetica Neue\u003c/code\u003e. Alternative fonts are provided in the event \u003ccode\u003eHelvetica Neue\u003c/code\u003e is not available on your computer\u003c/li\u003e\n\u003cli\u003eSet the background of the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e element to \u003ccode\u003ewhite\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eAdd 30px of white space to the perimeter of the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eSet the \u003ccode\u003efont-size\u003c/code\u003e to \u003ccode\u003e22px\u003c/code\u003e for the element with \u003ccode\u003eid\u003c/code\u003e \u003ccode\u003emain-header\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eSet the \u003ccode\u003efont-style\u003c/code\u003e to \u003ccode\u003eitalic\u003c/code\u003e for elements containing the class \u003ccode\u003eperspective-questions\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCode Along Instructions\u003c/h2\u003e\n\n\u003cp\u003eOpen the \u003ca href=\"https://codepen.io/curiositypaths/pen/WddzQM?editors=1100\"\u003ePen\u003c/a\u003e in a separate browser tab to follow the code along instructions. \u003c/p\u003e\n\n\u003cp\u003eAll the CSS code you need to successfully modify the page is already included but commented out. All you need to do is uncomment all the \u003ccode\u003eCSS declarations\u003c/code\u003e (\u003ccode\u003eproperty-name\u003c/code\u003e:\u003ccode\u003evalue\u003c/code\u003e) one-by-one.\u003c/p\u003e\n\n\u003ch2\u003ePen Screenshot\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-css-code-along/master/images/codepen.jpeg\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eUnstyled HTML Document Screenshot\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-css-code-along/master/images/unstyled-codepen.jpeg\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eStyled HTML Document Screenshot\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-css-code-along/master/images/styled-codepen.jpeg\" width=\"1050\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eCSS Declarations Uncommenting Steps\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-css-code-along/master/images/css-code-codepen.jpg\" width=\"1050\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eAwesome! In this code along you got to preview and practice a standard web development environment and modify CSS code! Specifically, you used Codepen to modify HTML and CSS files. You also learned how commenting/uncommenting works in CSS and HTML!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-css-code-along\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-css-code-along\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-css-code-along/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"html-css-and-web-scraping-introduction","title":"HTML, CSS and Web Scraping - Introduction","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-intro-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-intro-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll begin to investigate content from the web. You'll start by learning a bit of HTML and CSS, the foundations for the web, and from there you'll take a look at how to scrape information from the web in order to systematically create and build datasets that may not be otherwise available to you.\u003c/p\u003e\n\n\u003ch2\u003eHTML, CSS and Web Scraping\u003c/h2\u003e\n\n\u003cp\u003eWhile many companies provide access to information via APIs, sometimes you have to scrape the information that you need for your analysis from web pages designed to be read by people. \u003c/p\u003e\n\n\u003ch3\u003eHTML\u003c/h3\u003e\n\n\u003cp\u003eHTML stands for HyperText Markup Language - the \"language of the web\". You'll start by learning HTML syntax and practice exploring HTML documents. After that, you'll look into the process for handling new HTML elements that you might not have encountered before.\u003c/p\u003e\n\n\u003ch3\u003eCSS\u003c/h3\u003e\n\n\u003cp\u003eCSS or Cascading Style Sheets is how you make web pages look snazzy. You'll see more about how proper web development workflows separate content from presentation.\u003c/p\u003e\n\n\u003ch3\u003eWeb Scraping\u003c/h3\u003e\n\n\u003cp\u003eFinally, you'll practice using Beautiful Soup - a package for scraping websites.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eYou will often find that the information you want to retrieve isn't available via an API. When that's the case, it's incredibly important to be proficient with web scraping so that you can retrieve the information you need for your analysis.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-html-css-scraping-intro-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-html-css-scraping-intro-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-intro-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"json-and-apis-introduction","title":"JSON and APIs - Introduction","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-apis-intro-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-apis-intro-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you’ll learn about an additional data type: JSON (which stands for JavaScript Object Notation), as well as APIs (Application Programming Interfaces).  \u003c/p\u003e\n\n\u003cp\u003eJSON is the new standard data format for the web. An older data format that is still used on the web is XML, or Extensible Markup Language, which you’ll have a chance to learn more about in the Appendix. APIs are one of the many ways you’ll access data as a data scientist.\u003c/p\u003e\n\n\u003ch2\u003eWorking with JSON files\u003c/h2\u003e\n\n\u003cp\u003eA substantial part of the job of a professional data scientist is to find and access data. You've spent a bunch of time looking at how to pull information from relational databases, but there is lots of information you might need to work with that is either not in a relational database, or that is not exposed to you via a relational database. \u003c/p\u003e\n\n\u003cp\u003eFor example, you might work with a third party website that has a lot of geographical data (perhaps points of interest near state highways). Within their company, they may well store the data within a relational database, but you might have to access it using an API (an Application Programming Interface - a way your computer can talk to their computer to go get some information!). Over the next couple of sections, we'll be looking at accessing data through APIs and enough HTML and CSS to get started with web scraping (downloading information automatically from websites). In this section, you'll look at a key data storage format, JSON, that you may well come across when retrieving data from other web applications or from inside your company.\u003c/p\u003e\n\n\u003ch3\u003eJSON\u003c/h3\u003e\n\n\u003cp\u003eYou'll start off this section with a brief introduction to JSON so you know what this file format looks like. You'll then get some hands-on practice loading and parsing data from JSON files into Python.\u003c/p\u003e\n\n\u003ch3\u003eJSON Schemas\u003c/h3\u003e\n\n\u003cp\u003eOnce you've learned how to import data that has been stored in the JSON format, you'll look at JSON schemas - a way to describe the expected structure of a given JSON file.\u003c/p\u003e\n\n\u003ch3\u003eExploring JSON Schemas\u003c/h3\u003e\n\n\u003cp\u003eFinally, you'll get a lot more practice working with JSON schemas, exploring unknown schemas, accessing and manipulating data inside a JSON file and then converting JSON to alternate data formats such as \u003ccode\u003epandas DataFrames\u003c/code\u003e. This lab will be a great chance for you to practice your Python programming skills and get comfortable with importing and transforming JSON data - something you may well have to do on a regular basis as a professional data scientist.\u003c/p\u003e\n\n\u003ch2\u003eAPIs\u003c/h2\u003e\n\n\u003cp\u003eOne of the many ways you'll find yourself accessing data as a professional data scientist is via APIs (Application Programming Interfaces). Typically, you'll send a request and get some data back, often in JSON or XML format. In this section, you'll get some hands-on experience retrieving and working with data provided by a range of different APIs.\u003c/p\u003e\n\n\u003ch3\u003eIntroduction to APIs\u003c/h3\u003e\n\n\u003cp\u003eIn this section, we'll provide a conceptual introduction to various kinds of APIs and some of the reasons that businesses create them. \u003c/p\u003e\n\n\u003ch3\u003eThe Client Server Model\u003c/h3\u003e\n\n\u003cp\u003eWe then look at the basic model of \"clients\" and \"servers\" to provide a framework for thinking about how your \"client\" retrieves information from an API \"server\". \u003c/p\u003e\n\n\u003ch3\u003eThe Request/Response Cycle\u003c/h3\u003e\n\n\u003cp\u003eNext, we'll look at the fundamental mechanism by which web-based APIs are typically accessed - sending an HTTP request and then processing the response provided by the server. We'll also get a little experience working with HTTP requests using the Python \u003ccode\u003e.get()\u003c/code\u003e method within the \u003ccode\u003erequests\u003c/code\u003e package. We also get some hands-on experience retrieving information from NASA using \u003ca href=\"http://open-notify.org/\"\u003eOpen Notify\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003eAPIs and OAuth\u003c/h3\u003e\n\n\u003cp\u003eUsually, access to a given API is limited to avoid abuse. One of the most common mechanisms for identifying your API requests to make sure they fit within acceptable usage guidelines is OAuth - Open Authorization - a standard for authorizing clients across web requests. In this section, we'll provide an overview of what OAuth is and how it works by looking at how it is implemented by Dropbox. \u003c/p\u003e\n\n\u003ch3\u003eWorking with the Yelp API\u003c/h3\u003e\n\n\u003cp\u003eNext, we'll get some practice working with a real API, retrieving information from the Yelp API. \u003c/p\u003e\n\n\u003ch3\u003eCreating interactive maps with Folium\u003c/h3\u003e\n\n\u003cp\u003eWe wrap up the section by creating interactive maps with Folium. In the Appendix, we include a Lab where you can build a Geographic Information System using Folium and data obtained from the Yelp API to display it on an interactive map.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWhether it’s from an API or a NoSQL store, it's quite possible that some of the data you find yourself working with will be stored using JSON. In this section, you'll build the confidence to be able to import and transform such data.\u003c/p\u003e\n\n\u003cp\u003eAlso, many companies provide access to their data via an API, so being able to connect to and work with data provided via an API is a critical skill as a professional data scientist!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-json-apis-intro-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-json-apis-intro-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-json-apis-intro-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"problems-data-science-can-solve","title":"Problems Data Science Can Solve","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-problems-data-science-can-solve\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-problems-data-science-can-solve/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson we will look at what data science is and the different kinds of problems that it can be used to solve. By the end of the lesson you should be able to answer which technique you would use as a professional data scientist for a particular business problem. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the problems data science can solve\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhat Problems Can Data Science Solve?\u003c/h2\u003e\n\n\u003cp\u003eCongratulations on deciding to become a data scientist! Before we dig into the details of the tools and techniques that you'll need to learn, it's important to take a little time to understand what you'll be able to do once you graduate. Here is a list of some of the common types of business problems data scientists are expected to solve. \u003c/p\u003e\n\n\u003ch2\u003e1. Regression: How much or how many?\u003c/h2\u003e\n\n\u003cp\u003eRegression analysis is used to predict a continuous value - such as the number of staff you'll need for a busy shift or the likely sale price of a house. \u003c/p\u003e\n\n\u003ch3\u003eExample:  Sales or Market Forecasts\u003c/h3\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-problems-data-science-can-solve/master/images/Image_185_forecast_corrected.png\" width=\"650\"\u003e\u003c/p\u003e\n\n\u003cp\u003eTraditional trend analysis only looks at how one business entity changes with respect to another. Regression analyses can provide insight into how an outcome will change when several other variables are modified.\u003c/p\u003e\n\n\u003ch2\u003e2. Classification: Which category?\u003c/h2\u003e\n\n\u003cp\u003eClassification is used to predict which category something will fall into. If you're trying to figure out whether a client is likely to default on a loan (i.e., default or no default) or which of your products a customer is likely to prefer, you're dealing with a classification problem.\u003c/p\u003e\n\n\u003ch3\u003eExample: Credit Rating\u003c/h3\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-problems-data-science-can-solve/master/images/credit.png\" width=\"850\"\u003e\u003c/p\u003e\n\n\u003cp\u003eCredit card companies receive hundreds of thousands of applications for new credit cards every week. These applications contain detailed information on social, economic, and personal attributes of applicants. Classification analysis can allow companies to categorize these applications based on the quality of their credit.\u003c/p\u003e\n\n\u003ch2\u003e3. Anomaly detection: Is this weird?\u003c/h2\u003e\n\n\u003cp\u003eAnomaly detection is a common data science technique used to find unusual patterns that do not conform to expected behavior. It has applications across various industries from intrusion detection (identifying strange patterns in network traffic that could signal a hack) to fraud detection in credit card transactions to fault detection in operating environments.\u003c/p\u003e\n\n\u003ch3\u003eExample: Identifying Fraud\u003c/h3\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-problems-data-science-can-solve/master/images/Image_186_fishanomaly.png\" alt=\"img\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis approach focuses on finding \u003cstrong\u003eoutliers\u003c/strong\u003e in the data that appear to have unusual patterns. This serves as a first indication of the presence of fraudulent activity. Such approaches are also frequently applied by large social networks like Facebook, Twitter, etc.\u003c/p\u003e\n\n\u003ch2\u003e4. Recommender systems: Which item would a user prefer?\u003c/h2\u003e\n\n\u003cp\u003eRecommender systems are one of the most popular applications of data science today. They are used to predict user preferences towards a product/service. Almost every major tech company (Amazon, Netflix, Google, Facebook) has applied them in some form or the other. You might have noticed phrases like \"If you like this product, you may also like ...\", \"Users who bought this item also bought ...\", and \"Based on your preferences, we recommend following products to you ...\". You got it, these are all recommender systems in action. \u003c/p\u003e\n\n\u003cp\u003eRecommender systems can help a business retain customers by providing them with tailored suggestions specific to their needs. They can help increase sales and create brand loyalty through relevant personalization. When a customer feels as though they are understood by your brand, they are more likely to stay loyal and continue purchasing through your site.\nAccording to a recent study by McKinsey, up to 75% of what consumers watch on Netflix comes from the company’s recommender system. Retail giant Amazon credits recommender systems with 35% of their revenue. Best Buy decided to focus on their online sales, and in 2016’s second quarter they reported a 23.7% increase, thanks in part to their recommender system. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWhile you're going to learn to use a wide range of tools and techniques throughout this course, most of them will be used to predict a continuous value, to decide the most likely category for a value, to identify anomalies or to provide recommendations.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-problems-data-science-can-solve\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-problems-data-science-can-solve\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-problems-data-science-can-solve/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"python-libraries-numpy-and-pandas-introduction","title":"Python Libraries: Numpy and Pandas - Introduction","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-numpy-and-pandas-section-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-numpy-and-pandas-section-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this section, you'll be introduced to two libraries you will use extensively during your career as a Data Scientist: Numpy and Pandas!\u003c/p\u003e\n\u003ch2\u003ePython and the Open-Source Movement\u003c/h2\u003e\n\u003cp\u003eNow that we've learned some Python skills and have some Data Science knowledge, it's time to start gaining experience with the tools the professionals use. There are two programming languages that are heavily used in Data Science: Python and R. As you've probably surmised by now, we'll be focusing on Python. One of the great benefits of the Python language is that it has a very active open-source community, which means tons of great libraries and frameworks we can use to do the heavy lifting. One of the main reasons that Python is such a great choice for Data Science is that the scientific community has written plenty of great packages to do all advanced things we need. This means that when we use Python, we have access to a wealth of robust, effective tools written and maintained by an army of volunteers and professionals.\u003c/p\u003e\n\u003cp\u003eIn this section, we're going to dig into two of the most foundational libraries in the Data Science toolbox -- \u003cstrong\u003e\u003cem\u003eNumpy\u003c/em\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003cem\u003ePandas\u003c/em\u003e\u003c/strong\u003e!\u003c/p\u003e\n\u003ch2\u003eThe Data Science Stack: Numpy and Pandas\u003c/h2\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-numpy-and-pandas-section-intro/master/numpy-logo.png\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-numpy-and-pandas-section-intro/master/pandas-logo.png\" width=\"50%\" height=\"50%\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eThe two most foundational libraries in the Data Science 'Stack' are \u003cstrong\u003e\u003cem\u003eNumpy\u003c/em\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003cem\u003ePandas\u003c/em\u003e\u003c/strong\u003e. In this section, we're going to dig into both libraries and get a feel for how they can make our lives easier and allow us to do amazing things with data with just a few lines of code.\u003c/p\u003e\n\u003ch3\u003eNumpy: Numerical Computation\u003c/h3\u003e\n\u003cp\u003eThe Python library that's most important to Data Scientists is almost certainly \u003ca href=\"http://www.numpy.org/\"\u003eNumpy\u003c/a\u003e. Numpy is a \u003cem\u003eNumerical Computation\u003c/em\u003e Library, because it provides the building blocks for all of the other amazing Python libraries such as Pandas, in addition to providing a quick and easy way to do advanced mathematical computations. In a few short lessons, we're going to learn all about how Numpy works, how we can use it to quickly perform advanced math and computations, and how it fits into Data Science as a whole.\u003c/p\u003e\n\u003ch3\u003ePandas: For Working With Data\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://pandas.pydata.org/\"\u003ePandas\u003c/a\u003e is a library for data analysis that makes Python a much more effective tool for Data Science. Pandas allows us to create \u003cstrong\u003e\u003cem\u003eDataFrames\u003c/em\u003e\u003c/strong\u003e to organize and work with any dataset. You'll probably recognize DataFrames when you see them -- they look just like an Excel Spreadsheet! In this section, we're going to get \u003cstrong\u003eA LOT\u003c/strong\u003e of practice in Pandas. You'll learn how Data Scientists use Pandas to quickly and effectively read, store, manipulate, and export data. The best part is, it's a one-stop shop since it is built on top of libraries like Numpy and Matplotlib!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-numpy-and-pandas-section-intro\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-numpy-and-pandas-section-intro\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-numpy-and-pandas-section-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\n\u003c/footer\u003e","frontPage":false},{"exportId":"combining-dataframes-with-pandas","title":"Combining DataFrames With Pandas","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll learn how to combine DataFrames with concatenation. You'll also learn how to read in tables from SQL databases and store them in DataFrames, as well as the various types of joins that exist and how you can perform them in Pandas.  \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse concatenation to combine DataFrames\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDetermine which type of join is preferred for two tables of data and a task\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUse different types of joins to merge dataframes\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eConcatenating DataFrames\u003c/h2\u003e\n\n\u003cp\u003eRecall that \"concatenation\" means adding the contents of a second collection on to the end of the first collection.  You learned how to do this when working with strings.  For instance:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003eprint('Data ' + 'Science!')\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSince strings are a form of collections in Python, you can concatenate them as above.  \u003c/p\u003e\n\n\u003cp\u003eDataFrames are also collections, so it stands to reason that pandas provides an easy way to concatenate them.  Examine the following diagram from the pandas documentation on concatenation:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-combining-dataframes-pandas/master/images/Image_197_concat.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn this example, three DataFrames have been concatenated, resulting in one larger DataFrame containing the contents in the order they were concatenated.  \u003c/p\u003e\n\n\u003cp\u003eTo perform a concatenation between two or more DataFrames, you pass in an array of the objects to concatenate to the \u003ccode\u003epd.concat()\u003c/code\u003e function, as demonstrated below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003eto_concat = [df1, df2, df3]\nbig_df = pd.concat(to_concat)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that there are many different optional keyword arguments you can set with \u003ccode\u003epd.concat()\u003c/code\u003e -- for a full breakdown of all the ways you can use this function, take a look at the \u003ca href=\"http://pandas.pydata.org/pandas-docs/stable/merging.html\"\u003epandas documentation\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003eKeys and Indexes\u003c/h3\u003e\n\n\u003cp\u003eEvery table in a database has a column that serves as the \u003cstrong\u003e\u003cem\u003ePrimary Key\u003c/em\u003e\u003c/strong\u003e. In pandas, the index is the primary key for that table. You'll use these keys, along with the \u003cstrong\u003e\u003cem\u003eForeign Key\u003c/em\u003e\u003c/strong\u003e, which points to a primary key value in another table, to execute \u003cstrong\u003e\u003cem\u003eJoins\u003c/em\u003e\u003c/strong\u003e. This allows us to \"line up\" information from multiple tables and combine them into one table. You'll learn more about primary keys and foreign keys in the future when you'll dive into SQL and relational databases, so don't worry too much about these concepts now. That said, you can use similar functionality in Pandas.\u003c/p\u003e\n\n\u003cp\u003eOften, it is useful for us to set a column to act as the index for a DataFrame.  To do this, you would type:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003esome_dataframe.set_index('name_of_index_column', inplace=True)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that this will mutate the dataset in place and set the column with the specified name as the index column of the DataFrame.  If \u003ccode\u003einplace\u003c/code\u003e is not specified it will default to False, meaning that a copy of the DataFrame with the requested changes will be returned, but the original object will remain unchanged. \u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eNOTE:\u003c/em\u003e\u003c/strong\u003e Running cells that make an \u003ccode\u003einplace\u003c/code\u003e change more than once will often cause pandas to throw an error.  If this happens, just restart the kernel.\u003c/p\u003e\n\n\u003cp\u003eBy setting the index columns on DataFrames, you make it easy to join DataFrames later on. Note that this is not always feasible, but it's a useful step when possible.  \u003c/p\u003e\n\n\u003ch3\u003eTypes of Joins\u003c/h3\u003e\n\n\u003cp\u003eJoins are always executed between a \u003cstrong\u003e\u003cem\u003eLeft Table\u003c/em\u003e\u003c/strong\u003e and a \u003cstrong\u003e\u003cem\u003eRight Table\u003c/em\u003e\u003c/strong\u003e.  There are four different types of joins you can execute. Consider the following Venn diagrams:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-combining-dataframes-pandas/master/images/Image_198_joins.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen thinking about joins, it is easy to conceptualize them as Venn diagrams.  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAn \u003cstrong\u003e\u003cem\u003eOuter Join\u003c/em\u003e\u003c/strong\u003e returns all records from both tables \u003c/li\u003e\n\u003cli\u003eAn \u003cstrong\u003e\u003cem\u003eInner Join\u003c/em\u003e\u003c/strong\u003e returns only the records with matching keys in both tables \u003c/li\u003e\n\u003cli\u003eA \u003cstrong\u003e\u003cem\u003eLeft Join\u003c/em\u003e\u003c/strong\u003e returns all the records from the left table, as well as any records from the right table that have a matching key with a record from the left table\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eA \u003cstrong\u003e\u003cem\u003eRight Join\u003c/em\u003e\u003c/strong\u003e returns all the records from the right table, as well as any records from the left table that have a matching key with a record from the right table\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eDataFrames contain a built-in \u003ccode\u003e.join()\u003c/code\u003e method. By default, the table calling the \u003ccode\u003e.join()\u003c/code\u003e method is always the left table.  The following code snippet demonstrates how to execute a join in pandas:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003ejoined_df = df1.join(df2, how='inner')\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that to call \u003ccode\u003e.join()\u003c/code\u003e, you must pass in the right table.  You can also set the type of join to perform with the \u003ccode\u003ehow\u003c/code\u003e parameter.  The options are \u003ccode\u003e'left'\u003c/code\u003e, \u003ccode\u003e'right'\u003c/code\u003e, \u003ccode\u003e'inner'\u003c/code\u003e, and \u003ccode\u003e'outer'\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eIf\u003c/strong\u003e \u003ccode\u003ehow=\u003c/code\u003e \u003cstrong\u003eis not specified, it defaults to \u003ccode\u003e'left'\u003c/code\u003e.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eNOTE:\u003c/em\u003e\u003c/strong\u003e If both tables contain columns with the same name, the join will throw an error due to a naming collision, since the resulting table would have multiple columns with the same name.  To solve this, pass in a value to \u003ccode\u003elsuffix=\u003c/code\u003e or \u003ccode\u003ersuffix=\u003c/code\u003e, which will append this suffix to the offending columns to resolve the naming collisions. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you learned how to use concatenation to join together multiple DataFrames in Pandas.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-combining-dataframes-pandas\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-combining-dataframes-pandas\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"html5-semantic-elements-2","title":"HTML5 Semantic Elements","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/html5-semantic-elements-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/html5-semantic-elements-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou've seen several HTML tags such as \u003ccode\u003ehead\u003c/code\u003e, \u003ccode\u003ebody\u003c/code\u003e, \u003ccode\u003etitle\u003c/code\u003e, and \u003ccode\u003ep\u003c/code\u003e which help organize the various sections of a webpage. The arbitrary container element to organize other pieces of HTML is a \u003ccode\u003ediv\u003c/code\u003e. While flexible and versatile, too many \u003ccode\u003ediv\u003c/code\u003e tags make an HTML document look cluttered and confusing. Even when you identify or classify them with specific names, it's a lot to keep track of. It would be clearer for both developers and browsers to use more descriptive HTML elements to arrange content. That's where semantic elements come in. They allow you to say, \"this isn't \u003cem\u003ejust\u003c/em\u003e a division of text, it's a \u003cem\u003eheader\u003c/em\u003e.\" In this lesson, you'll learn more about these \u003cem\u003esemantic\u003c/em\u003e elements.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the historical reasoning behind semantic elements\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDemonstrate HTML5 semantic element use\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eExplain the Historical Reasoning Behind Semantic Elements\u003c/h2\u003e\n\n\u003cp\u003eWhen developers first began defining containers to structure HTML, they had only\none generic element available to them: the \u003ccode\u003ediv\u003c/code\u003e. Creating complex page layouts\nthen required dozens of \u003ccode\u003ediv\u003c/code\u003e elements that were often difficult to organize or\nlocate within the code. HTML authors needed a way to distinguish one \u003ccode\u003ediv\u003c/code\u003e from another,\nwhich led to \u003ccode\u003eid\u003c/code\u003e and \u003ccode\u003eclass\u003c/code\u003e attributes on elements being misused in an attempt\nto communicate what the \u003ccode\u003ediv\u003c/code\u003e was doing. For example, a document usually has\nonly one header, so it seemed sensible to write \u003ccode\u003ediv id=\"header\"\u003c/code\u003e as a way to\nsay something stronger than, \"this is a text division.\" Developers wanted to\nsay, \"this is a special division of introduction,\" but lacked the specific language\nto express it. They wanted those sections to have a \u003cem\u003esemantic meaning\u003c/em\u003e (more on that later). But the\nHTML language simply didn't have the ability to meet this need.\u003c/p\u003e\n\n\u003cp\u003eNevertheless, many HTML authors\nthought that this was a good idea and an informal standard sprang up around\nadding \u003ccode\u003eid\u003c/code\u003e attributes on elements to express their \"semantic meaning.\"\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;div id=\"header\"\u0026gt;\n  \u0026lt;div class=\"wrapper\"\u0026gt;...\u0026lt;/div\u0026gt;\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWhen the W3C (the organization that oversees the specifications for HTML and\nCSS) started writing the specification for HTML5 they wanted to create new\nelements that would eliminate the need to label so many \u003ccode\u003ediv\u003c/code\u003e elements. The\ngoals were to make the code more readable for developers and more descriptive\nfor browsers. It turned out that many developers were already using the same\nnames to label their elements, such as \u003ccode\u003eid=\"header\"\u003c/code\u003e, \u003ccode\u003eid=\"footer\"\u003c/code\u003e, \u003ccode\u003eid=\"nav\"\u003c/code\u003e,\n\u003ccode\u003eclass=\"article\"\u003c/code\u003e, etc. So HTML5 provided semantic elements that explicitly\ndescribed those functions for developers to use instead.\u003c/p\u003e\n\n\u003cp\u003eWe once used to have to identify a \u003ccode\u003ediv\u003c/code\u003e as our header section.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;div id=\"header\"\u0026gt;...\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNow we use the \u003ccode\u003eheader\u003c/code\u003e element.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;header\u0026gt;\u0026lt;/header\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWhy do we call these \u003cem\u003esemantic\u003c/em\u003e elements? Semantic elements are elements that\nwe use when the content within the element all has the same related \u003cem\u003emeaning\u003c/em\u003e.\nIn our \u003ccode\u003eheader\u003c/code\u003e example above, all the content we would put within the \u003ccode\u003eheader\u003c/code\u003e\nelement would relate to introductory content, such as titles or navigation.\u003c/p\u003e\n\n\u003ch2\u003eDemonstrate HTML5 Semantic Element Use\u003c/h2\u003e\n\n\u003cp\u003eLet's take a layout that uses \u003ccode\u003ediv\u003c/code\u003e elements and convert it to use semantic\nelements instead. This is the markup we begin with:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;div class=\"wrapper\"\u0026gt;\n  \u0026lt;div id=\"header\"\u0026gt;\n     \u0026lt;div id=\"nav\"\u0026gt;...\u0026lt;/div\u0026gt;\n  \u0026lt;/div\u0026gt;\n  \u0026lt;div id=\"main\"\u0026gt;\n    \u0026lt;div id=\"music\"\u0026gt;\n      \u0026lt;div id=\"rock\"\u0026gt;...\u0026lt;/div\u0026gt;\n      \u0026lt;div id=\"jazz\"\u0026gt;...\u0026lt;/div\u0026gt;\n    \u0026lt;/div\u0026gt;\n  \u0026lt;/div\u0026gt;\n  \u0026lt;div id=\"aside\"\u0026gt;...\u0026lt;/div\u0026gt;\n  \u0026lt;div id=\"footer\"\u0026gt;...\u0026lt;/div\u0026gt;\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNow we'll replace each instance of a \u003ccode\u003ediv\u003c/code\u003e with a semantic element that matches\nthe type of content we want it to contain.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;div class=\"wrapper\"\u0026gt;\n  \u0026lt;header\u0026gt;\n     \u0026lt;nav\u0026gt;...\u0026lt;/nav\u0026gt;\n  \u0026lt;/header\u0026gt;\n  \u0026lt;main\u0026gt;\n    \u0026lt;section id=\"music\"\u0026gt;\n      \u0026lt;article id=\"rock\"\u0026gt;...\u0026lt;/article\u0026gt;\n      \u0026lt;article id=\"jazz\"\u0026gt;...\u0026lt;/article\u0026gt;\n    \u0026lt;/section\u0026gt;\n  \u0026lt;/main\u0026gt;\n  \u0026lt;aside\u0026gt;...\u0026lt;/aside\u0026gt;\n  \u0026lt;footer\u0026gt;...\u0026lt;/footer\u0026gt;\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNotice that in cases where the content within the element is not semantically\nrelated or we have the need to create a generic box such as the \u003ccode\u003ewrapper\u003c/code\u003e, we\ncan still use \u003ccode\u003ediv\u003c/code\u003e elements as we please. As a developer, keep in mind that\nwhile these elements are intended for certain content, there are no hard rules\nabout how to configure them. You should feel comfortable configuring them in any\nway that makes the most sense to you and best suits your layout needs.\u003c/p\u003e\n\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.google.com/presentation/d/1tl0aB0EUOhLMi1Xr19UCAUTCY20FRqEDv-oDGg2cTkg/edit?usp=sharing\"\u003ePresentation Slides\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/embed/V28xLFEYaSQ\"\u003eHTML5 Semantic Elements Lecture Video\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://diveintohtml5.info/semantics.html#new-elements\"\u003eDive into HTML5 - Semantic Elements\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\"\u003eMDN - HTML - Element Reference\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIf the content within an element is all semantically related, it is best\npractice to use the appropriate HTML5 semantic element if one applies. This\ncleans up our code and makes it more readable for developers and more\ndescriptive to browsers. There are a variety of semantic elements you can use to\nstructure your content, and you can also still use \u003ccode\u003ediv\u003c/code\u003e elements to create\ngeneric boxes or grouping elements as needed.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"html5-semantic-elements-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"html5-semantic-elements-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/html5-semantic-elements-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"git-version-control-101","title":"Git Version Control 101","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-version-control-101\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-version-control-101/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e“The past is never where you think you left it.” — \u003ca href=\"http://en.wikipedia.org/wiki/Katherine_Anne_Porter\"\u003eKatherine Anne Porter\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eVersion Control is the process of storing multiple versions of a single project, allowing each version to be recalled at a later date.\u003c/p\u003e\n\n\u003cp\u003eThere are a lot of different ways to do version control. You could save a new file every time you make a change, timestamp that file, and place all of those files into a timestamped folder. You could track all of your changes in a spreadsheet with copious notes. Or you could use dedicated version control software. Guess which method programmers use?\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the purpose of version control and Git\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy Use Version Control?\u003c/h2\u003e\n\n\u003cp\u003eLet's think about the future for a second. It's a year or two down the road, and you're working at your dream job (YAY!). You just deployed a new chat feature for the app you're working on. Suddenly, your boss runs over to your desk: \"Wait! We can't deploy the chat yet! Revert! Revert!\"\u003c/p\u003e\n\n\u003cp\u003eWhat do you do? You need to find all of the new code you pushed to the server and delete it. Then you need to find the old code, test it, and re-upload it. So much work to do. Well, since you used version control software, it's as easy as 1, 2, 3. Actually, it's as easy as \u003ccode\u003egit reset --hard \u0026lt;commit id\u0026gt;\u003c/code\u003e... but we'll get to that later. Using version control is useful because it allows you to easily rollback to a previous version of your application, saving you a ton of extra work and time.\u003c/p\u003e\n\n\u003cp\u003eThere are a lot of advantages to version control. It's a great way to keep a backup of your work, it facilitates collaboration, and it gives you the freedom to experiment and try new things without messing up the code base.\u003c/p\u003e\n\n\u003ch2\u003eLocal vs Remote Version Control\u003c/h2\u003e\n\n\u003cp\u003eA local version control system stores all of the information on your computer, locally. This system works great while you work on a project by yourself. However, it becomes cumbersome when you attempt to collaborate.\u003c/p\u003e\n\n\u003cp\u003eSome organizations use a centralized repository on a company server. Think of a repository as a big folder that stores all of the files of a particular project. It is simply the location where a project's data is stored. Users pull only the files they need to work on from the server. The advantage is that multiple people can collaborate and work on the same project at once. The disadvantage of this process is that a user must be connected to the network in order to work on the project.\u003c/p\u003e\n\n\u003cp\u003eWhich brings us to the third system, a distributed version control system. In a distributed system, all users have a complete copy of the entire repository. This means that you can work on the project independent of any network connection. Upon reconnecting, you can push your changes to the server and merge with the server's repository.\u003c/p\u003e\n\n\u003ch2\u003eMeet Git\u003c/h2\u003e\n\n\u003cp\u003eGit is the distributed version control system we use here at The Flatiron School. Git began in 2005 and has quickly grown to be one of the most widely used version control systems in the industry. Because so many companies use Git, it's important that you get used to working with it. We also use GitHub, a popular remote repository hosting service built to integrate seamlessly with Git.\u003c/p\u003e\n\n\u003cp\u003eCheck out some of the resources below to learn more about Git.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Getting-Started-About-Version-Control\"\u003eGetting Started - About Version Control\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/video/what-is-git\"\u003eGit Basics - What is Git?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you were introduced to version control and Git, and the reasons we use it as part of our workflow!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-git-version-control-101\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-git-version-control-101\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-version-control-101/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"collaborating-with-git-branches","title":"Collaborating with Git Branches","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-branches\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-branches/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSo far we've primarily presented Git as a version control system. Not only is Git a good version control system, it is also a marvelous tool for collaboration and team development. In fact, it was originally designed by Linus Torvalds for coordinating development for the Linux kernel. A primary mechanism through which Git collaboration can effectively be organized is the concept of branches. \u003c/p\u003e\n\n\u003cp\u003eTwo golden practices in collaborating with \u003ccode\u003egit\u003c/code\u003e are:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eKeep the \u003ccode\u003emaster\u003c/code\u003e \u003cem\u003ebranch\u003c/em\u003e functional at all times\u003c/li\u003e\n\u003cli\u003eKeep lines of work ( \u003cem\u003ebranches\u003c/em\u003e ) separate from each other\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eLet's explore \u003ccode\u003egit\u003c/code\u003e \u003cem\u003ebranches\u003c/em\u003e and we'll come back to review why these golden practices are so helpful.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain branches and their purpose in git\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate a new branch\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eSwitch between branches\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit merge\u003c/code\u003e to merge different branches\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eIdentify and fix merge conflicts when merging branches\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eDefine a \u003ccode\u003egit\u003c/code\u003e branch\u003c/h2\u003e\n\n\u003cp\u003eA \u003ccode\u003egit\u003c/code\u003e branch is a means to separate a new set of commits or edits from another branch. Typically we create a new branch off of \u003ccode\u003emaster\u003c/code\u003e. If all developers we collaborate with honor golden practice 1, we can trust that \u003ccode\u003emaster\u003c/code\u003e will be a safe starting point. \u003c/p\u003e\n\n\u003cp\u003eWhen we branch, we're creating a separate parallel universe. We can experiment there without any adverse effects to the \u003ccode\u003emaster\u003c/code\u003e branch. It's a contained sandbox where mistakes can be made or ideas can incubate.\u003c/p\u003e\n\n\u003cp\u003eIt's an idea that a lot of fiction has presented in the last 50 years.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eParallel Universe\u003c/th\u003e\n\u003cth\u003eSource\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eMirror Dimension\u003c/td\u003e\n\u003ctd\u003eDr. Strange (2016)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDarkest Timeline\u003c/td\u003e\n\u003ctd\u003e\"Community\" / \"Inspector Spacetime\"\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eThe entire premise of..\u003c/td\u003e\n\u003ctd\u003e\"Dr. Who\"\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eMirror, Mirror (Evil Kirk / Spock)\u003c/td\u003e\n\u003ctd\u003eStar Trek\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cem\u003ePlot Against America\u003c/em\u003e\u003c/td\u003e\n\u003ctd\u003ePhilip Roth\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eThe entire plot of...\u003c/td\u003e\n\u003ctd\u003e\"Primer\" (2004)\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eIf you understand multiple-timeline fiction, you get the idea of branches.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://media.giphy.com/media/aorHd4Tl6qIDK/giphy.gif\" alt=\"Annie Edison Says Farewhen to the Inspector\"\u003e\u003c/p\u003e\n\n\u003cp\u003eBy working in branches, collaborators can work without messing with the main timeline, known as \u003ccode\u003emaster\u003c/code\u003e. OK, so how can we \u003cem\u003eactually\u003c/em\u003e leverage this reality-shattering idea?\u003c/p\u003e\n\n\u003ch2\u003eCreate a new branch\u003c/h2\u003e\n\n\u003cp\u003eLet's suppose a \u003ccode\u003emaster\u003c/code\u003e branch with two commits:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-branches/master/images/new_image_git_1.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eBest practices suggest that any new set of changes related to fixing a bug, creating a feature, or even messing around with experimental code in a \"sandbox\", should be started on a new branch.\u003c/p\u003e\n\n\u003cp\u003eIn order to start a new branch, type: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e$ git branch \u0026lt;new-branch-name\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis creates a new branch. If you wish to see a list of all branches associated with a \u003ccode\u003egit\u003c/code\u003e repo, you can type: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e$ git branch -a\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn case of a branch relating to writing a new feature, you could name the branch \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e. Thus: \u003ccode\u003egit branch add-preprocessing-and-normalization\u003c/code\u003e creates a new branch named \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e. This will take the entire commit history of the branch you're on (usually \u003ccode\u003emaster\u003c/code\u003e) and make it the same history as on the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e branch.\u003c/p\u003e\n\n\u003cp\u003eAt this moment \u003ccode\u003emaster\u003c/code\u003e and \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e \u003cstrong\u003eare the same branches / realities\u003c/strong\u003e etc. \u003c/p\u003e\n\n\u003ch2\u003eSwitch to a new branch\u003c/h2\u003e\n\n\u003cp\u003eIn order to start making changes on your new branch, you need to \"check it\nout.\" After checking a branch out, your commits will be added to that branch's\nhistory. You move between branches with: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e$ git checkout \u0026lt;branch-name\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eProtip\u003c/strong\u003e: You can create and checkout a new branch in one command using:\n\u003ccode\u003egit checkout -b \u0026lt;new-branch-name\u0026gt;\u003c/code\u003e.  This will both create the branch\n\u003ccode\u003enew-branch-name\u003c/code\u003e and move into it by checking it out.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIf you are currently on \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e, you can move back to \u003ccode\u003emaster\u003c/code\u003e\nwith \u003ccode\u003egit checkout master\u003c/code\u003e. You can also type \u003ccode\u003egit checkout -\u003c/code\u003e in order to move\nback to the previous branch.\u003c/p\u003e\n\n\u003cp\u003eWhen you add commits to a branch, you can see the history of the commits by typing: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e$ git log --graph\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe \u003ccode\u003egit log\u003c/code\u003e command displays the history of commits\nfor the branch you're on.  The \u003ccode\u003e--graph\u003c/code\u003e \"flag\" tells \u003ccode\u003egit\u003c/code\u003e to make it pretty,\nlike a timeline. You can use \"Space\" to page down the history of commits. Use\n\u003ccode\u003eq\u003c/code\u003e to exit.\u003c/p\u003e\n\n\u003cp\u003eLet's suppose we added two new commits to our new branch. We could visualize it\nas:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-branches/master/images/new_image_git_2.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eTo make sure that you don't lose work, you should make sure all your changes\nare committed before you switch branches. If you're doing work in\n\u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e that updates \u003ccode\u003emodel.py\u003c/code\u003e, because \u003ccode\u003emaster\u003c/code\u003e \u003cem\u003ealso\u003c/em\u003e has\na \u003ccode\u003emodel.py\u003c/code\u003e file, \u003ccode\u003emaster\u003c/code\u003e could overwrite your changes. Make sure all your\nchanges are committed before you switch branches.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eAdvanced\u003c/strong\u003e: \u003ccode\u003egit\u003c/code\u003e has a powerful feature called \u003ccode\u003estash\u003c/code\u003e which can be used\nwhen you're ready to hold changes-in-progress. When you're very comfortable\nwith \u003ccode\u003egit\u003c/code\u003e, look into it!\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAs you add more commits on the new branch you're changing \u003cem\u003eonly\u003c/em\u003e the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e reality. The \u003ccode\u003emaster\u003c/code\u003e branch \u003cstrong\u003ewill not be changed\u003c/strong\u003e. \u003c/p\u003e\n\n\u003cp\u003eYou can confirm this by first checking out \u003ccode\u003emaster\u003c/code\u003e using \u003ccode\u003egit checkout master\u003c/code\u003e, then use \u003ccode\u003egit log --graph\u003c/code\u003e again, and you can see that the \u003ccode\u003emaster\u003c/code\u003e branch \u003cem\u003eonly\u003c/em\u003e has the code up to the moment you \"branched\" into the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e timeline, er, branch.\u003c/p\u003e\n\n\u003cp\u003eThe code from \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e is safely tucked away in that branch, waiting patiently in isolation from the rest of your code in \u003ccode\u003emaster\u003c/code\u003e until the feature is considered complete. Let's talk about merging these commits into \u003ccode\u003emaster\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eMerge a branch into master\u003c/h2\u003e\n\n\u003cp\u003eNow that you have some additions to the code that you'd like to combine back with the \u003ccode\u003emaster\u003c/code\u003e, the goal is to bring the commits that occurred on the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e branch into the \u003ccode\u003emaster\u003c/code\u003e branch. By merging the branch, \u003ccode\u003emaster\u003c/code\u003e will have all of the commits from the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e branch as though those events occurred on the \u003ccode\u003emaster\u003c/code\u003e branch.\u003c/p\u003e\n\n\u003cp\u003eWhen merging a branch with \u003ccode\u003egit merge\u003c/code\u003e, it's important to be currently working on your target branch, the branch that you want to move the content to of the new branch. \u003c/p\u003e\n\n\u003cp\u003eThe first step for our \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e merge is to checkout \u003ccode\u003emaster\u003c/code\u003e because that is where you want the commits to end up. You can then use \u003ccode\u003egit merge \u0026lt;branch-to-merge\u0026gt; -m \"message\"\u003c/code\u003e like shown here: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e$ git checkout master\n$ git merge add-preprocessing-and-normalization -m \"merge in the feature\" \n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNow the branches have been merged. If you type \u003ccode\u003egit log --graph\u003c/code\u003e, you'll see the commits from the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e branch on your \u003ccode\u003emaster\u003c/code\u003e branch.\u003c/p\u003e\n\n\u003cp\u003eHere's another way to visualize it:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-branches/master/images/new_image_git_3.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn this graphic, you might note that a commit happened to \u003ccode\u003emaster\u003c/code\u003e \u003cem\u003ebetween\u003c/em\u003e\nthe two commits that made up our feature branch. The amazing thing is \u003ccode\u003egit\u003c/code\u003e\nreconciles the \u003ccode\u003emaster\u003c/code\u003e timeline, the additional commit, and the commits in\nthis feature branch. It re-weaves multiple realities together. That is\n\u003cem\u003eseriously\u003c/em\u003e cool.\u003c/p\u003e\n\n\u003cp\u003eWhen you're done with a branch that's been merged you can delete it with: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e$ git branch -d \u0026lt;branch-to-delete\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eMerge conflicts\u003c/h2\u003e\n\n\u003cp\u003eOccasionally, when merging two branches, you might run into a message similar to this: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eAuto-merging \u0026lt;filename\u0026gt;\nCONFLICT (content): Merge conflict in \u0026lt;filename\u0026gt;\nAutomatic merge failed; fix conflicts and then commit the result. \n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWhat happened here? Well, you made changes to the same file (\u003ccode\u003e\u0026lt;filename\u0026gt;\u003c/code\u003e in this case) on both the base and the feature branches, and now Git doesn't know which set of changes to retain. In order to resolve this, you need to manually fix the relevant file. To do this, first open the relevant file. After opening the file, you will see conflict markers -- \u003ccode\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; HEAD\u003c/code\u003e, \u003ccode\u003e=======\u003c/code\u003e, and \u003ccode\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; branch-name\u003c/code\u003e. These markers indicate which portions of the file have conflicting changes. The markers and the conflicting changes are represented like this: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e...\n...\neverthing is fine here\n\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; HEAD\n...\n...\nthis is the portion from the destination branch\n=======\n...\n...\nthis is the portion from the source branch\n\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; branch-name\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eAll the lines between \u003ccode\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; HEAD\u003c/code\u003e and \u003ccode\u003e=======\u003c/code\u003e are the conflicting lines from the base branch and all lines between \u003ccode\u003e=======\u003c/code\u003e and \u003ccode\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; branch-name\u003c/code\u003e are the conflicting lines from the \u003ccode\u003e\u0026lt;branch-name\u0026gt;\u003c/code\u003e branch. Here you can discard the set of conflicting lines of your choice and then delete the conflict markers (\u003ccode\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; HEAD\u003c/code\u003e, \u003ccode\u003e=======\u003c/code\u003e, and \u003ccode\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; branch-name\u003c/code\u003e). After you do this, add and commit your changes so you can merge the branches without any issues. \u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eNote: If there are multiple conflicts in the same file, each conflict is surrounded by conflict markers and it is your resposibility to resolve each conflict individually and remove all the conflict markers before you attempt to merge again.\u003c/em\u003e \u003c/p\u003e\n\n\u003ch2\u003eKeep your local repo up to date\u003c/h2\u003e\n\n\u003cp\u003eWhen you are collaborating with several people on a project, it is important that you are always up to date with the changes others are making to the project. Not only will this ensure that you are always working with the latest version of the project, but it will also help reduce merge conflicts! \u003c/p\u003e\n\n\u003cp\u003eThus your local branches can merge in changes from remote repository branches just like they can do for local branches! To update a list of available branches at a remote we use: \u003ccode\u003egit fetch \u0026lt;remote-name\u0026gt;\u003c/code\u003e. Note this only updates the list of branches from remote repositories and not the local branches themselves. If you want to update the local branches, you have to merge. To give you a preview of what merging a remote branch workflow looks like: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e$ git fetch origin \n$ git checkout add-preprocessing-and-normalization \n$ git merge origin/laurens-preprocessing \n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eAnd now our local \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e has Lauren's ideas woven into it.\u003c/p\u003e\n\n\u003cp\u003eAlternatively, as a shorthand, you can fetch and then automatically merge the same-named branch from the remote using \u003ccode\u003egit pull \u0026lt;remote-name\u0026gt; \u0026lt;branch-name-to-merge-in\u0026gt;\u003c/code\u003e. \u003c/p\u003e\n\n\u003ch2\u003eExplain the motivation of the \"Golden Practices\"\u003c/h2\u003e\n\n\u003cp\u003eAs developers we try to make sure that everyone has a clean place to start from: be that for writing a new feature or fixing a bug. Branching lets us keep \u003ccode\u003emaster\u003c/code\u003e working at all times. If an emergency bug comes up, we know we have a\nsolid foundation to build from. Feature branches also help us look at \u003ccode\u003egit log\u003c/code\u003e and see what the intention of a feature was.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eGit is a complex tool, and these tools are just scratching the surface for collaborating with people. These workflows are just being introduced to you -- and it may be challenging for the time being. You'll have lots of time to practice them and get used to what each command does. Don't try to cram it all in at once; instead just start to get an understanding of what is at your disposal.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"http://imgs.xkcd.com/comics/git.png\" alt=\"XKCD Git\"\u003e\u003c/p\u003e\n\n\u003cp\u003eImage courtesy of \u003ca href=\"https://www.xkcd.com/\"\u003exkcd\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eDo not do as stick man suggests!\u003c/em\u003e\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-git-branches\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-git-branches\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-branches/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false}],"assignments":[{"exportId":"g5addbd37c6bd0c0bf58863cef0d0bc3b","title":"Accessing Data within Pandas","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-accessing-data-with-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-accessing-data-with-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g7797ef288b7a71e14dc60f0427256d9c","title":"Accessing Data within Pandas - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-accessing-data-with-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-accessing-data-with-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb635039f7ee8dd492ce99900799212f5","title":"Analyzing Macbeth with Pandas","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-analyzing-macbeth-project-pandas-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-analyzing-macbeth-project-pandas-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g651d51a7eab1c59e4de369853e92aa5b","title":"An Introduction to Web Scraping and Beautiful Soup","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-with-beautiful-soup\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-with-beautiful-soup/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gea3b04a09df945c51bb5d6ac73e901b3","title":"Built-in Python Operators, Functions and Methods","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-operators-functions-and-methods\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-operators-functions-and-methods/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g5b91f624007cabf8550bf3bd8d049e8c","title":"Built-in Python Operators, Functions, and Methods - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-operators-functions-and-methods-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-operators-functions-and-methods-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gf8a411f3b35e7a0674a029d0300af42b","title":"Combining DataFrames with Pandas - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gcf409194525fcc422964ed467b157f09","title":"Control Flow: Conditionals","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-conditionals\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-conditionals/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g2c6fa21bf4d9398fe9890d6ce3cebb65","title":"Control Flow: Conditionals - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-conditionals-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-conditionals-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ga83442b6d6d49d8c0f418a3b5bbbbf51","title":"Covariance and Correlation","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-correlation-covariance\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-correlation-covariance/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g923776a3e7e780ca608dd7ff1bdbc6a5","title":"Covariance and Correlation - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-correlation-covariance-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-correlation-covariance-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ga562909694645a02d9d8437606f8a131","title":"Creating Functions","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-creating-functions\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-creating-functions/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g45b61ea39770eee4639bac29f390b73a","title":"Creating Functions - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-creating-functions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-creating-functions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g3eddc6e815cdd02d455d067757aa807f","title":"Customizing Visualizations with Matplotlib","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-matplotlib\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-matplotlib/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb9411812e62b6117025cdd2ee4fe8906","title":"Customizing Visualizations with Matplotlib - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-matplotlib-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-matplotlib-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g859e9643ebc220619f0bcfd24d3c722c","title":"Database Admin 101","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-database-admin-101\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-database-admin-101/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g9f201cd0ab977366947eb6bb2852525b","title":"Database Admin 101 - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-database-admin-101-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-database-admin-101-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ga7656d62fa4c25292e77b11b8944f9ed","title":"Data Cleaning in Pandas - Introduction","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-pandas-etl\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-pandas-etl/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g970dfa1477f39b9cd65a61cbb7f54579","title":"Data Cleaning in Pandas - Recap","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-summary-data-cleaning-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-summary-data-cleaning-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g15707c5ede0c5cb703e12592df15b52c","title":"Data Visualization","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ga1d4c545e1235cdb50f3cd2d9ec778ac","title":"Data Visualization - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g5a8f3bb6771093dccd6ac02ef1e518af","title":"Data Visualization with Pandas","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-visualization-with-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-visualization-with-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g5117ac59d5ac536eb43580883fdfb066","title":"Dealing with Missing Data - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g7c6aaf80f734171ae48225475fabd0a6","title":"Exploring and Transforming JSON Schemas","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-exploring-and-transforming-json-schemas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-exploring-and-transforming-json-schemas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gd43172b494a4306e95982135ebab5d05","title":"Exploring and Transforming JSON Schemas - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-exploring-and-transforming-json-schemas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-exploring-and-transforming-json-schemas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gbc538c3ad480efa29cdcf410a20bbf21","title":"Filtering and Ordering","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-and-ordering\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-and-ordering/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g829af24e5b4afcd7e1bbd055c3ee9100","title":"Filtering and Ordering - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-and-ordering-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-and-ordering-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g401abd48efe56d8428980d4fd057de6d","title":"Folium - Codealong","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-folium-codealong\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-folium-codealong/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g3d6e153560e3074d5aa7eb387bad3d92","title":"Functions Practice: Building a Calculator","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-building-a-calculator\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-building-a-calculator/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g8ef7254ae10ee7264bc080d0bb90d90c","title":"Functions with Arguments","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-functions-with-arguments\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-functions-with-arguments/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g74c501389e56190e27b8d7fc44731429","title":"Functions With Arguments - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-functions-with-arguments-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-functions-with-arguments-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g32a4f90eca15e7b9fac535f9ea01ce2b","title":"Getting Started with NumPy","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-with-numpy\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-with-numpy/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g6eda5df09815bc8ee8730e88a56a58a2","title":"Getting Started with Numpy - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-with-numpy-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-with-numpy-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g5eea590fb25d935ddf79634e2b31ef1f","title":"Grouping Data with SQL","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-grouping-data-with-sql\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-grouping-data-with-sql/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g1bcd18c22270fd5a208d13f9f6b7e9cb","title":"Grouping Data with SQL - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-grouping-data-with-sql-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-grouping-data-with-sql-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g07b03f843ec99ac407c018628e3d296c","title":"HTTP Request/Response Cycle - Codealong","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-http-request-response-codealong\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-http-request-response-codealong/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g6d2895e57121e3ddd19fb8fcbb935cc0","title":"HTTP Request/Response Cycle - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-http-request-response-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-http-request-response-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gc771b191ce8b6ea1490b348faf8c87ed","title":"Implementing Statistics with Functions - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-implementing-statistics-with-functions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-implementing-statistics-with-functions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g419767fbca3fc28c1c8565d1b22138b2","title":"Importing Data Using Pandas","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-importing-data-using-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-importing-data-using-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g2126000a195d1a72426874e0ff63d841","title":"Importing Data Using Pandas - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-importing-data-using-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-importing-data-using-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gd358758a12ad5b801911943020edad43","title":"Introduction to NumPy","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-numpy\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-numpy/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g48a987adde3bef31abc4eb552e78e9a1","title":"Introduction to Variables: Numeric Types and Booleans","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-floats-ints-booleans\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-floats-ints-booleans/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g715365292afa69e2cac2cf2abb764c98","title":"Introduction to Variables: Strings","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g46ea4ba9b7784532cc0f648a44aef762","title":"Introduction to Variables: Strings and Numeric Types - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings-floats-ints-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings-floats-ints-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ga6b0b9c2e0c5a5fd462ef86dd99ffe69","title":"Introduction to Variables: Strings - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g888b6eb376c7a6b277b962c16ad651c0","title":"Introduction to Variables: Variable Assignment","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-variable-assignment-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-variable-assignment-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gc362b41cff5de67c8ec530827501d7a6","title":"Introduction to Variables: Variable Assignment - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-variable-assignment-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-variable-assignment-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g204234e870b8d097eb2c6ecb679b2a2a","title":"Join Statements","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-join-statements\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-join-statements/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gd2969303297a1804d513e1b27a7c4866","title":"Join Statements - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-join-statements-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-join-statements-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb9dcbabfd20ba11d2b9000fef6797854","title":"JSON","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g2c0f4457f6c84f82938c90d6ee6637ef","title":"JSON - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-lab-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-lab-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g97797e2e6ed4ea8697d8b4fad24cdbc6","title":"Lambda Functions","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lambda-functions\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lambda-functions/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g6a507b19011a997f91907be1df11a5ed","title":"Lambda Functions - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lambda-functions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lambda-functions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gf00b1a001ba103961287442f21b15849","title":"Looping Over Collections","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-looping-over-collections\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-looping-over-collections/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g8737619f35a7d7a2cd6136e39eaa3933","title":"Looping Over Collections - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-looping-over-collections-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-looping-over-collections-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gdd32d2b6d80ccd0687fe80deb5cd8f30","title":"Measures of Central Tendency","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-measures-of-central-tendency\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-measures-of-central-tendency/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g4a6ba0714ed616689deebd7f2df9f70c","title":"Measures of Dispersion","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-measures-of-dispersion\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-measures-of-dispersion/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g32b7afc2fe7705aa9a4b33ed1d38b9db","title":"Mini-Project: Analyzing Macbeth","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-analyzing-macbeth-project-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-analyzing-macbeth-project-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g07c480c162c195b5848fcd783fa4a443","title":"Mini-Project - Data Cleaning","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-cleaning-project\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-cleaning-project/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g317a848820421d0d32fa85f7e0d6882a","title":"Mini-Project - EDA with Pandas Using the Ames Housing Data","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-eda-with-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-eda-with-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g5ff195b61acd43200b735ef94bba5e70","title":"MongoDB","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mongodb\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mongodb/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb019af21d29a6bf7c19927515a79b873","title":"MongoDB - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mongodb-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mongodb-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb1ec6c615bd4d6eb9cc617979c2fcf1e","title":"More on Missing Data","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-on-missing-data\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-on-missing-data/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gff107d52f4a62757355f1e8a9bc13952","title":"More on Missing Data - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-on-missing-data-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-on-missing-data-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ga70c38460e6152d1062a65888bda9a04","title":"More Practice with SQL Queries - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-sql-queries-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-sql-queries-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g735cf38bf7ca794ea87c678b1bd81edc","title":"One-to-Many and Many-to-Many Joins","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-one-to-many-and-many-to-many-joins\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-one-to-many-and-many-to-many-joins/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb2ba107c8396f8f6b22a5a336c839ffc","title":"One-to-Many and Many-to-Many Joins - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-one-to-many-and-many-to-many-joins-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-one-to-many-and-many-to-many-joins-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gbccc950221437cbbe6271c82cf9b8e6f","title":"PEP8","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-PEP8\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-PEP8/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gbbcf2e788c36e5a83c9fd1a7e0407d5c","title":"Phase 1 Blog Post","type":"Assignment","content":"\u003cp\u003e\u003cspan\u003ePlease put the URL to your Phase 1 Blog Post here. \u003c/span\u003e\u003cspan\u003eRefer to the \u003c/span\u003e\u003ca title=\"Blogging Overview\" href=\"pages/blogging-overview\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/blogging-overview\" data-api-returntype=\"Page\"\u003eBlogging Overview\u003c/a\u003e\u003cspan\u003e to learn about how to write good blog posts that\u003c/span\u003e\u003cspan style=\"font-family: inherit; font-size: 1rem;\"\u003e meet Flatiron School’s requirements.\u003c/span\u003e\u003c/p\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gab20bd24660d821a3ce2deadf5bdae9e","title":"Phase 1 Project","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-phase-1-project\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-phase-1-project\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-phase-1-project/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eYou've made it all the way through the first phase of this course - take a minute to celebrate your awesomeness!\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-phase-1-project/master/awesome.gif\" alt=\"awesome\"\u003e\u003c/p\u003e\n\u003cp\u003eNow you will put your new skills to use with a large end-of-Phase project! This project should take 20 to 30 hours to complete.\u003c/p\u003e\n\u003ch2\u003eProject Overview\u003c/h2\u003e\n\u003cp\u003eFor this project, you will use exploratory data analysis to generate insights for a business stakeholder.\u003c/p\u003e\n\u003ch3\u003eBusiness Problem\u003c/h3\u003e\n\u003cp\u003eMicrosoft sees all the big companies creating original video content and they want to get in on the fun. They have decided to create a new movie studio, but they don’t know anything about creating movies. You are charged with exploring what types of films are currently doing the best at the box office. You must then translate those findings into actionable insights that the head of Microsoft's new movie studio can use to help decide what type of films to create.\u003c/p\u003e\n\u003ch3\u003eThe Data\u003c/h3\u003e\n\u003cp\u003eIn the folder \u003ccode\u003ezippedData\u003c/code\u003e are movie datasets from:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.boxofficemojo.com/\"\u003eBox Office Mojo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.imdb.com/\"\u003eIMDB\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.rottentomatoes.com/\"\u003eRotten Tomatoes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.themoviedb.org/\"\u003eTheMovieDB\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.the-numbers.com/\"\u003eThe Numbers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIt is up to you to decide what data from this to use and how to use it. If you want to make this more challenging, you can scrape websites or make API calls to get additional data. If you are feeling overwhelmed or behind (e.g. struggled with the Phase 1 Code Challenge), we recommend you use only the following data files:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eimdb.title.basics\u003c/li\u003e\n\u003cli\u003eimdb.title.ratings\u003c/li\u003e\n\u003cli\u003ebom.movie_gross\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\u003cp\u003eThere are three deliverables for this project:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA \u003cstrong\u003eGitHub repository\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eA \u003cstrong\u003eJupyter Notebook\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eA \u003cstrong\u003enon-technical presentation\u003c/strong\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eReview the \"Project Submission \u0026amp; Review\" page in the \"Milestones Instructions\" topic for instructions on creating and submitting your deliverables. Refer to the rubric associated with this assignment for specifications describing high-quality deliverables.\u003c/p\u003e\n\u003ch3\u003eKey Points\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eYour analysis should yield three concrete business recommendations.\u003c/strong\u003e The ultimate purpose of exploratory analysis is not just to learn about the data, but to help an organization perform better. Explicitly relate your findings to business needs by recommending actions that you think the business (Microsoft) should take.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eCommunicating about your work well is extremely important.\u003c/strong\u003e Your ability to provide value to an organization - or to land a job there - is directly reliant on your ability to communicate with them about what you have done and why it is valuable. Create a storyline your audience (the head of Microsoft's new movie studio) can follow by walking them through the steps of your process, highlighting the most important points and skipping over the rest.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eUse plenty of visualizations.\u003c/strong\u003e Visualizations are invaluable for exploring your data and making your findings accessible to a non-technical audience. Spotlight visuals in your presentation, but only ones that relate directly to your recommendations. Simple visuals are usually best (e.g. bar charts and line graphs), and don't forget to format them well (e.g. labels, titles).\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eGetting Started\u003c/h2\u003e\n\u003cp\u003ePlease start by reviewing this assignment, the rubric at the bottom of it, and the \"Project Submission \u0026amp; Review\" page. If you have any questions, please ask your instructor ASAP.\u003c/p\u003e\n\u003cp\u003eNext, we recommend you check out \u003ca href=\"https://github.com/learn-co-curriculum/dsc-project-template\"\u003ethe Phase 1 Project Templates and Examples repo\u003c/a\u003e and use the MVP template for your project.\u003c/p\u003e\n\u003cp\u003eAlternatively, you can fork \u003ca href=\"https://github.com/learn-co-curriculum/dsc-phase-1-project\"\u003ethe Phase 1 Project Repository\u003c/a\u003e, clone it locally, and work in the \u003ccode\u003estudent.ipynb\u003c/code\u003e file. Make sure to also add and commit a PDF of your presentation to your repository with a file name of \u003ccode\u003epresentation.pdf\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003eProject Submission and Review\u003c/h2\u003e\n\u003cp\u003eReview the \"Project Submission \u0026amp; Review\" page in the \"Milestones Instructions\" topic to learn how to submit your project and how it will be reviewed. Your project must pass review for you to progress to the next Phase.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eThis project will give you a valuable opportunity to develop your data science skills using real-world data. The end-of-phase projects are a critical part of the program because they give you a chance to bring together all the skills you've learned, apply them to realistic projects for a business stakeholder, practice communication skills, and get feedback to help you improve. You've got this!\u003c/p\u003e","submissionTypes":"a file upload","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gfbd3769bb4906491f9ea1d00927ff811","title":"Phase 1 Project - GitHub Repository URL","type":"Assignment","content":"\u003cp\u003e\u003cspan\u003ePlease put the URL to your Phase 1 Project GitHub Repository here.\u0026nbsp;\u003c/span\u003e\u003c/p\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ga5eb89b9ae0f0dbb35c6398974de9a66","title":"Pivot Tables with Pandas","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pivot-tables-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pivot-tables-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ge12f9889b1623b735eec4f7030bf01e1","title":"Pivot Tables with Pandas - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pivot-tables-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pivot-tables-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g99f4ce206832333a575602a74f1935b8","title":"Reading API Documentation","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-reading-api-documentation\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-reading-api-documentation/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g18faef54e2dfefc64657193d87bec3be","title":"Roll Call Attendance","type":"Assignment","content":"","submissionTypes":"an external tool","graded":true,"pointsPossible":100.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g2e240e1f72819d18f2ec6e5187a1b9ec","title":"Running Jupyter Notebooks Locally - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-running-jupyter-locally-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-running-jupyter-locally-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g8ebe2e754bd9198649c97c04e3c251ed","title":"Scraping Concerts - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-scraping-concerts-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-scraping-concerts-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g47c1566bb77ecebd9102746e482a0f33","title":"Scraping Images","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-scraping-images\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-scraping-images/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb4296d85b59219588a9c87a36700e759","title":"Seaborn","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-seaborn\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-seaborn/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g7a95815471d92488114eb5729148a248","title":"Seaborn - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-seaborn-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-seaborn-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g9d886ed0045c7a49dd9f67d603eca31c","title":"Selecting Data","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-selecting-data\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-selecting-data/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g517e91c3249f107c7480bfaf610b3a93","title":"Selecting Data - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-selecting-data-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-selecting-data-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g242b6117a78751871d15da228534efa1","title":"SQL Interview Questions - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-interview-questions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-interview-questions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g0aa052ab3eef82bb329a2f33934cd13a","title":"SQL Subqueries","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-subqueries\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-subqueries/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g930debc77ae32fafd0d6d9a1b6397b68","title":"SQL Subqueries - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-subqueries-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-subqueries-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gdf59a4379383c724bc16afc875356a62","title":"Statistical Methods in Pandas - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb23e457b728c32b92045e5c7f5ce9cb6","title":"Subplots and Enumeration - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-subplots-and-enumeration-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-subplots-and-enumeration-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gcc72303544419c96ecd43d696652acaa","title":"Understanding Pandas Series and DataFrames","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-series-and-dataframes\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-series-and-dataframes/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g1990200d5562da8249a83b8fb5784565","title":"Understanding Pandas Series and DataFrames - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-series-and-dataframes-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-series-and-dataframes-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ge32f51922abe58d037f57c1acf773f1f","title":"User Input and Output in Python","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-user-input-and-output-in-python\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-user-input-and-output-in-python/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ga493651484086592815ef3a1cc93f035","title":"Using Nested Loops","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-nested-loops\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-nested-loops/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gcae6fd7a09869609e3efb5d2daaaaca4","title":"Using Nested Loops - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-nested-loops-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-nested-loops-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gd463ccb07777383e6c0ec2121e2f1a09","title":"Using SQL with Pandas","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-sql-with-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-sql-with-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gf2b453be3ccd1ca015621b747ee2f6c5","title":"Using SQL with Pandas - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-sql-with-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-sql-with-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gd5fd604ed10b0ec7ef33d209b8c18c68","title":"Using the Yelp API - Codealong","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-yelp-api-codealong\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-yelp-api-codealong/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g9db9808ad152d529d1e4aee20fdb5e4c","title":"Web Scraping in Practice","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-in-practice\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-in-practice/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g180801c59cfa6ead638e9d80d4765356","title":"Web Scraping - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g1a83228f902fafaa9546efc7c6302310","title":"While Loops, Break and Continue","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-while-loops-break-and-continue\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-while-loops-break-and-continue/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gc24ed56049691264b2a96de36a37926a","title":"While Loops, Break and Continue - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-while-loops-break-and-continue-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-while-loops-break-and-continue-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gca56aeeaeaca1464db3fbee78399cb50","title":"Working With Dictionaries","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dictionaries\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dictionaries/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g39be3133c9db4c67773a63585d808225","title":"Working with Dictionaries - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dictionaries-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dictionaries-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g6d7fb1a92d68f6ded5bdd4a30992033b","title":"Working with Known JSON Schemas","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-working-with-known-json-schemas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-working-with-known-json-schemas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ga1a3cefeccd56ad4712f2b0f5fbc814e","title":"Working with Known JSON Schemas - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-working-with-known-json-schemas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-working-with-known-json-schemas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g667371636918acaa8b5b34f9a7cb1c73","title":"Working with Lists","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lists\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lists/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gfe7cfcefb6c9bbe08d2591fc197125e5","title":"Working with Lists - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lists-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lists-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g7108ac7cf72ef11ca61c7370b34a047f","title":"XML","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-xml-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-xml-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g63db0a41b1f88c8fd664fba98a0d5795","title":"XML - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-xml-lab-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-xml-lab-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb9549d7b1a0cdb3527c7518cab78c9c7","title":"Yelp API - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-yelp-api-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-yelp-api-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g70b028d2d7b521da1389079d00470f8c","title":"Your First Jupyter Notebook!","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-your-first-jupyter-notebook\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-your-first-jupyter-notebook/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null}],"discussion_topics":[],"quizzes":[{"exportId":"g6e01ac1e7aecbdffd81b4b7d8bd25bc5","title":"Dealing with Missing Data - Quiz","type":"Quizzes::Quiz","content":"\u003cp\u003eThis quiz is to check your understanding of strategies we've covered for detecting and dealing with missing data.\u003c/p\u003e","assignmentExportId":"gd41d8cd98f00b204e9800998ecf8427e","questionCount":8,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":8.0,"dueAt":null,"lockAt":null,"unlockAt":"2020-11-30T14:42:18Z"},{"exportId":"g078303dc1afa826a09b81f131fcfc17f","title":"Measures of Central Tendency - Quiz","type":"Quizzes::Quiz","content":"\u003cp\u003e\u003cspan\u003eWhile we recommend using Python to find the answers to these questions, it is not required. You are more than welcome to use a calculator or pencil and paper to solve them, too.\u003c/span\u003e\u003c/p\u003e","assignmentExportId":"gd41d8cd98f00b204e9800998ecf8427e","questionCount":6,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":6.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g7ca22a8676c52e453f4419b44ac05651","title":"Measures of Dispersion - Quiz","type":"Quizzes::Quiz","content":"","assignmentExportId":"gd41d8cd98f00b204e9800998ecf8427e","questionCount":3,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":3.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g61d59a3fd776ba17a8e919888067e79e","title":"NoSQL Databases - Quiz","type":"Quizzes::Quiz","content":"","assignmentExportId":"gd41d8cd98f00b204e9800998ecf8427e","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gc0e5410bdba7c803f63850537ed27e08","title":"Quiz: Git Basics","type":"Quizzes::Quiz","content":"\u003cp\u003e\u003cspan style=\"font-size: 14pt;\"\u003e\u003cstrong\u003eOverview\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 12pt;\"\u003eTake the quiz below to make sure you're familiar with the crucial git commands and workflows to interact with GitHub and Learn.\u003c/span\u003e\u003c/p\u003e","assignmentExportId":"gd41d8cd98f00b204e9800998ecf8427e","questionCount":10,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":10.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g700812abdd7b5476399d5f8895e0246f","title":"SQL Interview Questions - Quiz","type":"Quizzes::Quiz","content":"\u003cp\u003eThis quiz contains questions on topics you can expect to see in an interview pertaining to SQL and Relational Databases. Some of them are multiple choice, while some are short answer. For these short answer questions, double click on the Jupyter Notebook and type your answer below the line.\u003c/p\u003e\n\u003ch2\u003e\u003ca id=\"user-content-question-1\" class=\"anchor\" href=\"https://github.com/learn-co-curriculum/dsc-sql-interview-questions-quiz#question-1\" aria-hidden=\"true\"\u003e\u003c/a\u003e\u003c/h2\u003e","assignmentExportId":"gd41d8cd98f00b204e9800998ecf8427e","questionCount":6,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":6.0,"dueAt":null,"lockAt":null,"unlockAt":null}],"files":[{"type":"file","name":"ComputerRequirements.pdf","size":92559,"files":null},{"type":"folder","name":"course_image","size":null,"files":[]}]}